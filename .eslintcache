[{"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\index.js":"1","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\App.js":"2","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Home.js":"3","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Search.js":"4","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Profile.js":"5","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\About.js":"6","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Admin.js":"7","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\SearchDetail.js":"8","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Login.js":"9","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Signup.js":"10","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\UserDetail.js":"11","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\common\\Layout.js":"12","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Dashboard.js":"13","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\SearchForm.js":"14","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\common\\Loading.js":"15","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\services\\user.service.js":"16","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\services\\auth.service.js":"17","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\utilities\\functions.utilities.js":"18","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\services\\location.services.js":"19","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Statistics.js":"20","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\StatisticsTable.js":"21","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\common\\FormGroup.js":"22","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\utilities\\authHeader.utilities.js":"23","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\utilities\\localStorage.utilities.js":"24","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\CasesGraph.js":"25","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\DeathsGraph.js":"26"},{"size":323,"mtime":1609646050998,"results":"27","hashOfConfig":"28"},{"size":1609,"mtime":1610752906322,"results":"29","hashOfConfig":"28"},{"size":664,"mtime":1610742361112,"results":"30","hashOfConfig":"28"},{"size":7740,"mtime":1610752906325,"results":"31","hashOfConfig":"28"},{"size":1067,"mtime":1609402605776,"results":"32","hashOfConfig":"28"},{"size":1024,"mtime":1610742361109,"results":"33","hashOfConfig":"28"},{"size":2965,"mtime":1610742361109,"results":"34","hashOfConfig":"28"},{"size":4279,"mtime":1610742361114,"results":"35","hashOfConfig":"28"},{"size":4558,"mtime":1610742361112,"results":"36","hashOfConfig":"28"},{"size":9419,"mtime":1610742361115,"results":"37","hashOfConfig":"28"},{"size":7963,"mtime":1610742361118,"results":"38","hashOfConfig":"28"},{"size":2765,"mtime":1610742361120,"results":"39","hashOfConfig":"28"},{"size":7502,"mtime":1610752906323,"results":"40","hashOfConfig":"28"},{"size":6242,"mtime":1610752906325,"results":"41","hashOfConfig":"28"},{"size":471,"mtime":1610742361121,"results":"42","hashOfConfig":"28"},{"size":2987,"mtime":1610742361130,"results":"43","hashOfConfig":"28"},{"size":1274,"mtime":1610742361128,"results":"44","hashOfConfig":"28"},{"size":259,"mtime":1609376227974,"results":"45","hashOfConfig":"28"},{"size":1116,"mtime":1610742361129,"results":"46","hashOfConfig":"28"},{"size":3927,"mtime":1610752906326,"results":"47","hashOfConfig":"28"},{"size":5133,"mtime":1610752906327,"results":"48","hashOfConfig":"28"},{"size":304,"mtime":1610742361119,"results":"49","hashOfConfig":"28"},{"size":359,"mtime":1609402605778,"results":"50","hashOfConfig":"28"},{"size":442,"mtime":1609376227975,"results":"51","hashOfConfig":"28"},{"size":835,"mtime":1610742361110,"results":"52","hashOfConfig":"28"},{"size":833,"mtime":1610752906324,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"10jbua5",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\index.js",[],["112","113"],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\App.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Home.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Search.js",["114"],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Profile.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\About.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Admin.js",["115"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { getAllUsers } from '../services/user.service'\r\nimport {resMessage} from '../utilities/functions.utilities'\r\n\r\nconst Admin = () => {\r\n    const [users, setUsers] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    useEffect(() => {\r\n        getAllUsers().then(response => {\r\n            setUsers(response.data)\r\n            },\r\n            (error) => {\r\n                setMessage(resMessage(error))\r\n                setUsers(error);\r\n              }\r\n        )\r\n    },[])\r\n    return(\r\n        <>\r\n            {users ? (\r\n                <div className='container'>\r\n                    <h2>All Users</h2>\r\n                    {/* {console.log(users)} */}\r\n                    {users.length > 0 ? (\r\n                        <>\r\n                            {users.map(user => (\r\n                                <div key={user._id} className='row'>\r\n                                    <div className='col s12'>\r\n                                        <div className='card'>\r\n                                            <div className='card-content'>\r\n                                                <span className='card-title'>\r\n                                                    <Link to={`/admin/users/${user._id}`}>\r\n                                                        <h4>{user.username}</h4>\r\n                                                    </Link>    \r\n                                                </span>\r\n                                                <p>{user.email}</p>\r\n                                                {user.primaryLocation && \r\n                                                <p>\r\n                                                    {user.primaryLocation.city},{' '}\r\n                                                    {user.primaryLocation.state},{' '} \r\n                                                    {user.primaryLocation.county}{' '}-{' '}\r\n                                                    {user.primaryLocation.country}\r\n                                                </p>}\r\n                                                {user.roles && \r\n                                                    user.roles.map(role => <p key={role._id}>{role.name}</p>)\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </>\r\n                    ) : (\r\n                        <div>No Users to Show!</div>\r\n                    )}\r\n                </div>\r\n            ) : (\r\n                <div className='progress'>\r\n                    <span className='indeterminate'></span>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Admin","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\SearchDetail.js",["116","117"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport Form from 'react-validation/build/form'\r\nimport Input from 'react-validation/build/input'\r\nimport { useParams, Link } from 'react-router-dom'\r\nimport { getOneLocation } from '../services/location.services'\r\nimport { addFavorite, getFavorites, removeFavorite } from '../services/user.service'\r\nimport { getCurrentUser } from '../services/auth.service'\r\n\r\nimport Statistics from './Statistics'\r\nimport '../css/SearchDetail.css'\r\n\r\nconst SearchDetail = () => {\r\n    const form = useRef()\r\n    const [location, setLocation] = useState('')\r\n    const [currentUser, setCurrentUser] = useState(undefined)\r\n    const [favoriteLocations, setFavoriteLocations] = useState([])\r\n    const [message, setMessage] = useState('')\r\n    let { id } = useParams()\r\n\r\n    useEffect(() => {\r\n        getOneLocation(id).then(response => {\r\n            setLocation(response.data)\r\n            },\r\n            (error) => {\r\n                setMessage(error)\r\n                setLocation(error)\r\n            }\r\n        )\r\n        const user = getCurrentUser()\r\n        if(user) {\r\n            setCurrentUser(user)\r\n            getFavorites().then(favorites => {\r\n                setFavoriteLocations(favorites)\r\n            },\r\n            (error) => {\r\n                setMessage(error)\r\n                setFavoriteLocations(error)\r\n            })\r\n        }\r\n    },[])\r\n\r\n    const handleAddFavorite = e => {\r\n        e.preventDefault()\r\n        let user = currentUser.id\r\n        let id = e.target.id.value\r\n\r\n        addFavorite(user,id)\r\n        .then(response => {\r\n            // console.log(response.data)\r\n            setMessage(response.data)\r\n            window.location.reload()\r\n        })\r\n        .catch(err => setMessage(err))\r\n    }\r\n\r\n    const handleRemove = event => {\r\n        event.preventDefault()\r\n        let user = currentUser.id\r\n        let id = (event.target.id.value)\r\n\r\n        removeFavorite(user, id)\r\n        .then(response => {\r\n            // console.log(response.data)\r\n            setMessage(response.data)\r\n            window.location.reload()\r\n        })\r\n        .catch(err => setMessage(err))\r\n    }\r\n\r\n    return(\r\n        <div className='main container'>\r\n            {location ? (\r\n                <div className='row header-container'>\r\n                    <h3>{location.city}, {location.state} - {location.country}</h3>\r\n                    {currentUser ? (\r\n                        <>\r\n                        {(favoriteLocations.length > 0 && favoriteLocations.some(existing => existing._id === location._id)) ? (\r\n                            <Form ref={form} onSubmit={handleRemove}>\r\n                                <Input type='hidden' value={location._id} name='id'/>\r\n                                <Input type='submit' value='Remove from Favorite Locations' name='submit' className='waves-effect waves-light btn'/>\r\n                            </Form>\r\n                        ) : (\r\n                            <Form ref={form} onSubmit={handleAddFavorite}>\r\n                                <Input type='hidden' value={location._id} name='id'/>\r\n                                <Input type='submit' value='Add to Favorite Locations' name='submit' className='waves-effect waves-light btn'/>\r\n                            </Form>\r\n                        )}\r\n                        </>\r\n                    ) : (\r\n                        <div><Link to='/login'>Login</Link> or <Link to='/register'>Register</Link> to add to favorite locations!</div>\r\n                    )}\r\n                    <div className='row back-container'>\r\n                        <Link to='/search' className='waves-effect waves-teal btn-flat'>Back to Map</Link>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className='progress'>\r\n                    <span className='indeterminate'></span>\r\n                </div>\r\n            )}\r\n            <div className='row statistics-container'>\r\n                <Statistics\r\n                    newCountry={location.country}\r\n                    newCounty={location.county}\r\n                    newRegion={location.state}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchDetail","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Login.js",["118"],"import React, { useState, useRef } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Form from 'react-validation/build/form'\r\nimport Input from 'react-validation/build/input'\r\nimport CheckButton from 'react-validation/build/button'\r\n\r\n// Components\r\nimport Loading from './common/Loading'\r\n\r\n// Helper\r\nimport { login } from '../services/auth.service'\r\nimport { resMessage } from '../utilities/functions.utilities'\r\n\r\n//Function given to react-validator\r\nconst required = (value) => {\r\n    if(!value){\r\n        return (\r\n            <div className='alert'>\r\n                This field is required!\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst Login = (props) => {\r\n    const form = useRef()\r\n    const checkBtn = useRef()\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n\r\n    const onChangeUsername = (e) => {\r\n        const username = e.target.value\r\n        setUsername(username)\r\n    }\r\n\r\n    const onChangePassword = (e) => {\r\n        const password = e.target.value\r\n        setPassword(password)\r\n    }\r\n\r\n    const handleLogin = (e) => {\r\n        //Prevent reload of pressing the button\r\n        e.preventDefault()\r\n        //Prevent message clear them out\r\n        setMessage('')\r\n        setLoading(true)\r\n\r\n        // validtes all the fields in your form\r\n        form.current.validateAll()\r\n        \r\n        // Validator stores errors and we can check if errors exist\r\n        if(checkBtn.current.context._errors.length === 0) {\r\n            login(username, password).then(\r\n                ()=> {\r\n                    props.history.push('/dashboard')\r\n                    window.location.reload()\r\n                },\r\n                (error) => {                    \r\n                    // Setting loading to false and return the error\r\n                    setLoading(false)\r\n                    setMessage(resMessage(error))\r\n                }\r\n            )\r\n        } else {\r\n            loading(false)\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"input-field img-container\">\r\n                <img\r\n                    src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n                    alt=\"profile-img\"\r\n                    className=\"profile-img-card\"\r\n                />\r\n\r\n                <Form onSubmit={handleLogin} ref={form}>\r\n                    <label for='username'>Username</label>\r\n                    <div className='input-field'>\r\n                        <Input\r\n                            type=\"text\"\r\n                            // className=\"form-control\"\r\n                            name=\"username\"\r\n                            value={username}\r\n                            onChange={onChangeUsername}\r\n                            validations={[required]}\r\n                        />\r\n                    </div>\r\n\r\n                    <label for='password'>Password</label>\r\n                    <div className='input-field'>\r\n                        <Input\r\n                            type=\"password\"\r\n                            // className=\"form-control\"\r\n                            name=\"password\"\r\n                            value={password}\r\n                            onChange={onChangePassword}\r\n                            validations={[required]}\r\n                        />\r\n                    </div>\r\n                    \r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn waves-effect waves-light\">\r\n                            <span>Login</span>\r\n                            <i class=\"material-icons right\">send</i>\r\n                        </button>   \r\n                    </div>\r\n\r\n                    {message && (\r\n                        <div className='input-field'>\r\n                            <div className='alert alert-danger' role='alert'>\r\n                                {message}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    <CheckButton style={{display: 'none'}} ref={checkBtn}/>\r\n                    \r\n                    <div className=\"input-field\">\r\n                        <p>Not a member? <Link to=\"/register\">Sign Up</Link></p>           \r\n                    </div>\r\n                </Form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Signup.js",["119"],"import React, { useState, useRef } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Form from 'react-validation/build/form'\r\nimport Input from 'react-validation/build/input'\r\nimport CheckButton from 'react-validation/build/button'\r\nimport { isEmail } from \"validator\"\r\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\r\n\r\n//Helper\r\nimport { register, login } from '../services/auth.service'\r\nimport { resMessage } from '../utilities/functions.utilities'\r\n\r\nconst axios = require('axios')\r\nconst GOOGLE_API_KEY = 'AIzaSyDbjklIejS9yn5KhRaEWen72vYpBu_0BZo'\r\n\r\n//Function given to react-validator\r\nconst required = (value) => {\r\n    if(!value){\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//Function that validates username\r\nconst vusername = (value) => {\r\n    if(value.length < 3 || value.length >= 20) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Your username must be between 3 and 20 characters\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//Function that validates passwords\r\nconst vpassword = (value) => {\r\n    if(value.length < 6 || value.length >= 40) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Your password must be between 6 and 40 characters\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst validEmail = (value) => {\r\n    if(!isEmail) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Submitted e-mail not valid\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst Register = (props) => {\r\n    const form = useRef()\r\n    const checkBtn = useRef()\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const [successful, setSuccessful] = useState(false)\r\n    const [country, setCountry] = useState('')\r\n    const [region, setRegion] = useState('')\r\n    const [city, setCity] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    \r\n    const onChangeUsername = (e) => {\r\n        const username = e.target.value\r\n        setUsername(username)\r\n    }\r\n\r\n    const onChangePassword = (e) => {\r\n        const password = e.target.value\r\n        setPassword(password)\r\n    }\r\n\r\n    const onChangeEmail = (e) => {\r\n        const email = e.target.value\r\n        setEmail(email)\r\n    }\r\n\r\n    const onChangeCountry = (val) => {\r\n        console.log(val)\r\n        setCountry(val)\r\n    }\r\n\r\n    const onChangeRegion = (val) => {\r\n        console.log(val)\r\n        setRegion(val)\r\n    }\r\n\r\n    const onChangeCity = (e) => {\r\n        const city = e.target.value\r\n        console.log(city)\r\n        setCity(city)\r\n    }\r\n\r\n    const handleSignup = async (e) => {\r\n        //Prevent reload of pressing the button\r\n        e.preventDefault()\r\n        //Prevent message clear them out\r\n        setMessage(\"\")\r\n        setSuccessful(false)\r\n        //delay for 2 seconds then switch to the login page\r\n        \r\n        \r\n        // validtes all the fields in your form\r\n        form.current.validateAll()\r\n        \r\n        // Validator stores errors and we can check if errors exist\r\n        \r\n        if(checkBtn.current.context._errors.length === 0) {\r\n            //Google API request\r\n            const apiResponse = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${city},${region}&key=${GOOGLE_API_KEY}`)\r\n            //Parses over API and pulls out \"____ County\", replace removes county for disease API\r\n            const county = Object.values(apiResponse.data.results[0])[0][1].long_name.replace(/County/g, '')\r\n            register(username, email, password, country, region, city, county).then(\r\n                (response) => {\r\n                    setMessage(response.data.message)\r\n                    setSuccessful(true)\r\n                    // console.log(\"COUNTY AFTER REGISTER\", county)\r\n                    login(username, password).then(\r\n                        ()=> {\r\n                            props.history.push(\"/dashboard\")\r\n                            window.location.reload()\r\n                        },\r\n                        (error) => {\r\n                            // Checking all the data received from our backend\r\n                            \r\n                            // Setting loading to false and return the error\r\n                            setLoading(false)\r\n                            setMessage(resMessage(error))\r\n                        }\r\n                    )\r\n                },\r\n                (error) => {\r\n                    setMessage(resMessage(error))\r\n                    setSuccessful(false)\r\n                }\r\n            )\r\n\r\n        } else {\r\n            successful(false)\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"input-field img-container\">\r\n                    <img\r\n                        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n                        alt=\"profile-img\"\r\n                        className=\"profile-img-card\"\r\n                    />\r\n                </div>\r\n                <Form onSubmit={handleSignup} ref={form} className=\"form\">\r\n                        <label for='username'>Username</label>\r\n                        <div className='input-field'>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"username\"\r\n                                value={username}\r\n                                placeholder=\"Username\"\r\n                                onChange={onChangeUsername}\r\n                                validations={[required, vusername]}\r\n                            />\r\n                            \r\n                        </div>\r\n\r\n                        <label for=\"email\">Email</label>\r\n                        <div className='input-field'>\r\n                            <Input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                value={email}\r\n                                placeholder=\"Email\"\r\n                                onChange={onChangeEmail}\r\n                                validations={[required, validEmail]}\r\n                            />\r\n                        </div>\r\n\r\n                        <label for='password'>Password</label>\r\n                        <div className='input-field'>\r\n                            <Input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                value={password}\r\n                                placeholder=\"Password\"\r\n                                onChange={onChangePassword}\r\n                                validations={[required, vpassword]}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <CountryDropdown\r\n                                className=\"browser-default\"\r\n                                value={country}\r\n                                onChange={(val) => onChangeCountry(val)} />\r\n                        </div>\r\n\r\n                        <div className=\"input-field\">\r\n                            <RegionDropdown\r\n                                className=\"browser-default\"\r\n                                country={country}\r\n                                value={region}\r\n                                onChange={(val) => onChangeRegion(val)} />\r\n                        </div>\r\n\r\n                        <label for='city'>City</label>\r\n                        <div className='input-field'>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"city\"\r\n                                value={city}\r\n                                placeholder=\"City\"\r\n                                onChange={onChangeCity}\r\n                                validations={[required]}\r\n                            />\r\n                        </div>\r\n                        \r\n\r\n                        <div className=\"input-field\">\r\n                            <button className=\"btn waves-effect waves-light\">\r\n                                <span>Sign Up</span>\r\n                                <i class=\"material-icons right\">send</i>\r\n                            </button>   \r\n                        </div>\r\n\r\n\r\n                        {message && (\r\n                            <div className=\"input-field\">\r\n                                <div className={successful ? \"alert alert-success\" : \"alert alert-danger\"} role=\"alert\">\r\n                                    {message}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        <CheckButton style={{display: \"none\"}} ref={checkBtn}/>\r\n\r\n                        <div className=\"input-field\">\r\n                            <p>Already a member? <Link to=\"/login\">Log In</Link></p>          \r\n                        </div>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\UserDetail.js",["120","121"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport Form from 'react-validation/build/form'\r\nimport Input from 'react-validation/build/input'\r\nimport { useParams } from 'react-router-dom'\r\nimport { getOneUser, getRoles, addUserRoles, removeUserRoles, deleteUser } from '../services/user.service'\r\n\r\nconst UserDetail = (props) => {\r\n    const form = useRef()\r\n    const [user, setUser] = useState('')\r\n    const [roles, setRoles] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    let { id } = useParams()\r\n\r\n    const handleAddRole = (event) => {\r\n        event.preventDefault()\r\n        let roleId = event.target.roleId.value\r\n        let roleName = event.target.roleName.value\r\n        const newRole =\r\n            {\r\n                _id: roleId, \r\n                name: roleName\r\n            }\r\n        // console.log(newRole)\r\n        addUserRoles(id,newRole)\r\n        .then(response => {\r\n            setMessage(response.data)\r\n            window.location.reload()\r\n        })\r\n        .catch(err => setMessage(err))\r\n    }\r\n\r\n    const handleRemoveRole = (event) => {\r\n        event.preventDefault()\r\n        let roleId = event.target.roleId.value\r\n        let roleName = event.target.roleName.value\r\n        const newRole =\r\n            {\r\n                _id: roleId, \r\n                name: roleName\r\n            }\r\n        // console.log(newRole)\r\n        removeUserRoles(id,newRole)\r\n        .then(response => {\r\n            setMessage(response.data)\r\n            window.location.reload()\r\n        })\r\n        .catch(err => setMessage(err))\r\n    }\r\n\r\n    const handleDelete = e => {\r\n        e.preventDefault()\r\n        deleteUser(id)\r\n        .then(\r\n            ()=> {\r\n                props.history.push('/admin')\r\n                window.location.reload()\r\n            }\r\n        )\r\n        .catch(err => {setMessage(err)})\r\n        // console.log(id)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getOneUser(id).then(response => {\r\n            setUser(response.data)\r\n            },\r\n            (error) => {\r\n                setMessage(error)\r\n                setUser(error)\r\n              }\r\n        )\r\n        getRoles().then(response => {\r\n            setRoles(response.data)\r\n            },\r\n            (error) => {\r\n                setMessage(error)\r\n                setRoles(error);\r\n              }\r\n        )\r\n    },[])\r\n    \r\n    return(\r\n        <div className='container'>\r\n            {user ? (\r\n                <div className='row'>\r\n                    <div className='col s12'>\r\n                        <div className='card'>\r\n                            <div className='card-content'>\r\n                            <span className='card-title'><h3>{user.username}</h3></span>\r\n                                <p>{user.email}</p>\r\n                                {user.primaryLocation && \r\n                                <p>\r\n                                    {user.primaryLocation.city},{' '}\r\n                                    {user.primaryLocation.state},{' '} \r\n                                    {user.primaryLocation.county}{' '}-{' '}\r\n                                    {user.primaryLocation.country}\r\n                                </p>}\r\n                                <Form onSubmit={handleDelete} ref={form}>\r\n                                    <Input type='submit' value='Delete User' className='card-action'/>\r\n                                </Form>\r\n                                {user.roles && \r\n                                    user.roles.map(role => \r\n                                    <div key={role._id}>\r\n                                        {/* <p>{role.name}</p> */}\r\n                                        <Form onSubmit={handleRemoveRole} ref={form}>\r\n                                            <Input type='hidden' value={role._id} name='roleId'/>\r\n                                            <Input type='hidden' value={role.name} name='roleName'/>\r\n                                            <Input \r\n                                                type='submit'  \r\n                                                value={`Remove ${role.name.slice(0,1).toUpperCase()+ role.name.slice(1,role.name.length)} Role`} \r\n                                                className='card-action'\r\n                                            />\r\n                                        </Form>\r\n                                    </div>)\r\n                                }\r\n                                {/* {console.log(user)} */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className='progress'>\r\n                    <span className='indeterminate'></span>\r\n                </div>\r\n            )}\r\n            {roles ? (\r\n                <div>\r\n                    <div className='row'>\r\n                        <div className='col s12'>\r\n                            <div className='card'>\r\n                                <div className='card-content'>\r\n                                    <span className='card-title'><h4>Add Roles</h4></span>\r\n                                        {/* {console.log(roles)} */}\r\n                                        {roles.length > 0 ? (\r\n                                            <div>\r\n                                                {/* {console.log(user.roles)} */}\r\n                                                    {roles.map(role => (\r\n                                                        <>\r\n                                                            {(user.roles && user.roles.some(existing => existing._id === role._id)) ? (\r\n                                                                <></>\r\n                                                            ) : (\r\n                                                                <div key={role._id}>\r\n                                                                    {/* <p>{role.name}</p> */}\r\n                                                                    <Form onSubmit={handleAddRole} ref={form}>\r\n                                                                        <Input type='hidden' value={role._id} name='roleId'/>\r\n                                                                        <Input type='hidden' value={role.name} name='roleName'/>\r\n                                                                        <Input \r\n                                                                            type='submit'  \r\n                                                                            value={`Add ${role.name.slice(0,1).toUpperCase()+ role.name.slice(1,role.name.length)} Role`} \r\n                                                                            className='card-action'\r\n                                                                        />\r\n                                                                    </Form>\r\n                                                                </div>\r\n                                                            )}\r\n                                                        </>\r\n                                                    )\r\n                                                )}\r\n                                                \r\n                                        </div>\r\n                                    ) : (\r\n                                        <div>No roles to display!</div>\r\n                                    )\r\n                                }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className='progress'>\r\n                    <span className='indeterminate'></span>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default UserDetail","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\common\\Layout.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Dashboard.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\SearchForm.js",["122","123","124","125"],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\common\\Loading.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\services\\user.service.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\services\\auth.service.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\utilities\\functions.utilities.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\services\\location.services.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Statistics.js",["126","127"],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\StatisticsTable.js",["128"],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\common\\FormGroup.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\utilities\\authHeader.utilities.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\utilities\\localStorage.utilities.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\CasesGraph.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\DeathsGraph.js",[],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":15,"column":24,"nodeType":"135","messageId":"136","endLine":15,"endColumn":37},{"ruleId":"133","severity":1,"message":"137","line":9,"column":12,"nodeType":"135","messageId":"136","endLine":9,"endColumn":19},{"ruleId":"133","severity":1,"message":"137","line":17,"column":12,"nodeType":"135","messageId":"136","endLine":17,"endColumn":19},{"ruleId":"138","severity":1,"message":"139","line":40,"column":7,"nodeType":"140","endLine":40,"endColumn":9,"suggestions":"141"},{"ruleId":"133","severity":1,"message":"142","line":8,"column":8,"nodeType":"135","messageId":"136","endLine":8,"endColumn":15},{"ruleId":"133","severity":1,"message":"143","line":71,"column":12,"nodeType":"135","messageId":"136","endLine":71,"endColumn":19},{"ruleId":"133","severity":1,"message":"137","line":11,"column":12,"nodeType":"135","messageId":"136","endLine":11,"endColumn":19},{"ruleId":"138","severity":1,"message":"139","line":80,"column":7,"nodeType":"140","endLine":80,"endColumn":9,"suggestions":"144"},{"ruleId":"133","severity":1,"message":"145","line":7,"column":43,"nodeType":"135","messageId":"136","endLine":7,"endColumn":60},{"ruleId":"133","severity":1,"message":"146","line":10,"column":8,"nodeType":"135","messageId":"136","endLine":10,"endColumn":17},{"ruleId":"133","severity":1,"message":"147","line":17,"column":8,"nodeType":"135","messageId":"136","endLine":17,"endColumn":18},{"ruleId":"133","severity":1,"message":"148","line":49,"column":20,"nodeType":"135","messageId":"136","endLine":49,"endColumn":30},{"ruleId":"133","severity":1,"message":"149","line":17,"column":12,"nodeType":"135","messageId":"136","endLine":17,"endColumn":21},{"ruleId":"138","severity":1,"message":"150","line":62,"column":8,"nodeType":"140","endLine":62,"endColumn":61,"suggestions":"151"},{"ruleId":"133","severity":1,"message":"152","line":29,"column":11,"nodeType":"135","messageId":"136","endLine":29,"endColumn":20},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"no-unused-vars","'setSearchTerm' is assigned a value but never used.","Identifier","unusedVar","'message' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["155"],"'Loading' is defined but never used.","'loading' is assigned a value but never used.",["156"],"'CountryRegionData' is defined but never used.","'FormGroup' is defined but never used.","'searchTerm' is defined but never used.","'setLoading' is assigned a value but never used.","'recovered' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'county'. Either include it or remove the dependency array.",["157"],"'onRowEdit' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},{"desc":"158","fix":"160"},{"desc":"161","fix":"162"},"Update the dependencies array to be: [id]",{"range":"163","text":"164"},{"range":"165","text":"164"},"Update the dependencies array to be: [region, dayFilter, newCountry, newCounty, newRegion, county]",{"range":"166","text":"167"},[1406,1408],"[id]",[2366,2368],[2540,2593],"[region, dayFilter, newCountry, newCounty, newRegion, county]"]