[{"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\index.js":"1","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\App.js":"2","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\SearchDetail.js":"3","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Search.js":"4","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Home.js":"5","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\About.js":"6","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Login.js":"7","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Dashboard.js":"8","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Signup.js":"9","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Admin.js":"10","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\UserDetail.js":"11","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\common\\Layout.js":"12","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Profile.js":"13","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Statistics.js":"14","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\common\\FormGroup.js":"15","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\SearchForm.js":"16","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\common\\Loading.js":"17","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\services\\location.services.js":"18","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\services\\user.service.js":"19","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\services\\auth.service.js":"20","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\utilities\\functions.utilities.js":"21","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\DeathsGraph.js":"22","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\StatisticsTable.js":"23","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\CasesGraph.js":"24","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\utilities\\authHeader.utilities.js":"25","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\utilities\\localStorage.utilities.js":"26"},{"size":323,"mtime":1609646050998,"results":"27","hashOfConfig":"28"},{"size":1610,"mtime":1610075605809,"results":"29","hashOfConfig":"28"},{"size":3902,"mtime":1609900116145,"results":"30","hashOfConfig":"28"},{"size":8950,"mtime":1610075605811,"results":"31","hashOfConfig":"28"},{"size":788,"mtime":1610083144494,"results":"32","hashOfConfig":"28"},{"size":162,"mtime":1609644719518,"results":"33","hashOfConfig":"28"},{"size":4554,"mtime":1610082654696,"results":"34","hashOfConfig":"28"},{"size":6200,"mtime":1609975915082,"results":"35","hashOfConfig":"28"},{"size":9419,"mtime":1610082738860,"results":"36","hashOfConfig":"28"},{"size":2270,"mtime":1609900116141,"results":"37","hashOfConfig":"28"},{"size":5551,"mtime":1609900116147,"results":"38","hashOfConfig":"28"},{"size":2765,"mtime":1610075605823,"results":"39","hashOfConfig":"28"},{"size":1067,"mtime":1609402605776,"results":"40","hashOfConfig":"28"},{"size":3465,"mtime":1609975915083,"results":"41","hashOfConfig":"28"},{"size":304,"mtime":1610077507185,"results":"42","hashOfConfig":"28"},{"size":6374,"mtime":1610075605811,"results":"43","hashOfConfig":"28"},{"size":471,"mtime":1609900116149,"results":"44","hashOfConfig":"28"},{"size":1116,"mtime":1609987980389,"results":"45","hashOfConfig":"28"},{"size":2987,"mtime":1609988556470,"results":"46","hashOfConfig":"28"},{"size":1274,"mtime":1609981963533,"results":"47","hashOfConfig":"28"},{"size":259,"mtime":1609376227974,"results":"48","hashOfConfig":"28"},{"size":731,"mtime":1609625041040,"results":"49","hashOfConfig":"28"},{"size":4324,"mtime":1609975915083,"results":"50","hashOfConfig":"28"},{"size":734,"mtime":1609625041039,"results":"51","hashOfConfig":"28"},{"size":359,"mtime":1609402605778,"results":"52","hashOfConfig":"28"},{"size":442,"mtime":1609376227975,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"10jbua5",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\index.js",[],["115","116"],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\App.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\SearchDetail.js",["117","118"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport Form from 'react-validation/build/form'\r\nimport Input from 'react-validation/build/input'\r\nimport { useParams, Link } from 'react-router-dom'\r\nimport { getOneLocation } from '../services/location.services'\r\nimport { addFavorite, getFavorites, removeFavorite } from '../services/user.service'\r\nimport { getCurrentUser } from '../services/auth.service'\r\n\r\nimport Statistics from './Statistics'\r\n\r\nconst SearchDetail = () => {\r\n    const form = useRef()\r\n    const [location, setLocation] = useState('')\r\n    const [currentUser, setCurrentUser] = useState(undefined)\r\n    const [favoriteLocations, setFavoriteLocations] = useState([])\r\n    const [message, setMessage] = useState('')\r\n    let { id } = useParams()\r\n\r\n    useEffect(() => {\r\n        getOneLocation(id).then(response => {\r\n            setLocation(response.data)\r\n            },\r\n            (error) => {\r\n                setMessage(error)\r\n                setLocation(error)\r\n            }\r\n        )\r\n        const user = getCurrentUser()\r\n        if(user) {\r\n            setCurrentUser(user)\r\n            getFavorites().then(favorites => {\r\n                setFavoriteLocations(favorites)\r\n            },\r\n            (error) => {\r\n                setMessage(error)\r\n                setFavoriteLocations(error)\r\n            })\r\n        }\r\n    },[])\r\n\r\n    const handleAddFavorite = e => {\r\n        e.preventDefault()\r\n        let user = currentUser.id\r\n        let id = e.target.id.value\r\n\r\n        addFavorite(user,id)\r\n        .then(response => {\r\n            // console.log(response.data)\r\n            setMessage(response.data)\r\n            window.location.reload()\r\n        })\r\n        .catch(err => setMessage(err))\r\n    }\r\n\r\n    const handleRemove = event => {\r\n        event.preventDefault()\r\n        let user = currentUser.id\r\n        let id = (event.target.id.value)\r\n\r\n        removeFavorite(user, id)\r\n        .then(response => {\r\n            // console.log(response.data)\r\n            setMessage(response.data)\r\n            window.location.reload()\r\n        })\r\n        .catch(err => setMessage(err))\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {location ? (\r\n                <div>\r\n                    <h3>{location.city}, {location.state} - {location.country}</h3>\r\n                    {currentUser ? (\r\n                        <>\r\n                        {(favoriteLocations.length > 0 && favoriteLocations.some(existing => existing._id === location._id)) ? (\r\n                            <Form ref={form} onSubmit={handleRemove}>\r\n                                <Input type='hidden' value={location._id} name='id'/>\r\n                                <Input type='submit' value='Remove from Favorite Locations' name='submit'/>\r\n                            </Form>\r\n                        ) : (\r\n                            <Form ref={form} onSubmit={handleAddFavorite}>\r\n                                <Input type='hidden' value={location._id} name='id'/>\r\n                                <Input type='submit' value='Add to Favorite Locations' name='submit'/>\r\n                            </Form>\r\n                        )}\r\n                        </>\r\n                    ) : (\r\n                        <div><Link to='/login'>Login</Link> or <Link to='/register'>Register</Link> to add to favorite locations!</div>\r\n                    )}\r\n                </div>\r\n            ) : (\r\n                <div className='progress'>\r\n                    <span className='indeterminate'></span>\r\n                </div>\r\n            )}\r\n            <Statistics\r\n                newCountry={location.country}\r\n                newCounty={location.county}\r\n                newRegion={location.state}\r\n             />\r\n            <div>\r\n                <Link to='/search'>Back to Map</Link>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchDetail","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Search.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Home.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\About.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Login.js",["119"],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Dashboard.js",["120"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Form from 'react-validation/build/form'\r\nimport Input from 'react-validation/build/input'\r\n\r\nimport Statistics from './Statistics'\r\nimport Loading from './common/Loading'\r\n\r\nimport { getFavorites, getHistory, getPrimaryLocation, editPrimary, removeFavorite } from '../services/user.service'\r\nimport { getCurrentUser } from '../services/auth.service'\r\n      \r\nconst Dashboard = () => {\r\n    const form = useRef()\r\n    const [currentUser, setCurrentUser] = useState(undefined)\r\n    const [userDashboard, setUserDashboard] = useState(undefined)\r\n    const [searchHistory, setSearchHistory] = useState(undefined)\r\n    const [primaryLocation, setPrimaryLocation] = useState(undefined)\r\n    const [primaryCountry, setPrimaryCountry] = useState(undefined)\r\n    const [primaryCounty, setPrimaryCounty] = useState(undefined)\r\n    const [primaryState, setPrimaryState] = useState(undefined)\r\n    \r\n    \r\n    useEffect(()=> {\r\n        const user = getCurrentUser()\r\n        if(user) {\r\n          setCurrentUser(user)\r\n          getFavorites().then(favorites => setUserDashboard(favorites))\r\n          getHistory().then(history => setSearchHistory(history))\r\n        }\r\n      }, [])\r\n\r\n    useEffect(()=> {\r\n        getPrimaryLocation().then(location => {\r\n            setPrimaryLocation(location)\r\n            setPrimaryCountry(location.country)\r\n            setPrimaryCounty(location.county)\r\n            setPrimaryState(location.state)\r\n          })\r\n      }, [])\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        let user = currentUser.id\r\n        \r\n        let id = (event.target.id.value)\r\n        let city = (event.target.city.value)\r\n        let userState = (event.target.userState.value)\r\n        let country = (event.target.country.value)\r\n        let county = (event.target.county.value)\r\n\r\n        editPrimary(user,id,city,userState,country,county)\r\n        .then(response => {\r\n            console.log(response.data)\r\n            window.location.reload()\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    const handleRemove = event => {\r\n        event.preventDefault()\r\n        let user = currentUser.id\r\n        let id = (event.target.id.value)\r\n\r\n        removeFavorite(user, id)\r\n        .then(response => {\r\n            console.log(response.data)\r\n            window.location.reload()\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    return(\r\n        <>\r\n        {currentUser ? (\r\n        <div className='container'>\r\n            <h1>Dashboard - {currentUser.username}</h1>\r\n            {primaryLocation ? (\r\n                <div>\r\n                    <h3>My Primary Location</h3>\r\n                    <div>\r\n                        <h4>{primaryLocation.city}, {primaryLocation.state} - {primaryLocation.country}</h4>\r\n                        <Statistics\r\n                            newCountry={primaryCountry}\r\n                            newCounty={primaryCounty}\r\n                            newRegion={primaryState}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div>No Primary Location set</div>\r\n            )}\r\n        </div>\r\n        ) : (\r\n            <div>Please <Link to='/login'>Login</Link> or <Link to='/register'>Register</Link> to add to view this page</div>\r\n        )}\r\n        {userDashboard ? (\r\n        <div>\r\n            {/* {setLoading(false)} */}\r\n            {/* {console.log(userDashboard)} */}\r\n            {userDashboard.length > 0 ? (\r\n                <div>\r\n                <h2>My Locations</h2>\r\n                <div>\r\n                    {userDashboard.map(favorite=> (\r\n                        <div key={favorite._id}>\r\n                            <h4>{favorite.city}, {favorite.state} - {favorite.country}</h4>\r\n                            <Form onSubmit={handleSubmit} ref={form}>\r\n                                <Input type='hidden' value={favorite._id} name='id' />\r\n                                <Input type='hidden' value={favorite.city} name='city' />\r\n                                <Input type='hidden' value={favorite.state} name='userState' />\r\n                                <Input type='hidden' value={favorite.country} name='country' />\r\n                                <Input type='hidden' value={favorite.county} name='county' />\r\n                                <Input type='submit' value='Set as Primary Location' name='submit' />\r\n                            </Form>\r\n                            <Form onSubmit={handleRemove} ref={form}>\r\n                                <Input type='hidden' value={favorite._id} name='id' />\r\n                                <Input type='submit' value='Remove from My Locations' name='submit' />\r\n                            </Form>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                </div>\r\n            ) : (\r\n                <div>No Locations to Display!</div>\r\n            )}\r\n        </div>\r\n        ) : (\r\n            <div>\r\n                <div className='progress'>\r\n                    <span className='indeterminate'></span>\r\n                </div>\r\n            </div>\r\n        )}\r\n        {searchHistory ? (\r\n        <div>\r\n            Search History\r\n            {/* {setLoading(false)} */}\r\n            {/* {console.log(searchHistory)} */}\r\n            {searchHistory.length > 0 ? (\r\n                <div>\r\n                <ul>\r\n                    {searchHistory.map((history, index)=> (\r\n                        <li key={index}><Link to= {`/search/${history._id}`}>{history.city}, {history.state}, {history.country}</Link></li>\r\n                    ))}\r\n                </ul>\r\n                </div>\r\n            ) : (\r\n                <div>No Search History to Display! Get started <Link to='/search'>here</Link></div>\r\n            )}\r\n        </div>\r\n        ) : (\r\n            <div>\r\n                <div className='progress'>\r\n                    <span className='indeterminate'></span>\r\n                </div>\r\n            </div>\r\n        )}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Dashboard","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Signup.js",["121"],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Admin.js",["122"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { getAllUsers } from '../services/user.service'\r\nimport {resMessage} from '../utilities/functions.utilities'\r\n\r\nconst Admin = () => {\r\n    const [users, setUsers] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    useEffect(() => {\r\n        getAllUsers().then(response => {\r\n            setUsers(response.data)\r\n            },\r\n            (error) => {\r\n                setMessage(resMessage(error))\r\n                setUsers(error);\r\n              }\r\n        )\r\n    },[])\r\n    return(\r\n        <>\r\n            {users ? (\r\n                <div>\r\n                    <h1>All Users</h1>\r\n                    {/* {console.log(users)} */}\r\n                    {users.length > 0 ? (\r\n                        <div>\r\n                            {users.map(user => (\r\n                                <div key={user._id}>\r\n                                    <Link to={`/admin/users/${user._id}`}>\r\n                                        <h3>{user.username}</h3>\r\n                                    </Link>    \r\n                                    <p>{user.email}</p>\r\n                                    {user.primaryLocation && \r\n                                    <p>\r\n                                        {user.primaryLocation.city},{' '}\r\n                                        {user.primaryLocation.state},{' '} \r\n                                        {user.primaryLocation.county}{' '}-{' '}\r\n                                        {user.primaryLocation.country}\r\n                                    </p>}\r\n                                    {user.roles && \r\n                                        user.roles.map(role => <p key={role._id}>{role.name}</p>)\r\n                                    }\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    ) : (\r\n                        <div>No Users to Show!</div>\r\n                    )}\r\n                </div>\r\n            ) : (\r\n                <div className='progress'>\r\n                    <span className='indeterminate'></span>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Admin","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\UserDetail.js",["123","124"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport Form from 'react-validation/build/form'\r\nimport Input from 'react-validation/build/input'\r\nimport { useParams } from 'react-router-dom'\r\nimport { getOneUser, getRoles, addUserRoles, removeUserRoles, deleteUser } from '../services/user.service'\r\n\r\nconst UserDetail = (props) => {\r\n    const form = useRef()\r\n    const [user, setUser] = useState('')\r\n    const [roles, setRoles] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    let { id } = useParams()\r\n\r\n    const handleAddRole = (event) => {\r\n        event.preventDefault()\r\n        let roleId = event.target.roleId.value\r\n        let roleName = event.target.roleName.value\r\n        const newRole =\r\n            {\r\n                _id: roleId, \r\n                name: roleName\r\n            }\r\n        // console.log(newRole)\r\n        addUserRoles(id,newRole)\r\n        .then(response => {\r\n            setMessage(response.data)\r\n            window.location.reload()\r\n        })\r\n        .catch(err => setMessage(err))\r\n    }\r\n\r\n    const handleRemoveRole = (event) => {\r\n        event.preventDefault()\r\n        let roleId = event.target.roleId.value\r\n        let roleName = event.target.roleName.value\r\n        const newRole =\r\n            {\r\n                _id: roleId, \r\n                name: roleName\r\n            }\r\n        // console.log(newRole)\r\n        removeUserRoles(id,newRole)\r\n        .then(response => {\r\n            setMessage(response.data)\r\n            window.location.reload()\r\n        })\r\n        .catch(err => setMessage(err))\r\n    }\r\n\r\n    const handleDelete = e => {\r\n        e.preventDefault()\r\n        deleteUser(id)\r\n        .then(\r\n            ()=> {\r\n                props.history.push('/admin')\r\n                window.location.reload()\r\n            }\r\n        )\r\n        .catch(err => {setMessage(err)})\r\n        // console.log(id)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getOneUser(id).then(response => {\r\n            setUser(response.data)\r\n            },\r\n            (error) => {\r\n                setMessage(error)\r\n                setUser(error)\r\n              }\r\n        )\r\n        getRoles().then(response => {\r\n            setRoles(response.data)\r\n            },\r\n            (error) => {\r\n                setMessage(error)\r\n                setRoles(error);\r\n              }\r\n        )\r\n    },[])\r\n    \r\n    return(\r\n        <>\r\n            {user ? (\r\n                <div>\r\n                    <h1>{user.username}</h1>\r\n                    <p>{user.email}</p>\r\n                    {user.primaryLocation && \r\n                    <p>\r\n                        {user.primaryLocation.city},{' '}\r\n                        {user.primaryLocation.state},{' '} \r\n                        {user.primaryLocation.county}{' '}-{' '}\r\n                        {user.primaryLocation.country}\r\n                    </p>}\r\n                    <Form onSubmit={handleDelete} ref={form}>\r\n                        <Input type='submit' value='Delete User' />\r\n                    </Form>\r\n                    {user.roles && \r\n                        user.roles.map(role => \r\n                        <div key={role._id}>\r\n                            <p>{role.name}</p>\r\n                            <Form onSubmit={handleRemoveRole} ref={form}>\r\n                                <Input type='hidden' value={role._id} name='roleId'/>\r\n                                <Input type='hidden' value={role.name} name='roleName'/>\r\n                                <Input type='submit'  value='Remove Role'/>\r\n                            </Form>\r\n                        </div>)\r\n                    }\r\n                    {/* {console.log(user)} */}\r\n                </div>\r\n            ) : (\r\n                <div className='progress'>\r\n                    <span className='indeterminate'></span>\r\n                </div>\r\n            )}\r\n            {roles ? (\r\n                <div>\r\n                    <h4>Add Roles</h4>\r\n                {/* {console.log(roles)} */}\r\n                {roles.length > 0 ? (\r\n                    <div>\r\n                        {/* {console.log(user.roles)} */}\r\n                            {roles.map(role => (\r\n                                <>\r\n                                    {(user.roles && user.roles.some(existing => existing._id === role._id)) ? (\r\n                                        <></>\r\n                                    ) : (\r\n                                        <div key={role._id}>\r\n                                            <p>{role.name}</p>\r\n                                            <Form onSubmit={handleAddRole} ref={form}>\r\n                                                <Input type='hidden' value={role._id} name='roleId'/>\r\n                                                <Input type='hidden' value={role.name} name='roleName'/>\r\n                                                <Input type='submit'  value='Add Role'/>\r\n                                            </Form>\r\n                                        </div>\r\n                                    )}\r\n                                </>\r\n                            )\r\n                        )}\r\n                    </div>\r\n                ) : (\r\n                    <div>No roles to display!</div>\r\n                )\r\n            }\r\n                </div>\r\n            ) : (\r\n                <div className='progress'>\r\n                    <span className='indeterminate'></span>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default UserDetail","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\common\\Layout.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Profile.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Statistics.js",["125"],"import React, { useState, useEffect } from 'react'\r\nimport DeathsGraph from './DeathsGraph'\r\nimport CasesGraph from './CasesGraph'\r\nimport StatisticsTable from './StatisticsTable'\r\n\r\n\r\nconst axios = require('axios')\r\n\r\n\r\nconst Statistics = ({newCountry, newCounty, newRegion}) => {\r\n    //Location states\r\n    const [country, setCountry] = useState(newCountry)\r\n    const [county, setCounty] = useState(newCounty)\r\n    const [region, setRegion] = useState(newRegion)\r\n    //API Stats states\r\n    const [confirmedCases, setConfirmedCases] = useState('')\r\n    const [deaths, setDeaths] = useState('')\r\n    const [recovered, setRecovered] = useState('')\r\n    const [updatedAt, setUpdatedAt] = useState('')\r\n    const [historicalDates, setHistoricalDates] = useState([])\r\n    const [historicalCases, setHistoricalCases] = useState([])\r\n    const [historicalDeaths, setHistoricalDeaths] = useState([])\r\n    const [dayFilter, setDayFilter] = useState(30)\r\n\r\n    const onChangeDayFilter = (event, val) => {\r\n        setDayFilter(val)\r\n        console.log(dayFilter)\r\n    }\r\n    \r\n    useEffect(()=> {\r\n        if(newCounty !== undefined) {\r\n            axios.get(`https://disease.sh/v3/covid-19/jhucsse/counties/${newCounty}`)\r\n            .then(response => {\r\n                response.data.forEach(data=> {\r\n                    if(newRegion === data.province) {\r\n                        setCountry(data.country)\r\n                        setCounty(data.county)\r\n                        setRegion(data.province)\r\n                        setConfirmedCases(data.stats.confirmed)\r\n                        setDeaths(data.stats.deaths)\r\n                        setRecovered(data.stats.recovered)\r\n                        setUpdatedAt(data.updatedAt)\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    }, [newCountry, newCounty, newRegion])\r\n\r\n\r\n    useEffect(() => {\r\n        if(region !== undefined) {\r\n            axios.get(`https://disease.sh/v3/covid-19/historical/usacounties/${region.toLowerCase()}?lastdays=${dayFilter}`)\r\n            .then(response => {\r\n                response.data.forEach(data => {\r\n                    if (data.county !== undefined && data.county === county.toLowerCase()) {\r\n                        setHistoricalDates(Object.keys(data.timeline.cases))\r\n                        setHistoricalCases(Object.values(data.timeline.cases))\r\n                        setHistoricalDeaths(Object.values(data.timeline.deaths))\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    }, [region, dayFilter])\r\n\r\n\r\n    return(\r\n        <div>\r\n            Statistics\r\n            <p>Country: {country}</p>\r\n            <p>County: {county}</p>\r\n            <p>State: {region}</p>\r\n            <p>Confirmed Cases: {confirmedCases}</p>\r\n            <p>Deaths: {deaths}</p>\r\n            <p>Recovered: {recovered}</p>\r\n            <p>Last Updated: {updatedAt}</p>\r\n            <h3>Filters: </h3>\r\n            <ul>\r\n                <button onClick={e => onChangeDayFilter(e, 7)}>7 Days</button>\r\n                <button onClick={e => onChangeDayFilter(e, 30)}>30 Days</button>\r\n                <button onClick={e => onChangeDayFilter(e, \"all\")}>All</button>\r\n            </ul>\r\n\r\n            <CasesGraph dates={historicalDates} cases={historicalCases} />\r\n            <DeathsGraph dates={historicalDates} deaths={historicalDeaths} />\r\n\r\n            <StatisticsTable />\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Statistics","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\common\\FormGroup.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\SearchForm.js",["126","127"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport Form from 'react-validation/build/form'\r\nimport Input from 'react-validation/build/input'\r\nimport { Link } from 'react-router-dom'\r\nimport CheckButton from 'react-validation/build/button'\r\n\r\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\r\n\r\n//Components\r\nimport FormGroup from \"./common/FormGroup\"\r\nimport Loading from './common/Loading'\r\n\r\n//Helper\r\nimport { locationSearch, addToSearchHistory } from '../services/location.services'\r\nimport { getHistory, removeFromSearchHistory } from '../services/user.service'\r\nimport { resMessage } from '../utilities/functions.utilities'\r\n// import searchTerm from './Search'\r\n\r\n//CSS\r\n// import '../css/SearchForm.css'\r\n\r\nconst axios = require('axios')\r\nconst GOOGLE_API_KEY = 'AIzaSyDbjklIejS9yn5KhRaEWen72vYpBu_0BZo'\r\n\r\n//Function given to react-validator\r\nconst required = (value) => {\r\n    if(!value){\r\n        return (\r\n            <div className='alert alert-danger' role='alert'>\r\n                This field is required!\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst SearchForm = (props) => {\r\n    const form = useRef()\r\n    const checkBtn = useRef()\r\n\r\n    const [message, setMessage] = useState('')\r\n    const [successful, setSuccessful] = useState(false)\r\n    const [country, setCountry] = useState('')\r\n    const [region, setRegion] = useState('')\r\n    const [city, setCity] = useState('')\r\n    const [id, setId] = useState('')\r\n    // const [searchTerm, setSearchTerm] = useState(\" \")\r\n    const [searchHistory, setSearchHistory] = useState(undefined)\r\n\r\n    const[loading, setLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        getHistory().then(history => setSearchHistory(history))\r\n    },[])\r\n    \r\n    const onChangeCountry = (val) => {\r\n        console.log(val)\r\n        setCountry(val)\r\n    }\r\n\r\n    const onChangeRegion = (val) => {\r\n        console.log(val)\r\n        setRegion(val)\r\n    }\r\n\r\n    const onChangeCity = (e) => {\r\n        const city = e.target.value\r\n        console.log(city)\r\n        setCity(city)\r\n        \r\n    }\r\n    \r\n\r\n\r\n    const mapSearch = async (e) => {\r\n        //Prevent reload of pressing the button\r\n        e.preventDefault()\r\n        //Prevent message clear them out\r\n        setMessage('')\r\n        setSuccessful(false)\r\n\r\n        // validtes all the fields in your form\r\n        form.current.validateAll()\r\n        \r\n        // Validator stores errors and we can check if errors exist\r\n        \r\n        if(checkBtn.current.context._errors.length === 0) {\r\n            //Google API request\r\n            const apiResponse = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${city},${region}&key=${GOOGLE_API_KEY}`)\r\n            //Parses over API and pulls out \"____ County\", replace removes county for disease API\r\n            const county = Object.values(apiResponse.data.results[0])[0][1].long_name.replace(/County/g, '')\r\n            locationSearch(country, region, city, county).then(\r\n                (response) => {\r\n                        if(response.data[0]) {\r\n                            setId(response.data[0]._id)\r\n                            addToSearchHistory(response.data[0]._id)\r\n                        } else {\r\n                            setId(response.data._id)\r\n                            addToSearchHistory(response.data._id)\r\n                        }\r\n                        props.setTerm({\r\n                            county: county,\r\n                            region: region\r\n                        })\r\n                    if(searchHistory.length > 19) {removeFromSearchHistory()}\r\n                    setMessage(response.data.message)\r\n                    setSuccessful(true)\r\n                    // console.log(response.data)\r\n                    // console.log(\"country:\", country)\r\n                    // console.log(\"region:\", region)\r\n                    // console.log(\"city:\", city)\r\n                    // console.log(\"county:\", county)\r\n                    // console.log(\"id:\", id)\r\n                    // searchTerm(apiResponse.data.results)\r\n                },\r\n                (error) => {\r\n                    setMessage(resMessage(error))\r\n                    setSuccessful(false)\r\n                }\r\n            )\r\n\r\n        } else {\r\n            setSuccessful(false)\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    return(\r\n            <div className='form-container container'>\r\n                <Form onSubmit={mapSearch} ref={form} className='container'>\r\n                <div className='input-field'>\r\n                    <CountryDropdown\r\n                        className='browser-default'\r\n                        value={country}\r\n                        onChange={(val) => onChangeCountry(val)} />\r\n                </div>\r\n                <div className='input-field'>\r\n                    <RegionDropdown\r\n                        className='browser-default'\r\n                        country={country}\r\n                        value={region}\r\n                        onChange={(val) => onChangeRegion(val)} />\r\n                </div>\r\n                <div className='input-field'>\r\n                    <FormGroup text='city'>\r\n                        <Input\r\n                            type='text'\r\n                            className='form-control'\r\n                            name='city'\r\n                            value={city}\r\n                            onChange={onChangeCity}\r\n                            validations={[required]}\r\n                        />\r\n                    </FormGroup>\r\n                </div>\r\n\r\n                    <Loading text='Search' loading={loading} />\r\n\r\n                    {message && (\r\n                        <div className='form-group'>\r\n                            <div className={successful ? 'alert alert-success' : 'alert alert-danger'} role='alert'>\r\n                                {message}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    <CheckButton style={{display: 'none'}} ref={checkBtn}/>\r\n                </Form>\r\n                <div>\r\n                    {id && (\r\n                        <Link to={`/search/${id}`}>Go to Details</Link>\r\n                    )}\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default SearchForm\r\n","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\common\\Loading.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\services\\location.services.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\services\\user.service.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\services\\auth.service.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\utilities\\functions.utilities.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\DeathsGraph.js",["128","129"],"import React, { useState, useEffect } from 'react'\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\n\r\n\r\nconst CasesGraph = ({dates, deaths}) => {\r\n    const data = {\r\n        labels: dates,\r\n        datasets: [\r\n          {\r\n            label: \"Confirmed Deaths\",\r\n            data: deaths,\r\n            fill: true,\r\n            backgroundColor: \"rgba(255,0,0,0.2)\",\r\n            borderColor: \"rgba(255,0,0,1)\"\r\n          }\r\n        ]\r\n      };\r\n    \r\n    const options = {\r\n        title: {\r\n            display: true,\r\n            text: \"Confirmed Cases\"\r\n          }\r\n    }\r\n\r\n    return(\r\n        <div className=\"cases-graph\">\r\n            <Line data={data} options={options}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CasesGraph","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\StatisticsTable.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\CasesGraph.js",["130","131"],"import React, { useState, useEffect } from 'react'\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\n\r\n\r\nconst CasesGraph = ({dates, cases}) => {\r\n    const data = {\r\n        labels: dates,\r\n        datasets: [\r\n          {\r\n            label: \"Confirmed Cases\",\r\n            data: cases,\r\n            fill: true,\r\n            backgroundColor: \"rgba(75,192,192,0.2)\",\r\n            borderColor: \"rgba(75,192,192,1)\"\r\n          }\r\n        ]\r\n      };\r\n    \r\n    const options = {\r\n        title: {\r\n            display: true,\r\n            text: \"Confirmed Cases\"\r\n          }\r\n    }\r\n\r\n    return(\r\n        <div className=\"cases-graph\">\r\n            <Line data={data} options={options}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CasesGraph","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\utilities\\authHeader.utilities.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\utilities\\localStorage.utilities.js",[],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":16,"column":12,"nodeType":"138","messageId":"139","endLine":16,"endColumn":19},{"ruleId":"140","severity":1,"message":"141","line":39,"column":7,"nodeType":"142","endLine":39,"endColumn":9,"suggestions":"143"},{"ruleId":"136","severity":1,"message":"144","line":8,"column":8,"nodeType":"138","messageId":"139","endLine":8,"endColumn":15},{"ruleId":"136","severity":1,"message":"144","line":7,"column":8,"nodeType":"138","messageId":"139","endLine":7,"endColumn":15},{"ruleId":"136","severity":1,"message":"145","line":71,"column":12,"nodeType":"138","messageId":"139","endLine":71,"endColumn":19},{"ruleId":"136","severity":1,"message":"137","line":9,"column":12,"nodeType":"138","messageId":"139","endLine":9,"endColumn":19},{"ruleId":"136","severity":1,"message":"137","line":11,"column":12,"nodeType":"138","messageId":"139","endLine":11,"endColumn":19},{"ruleId":"140","severity":1,"message":"141","line":80,"column":7,"nodeType":"142","endLine":80,"endColumn":9,"suggestions":"146"},{"ruleId":"140","severity":1,"message":"147","line":63,"column":8,"nodeType":"142","endLine":63,"endColumn":27,"suggestions":"148"},{"ruleId":"136","severity":1,"message":"149","line":7,"column":43,"nodeType":"138","messageId":"139","endLine":7,"endColumn":60},{"ruleId":"136","severity":1,"message":"150","line":50,"column":20,"nodeType":"138","messageId":"139","endLine":50,"endColumn":30},{"ruleId":"136","severity":1,"message":"151","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":25},{"ruleId":"136","severity":1,"message":"152","line":1,"column":27,"nodeType":"138","messageId":"139","endLine":1,"endColumn":36},{"ruleId":"136","severity":1,"message":"151","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":25},{"ruleId":"136","severity":1,"message":"152","line":1,"column":27,"nodeType":"138","messageId":"139","endLine":1,"endColumn":36},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"no-unused-vars","'message' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["155"],"'Loading' is defined but never used.","'loading' is assigned a value but never used.",["156"],"React Hook useEffect has a missing dependency: 'county'. Either include it or remove the dependency array.",["157"],"'CountryRegionData' is defined but never used.","'setLoading' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},{"desc":"158","fix":"160"},{"desc":"161","fix":"162"},"Update the dependencies array to be: [id]",{"range":"163","text":"164"},{"range":"165","text":"164"},"Update the dependencies array to be: [region, dayFilter, county]",{"range":"166","text":"167"},[1372,1374],"[id]",[2366,2368],[2534,2553],"[region, dayFilter, county]"]