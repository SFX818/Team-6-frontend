[{"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/index.js":"1","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/App.js":"2","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Home.js":"3","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Search.js":"4","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/About.js":"5","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Login.js":"6","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Admin.js":"7","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Profile.js":"8","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Dashboard.js":"9","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Signup.js":"10","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/common/Layout.js":"11","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/UserDetail.js":"12","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/SearchForm.js":"13","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/common/FormGroup.js":"14","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Statistics.js":"15","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/services/auth.service.js":"16","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/services/user.service.js":"17","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/utilities/functions.utilities.js":"18","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/DeathsGraph.js":"19","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/CasesGraph.js":"20","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/utilities/localStorage.utilities.js":"21","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/utilities/authHeader.utilities.js":"22"},{"size":302,"mtime":1609616266910,"results":"23","hashOfConfig":"24"},{"size":1362,"mtime":1609616266907,"results":"25","hashOfConfig":"24"},{"size":246,"mtime":1609616266908,"results":"26","hashOfConfig":"24"},{"size":2427,"mtime":1609616266908,"results":"27","hashOfConfig":"24"},{"size":132,"mtime":1609536329665,"results":"28","hashOfConfig":"24"},{"size":3935,"mtime":1609366226768,"results":"29","hashOfConfig":"24"},{"size":2208,"mtime":1609625026240,"results":"30","hashOfConfig":"24"},{"size":1031,"mtime":1609615204809,"results":"31","hashOfConfig":"24"},{"size":5009,"mtime":1609616266908,"results":"32","hashOfConfig":"24"},{"size":7231,"mtime":1609536329666,"results":"33","hashOfConfig":"24"},{"size":1329,"mtime":1609616266909,"results":"34","hashOfConfig":"24"},{"size":4592,"mtime":1609625026240,"results":"35","hashOfConfig":"24"},{"size":1493,"mtime":1609616266908,"results":"36","hashOfConfig":"24"},{"size":292,"mtime":1609365186864,"results":"37","hashOfConfig":"24"},{"size":3581,"mtime":1609624910279,"results":"38","hashOfConfig":"24"},{"size":1151,"mtime":1609372513809,"results":"39","hashOfConfig":"24"},{"size":2706,"mtime":1609625026241,"results":"40","hashOfConfig":"24"},{"size":251,"mtime":1609365055429,"results":"41","hashOfConfig":"24"},{"size":698,"mtime":1609615667064,"results":"42","hashOfConfig":"24"},{"size":701,"mtime":1609615667063,"results":"43","hashOfConfig":"24"},{"size":426,"mtime":1609365083485,"results":"44","hashOfConfig":"24"},{"size":347,"mtime":1609536329668,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1xnegec",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/index.js",[],["96","97"],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/App.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Home.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Search.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/About.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Login.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Admin.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Profile.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Dashboard.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Signup.js",["98","99"],"import React, { useState, useRef, useEffect } from 'react'\nimport Form from 'react-validation/build/form'\nimport Input from 'react-validation/build/input'\nimport CheckButton from 'react-validation/build/button'\nimport { isEmail } from \"validator\"\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\n\n//Components\nimport FormGroup from \"./common/FormGroup\"\n\n//Helper\nimport { register } from '../services/auth.service'\nimport { resMessage } from '../utilities/functions.utilities'\n\nconst axios = require('axios')\nconst GOOGLE_API_KEY = 'AIzaSyDbjklIejS9yn5KhRaEWen72vYpBu_0BZo'\n\n//Function given to react-validator\nconst required = (value) => {\n    if(!value){\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        )\n    }\n}\n\n//Function that validates username\nconst vusername = (value) => {\n    if(value.length < 3 || value.length >= 20) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                Your username must be between 3 and 20 characters\n            </div>\n        )\n    }\n}\n\n//Function that validates passwords\nconst vpassword = (value) => {\n    if(value.length < 6 || value.length >= 40) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                Your password must be between 6 and 40 characters\n            </div>\n        )\n    }\n}\n\nconst validEmail = (value) => {\n    if(!isEmail) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                Submitted e-mail not valid\n            </div>\n        )\n    }\n}\n\nconst Register = (props) => {\n    const form = useRef()\n    const checkBtn = useRef()\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [email, setEmail] = useState('')\n    const [message, setMessage] = useState('')\n    const [successful, setSuccessful] = useState(false)\n    const [country, setCountry] = useState('')\n    const [region, setRegion] = useState('')\n    const [city, setCity] = useState('')\n    \n    const onChangeUsername = (e) => {\n        const username = e.target.value\n        setUsername(username)\n    }\n\n    const onChangePassword = (e) => {\n        const password = e.target.value\n        setPassword(password)\n    }\n\n    const onChangeEmail = (e) => {\n        const email = e.target.value\n        setEmail(email)\n    }\n\n    const onChangeCountry = (val) => {\n        console.log(val)\n        setCountry(val)\n    }\n\n    const onChangeRegion = (val) => {\n        console.log(val)\n        setRegion(val)\n    }\n\n    const onChangeCity = (e) => {\n        const city = e.target.value\n        console.log(city)\n        setCity(city)\n    }\n\n    const handleSignup = async (e) => {\n        //Prevent reload of pressing the button\n        e.preventDefault()\n        //Prevent message clear them out\n        setMessage(\"\")\n        setSuccessful(false)\n\n        // validtes all the fields in your form\n        form.current.validateAll()\n        \n        // Validator stores errors and we can check if errors exist\n        \n        if(checkBtn.current.context._errors.length === 0) {\n            //Google API request\n            const apiResponse = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${city},${region}&key=${GOOGLE_API_KEY}`)\n            //Parses over API and pulls out \"____ County\", replace removes county for disease API\n            const county = Object.values(apiResponse.data.results[0])[0][1].long_name.replace(/County/g, '')\n            register(username, email, password, country, region, city, county).then(\n                (response) => {\n                    setMessage(response.data.message)\n                    setSuccessful(true)\n                    console.log(\"COUNTY AFTER REGISTER\", county)\n                },\n                (error) => {\n                    setMessage(resMessage(error))\n                    setSuccessful(false)\n                }\n            )\n\n        } else {\n            successful(false)\n        }\n\n\n    }\n\n\n    return(\n        <div>\n            <div className=\"container\">\n                <img\n                    src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n                    alt=\"profile-img\"\n                    className=\"profile-img-card\"\n                />\n                <Form onSubmit={handleSignup} ref={form}>\n\n                    <FormGroup text=\"username\">\n                        <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"username\"\n                            value={username}\n                            onChange={onChangeUsername}\n                            validations={[required, vusername]}\n                        />\n                    </FormGroup>\n\n                    <FormGroup text=\"email\">\n                        <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"email\"\n                            value={email}\n                            onChange={onChangeEmail}\n                            validations={[required, validEmail]}\n                        />\n                    </FormGroup>\n\n                    <FormGroup text=\"password\">\n                        <Input\n                            type=\"password\"\n                            className=\"form-control\"\n                            name=\"password\"\n                            value={password}\n                            onChange={onChangePassword}\n                            validations={[required, vpassword]}\n                        />\n                    </FormGroup>\n\n                    <CountryDropdown\n                        value={country}\n                        onChange={(val) => onChangeCountry(val)} />\n                    <RegionDropdown\n                        country={country}\n                        value={region}\n                        onChange={(val) => onChangeRegion(val)} />\n\n                    <FormGroup text=\"city\">\n                        <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"city\"\n                            value={city}\n                            onChange={onChangeCity}\n                            validations={[required]}\n                        />\n                    </FormGroup>\n\n                    <div className=\"form-group\">\n                        <button className=\"btn\" >\n                            <span>Sign Up</span>\n                        </button>   \n                    </div>\n\n                    {message && (\n                        <div className=\"form-group\">\n                            <div className={successful ? \"alert alert-success\" : \"alert alert-danger\"} role=\"alert\">\n                                {message}\n                            </div>\n                        </div>\n                    )}\n\n                    <CheckButton style={{display: \"none\"}} ref={checkBtn}/>\n                </Form>\n            </div>\n        </div>\n    )\n}\n\nexport default Register","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/common/Layout.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/UserDetail.js",["100"],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/SearchForm.js",["101"],"import React, { useState } from 'react'\nimport { Button } from '@material-ui/core';\n\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\n\n// const API_URL_SEARCH = 'http://localhost:8080/search/'\n\nexport const SearchForm = () => {\n\n    const [country, setCountry] = useState('')\n    const [region, setRegion] = useState('')\n    const [city, setCity] = useState('')\n\n    const onChangeCountry = (val) => {\n        console.log(val)\n        setCountry(val)\n    }\n\n    const onChangeRegion = (val) => {\n        console.log(val)\n        setRegion(val)\n    }\n\n    const onChangeCity = (e) => {\n        const city = e.target.value\n        console.log(city)\n        setCity(city)\n    }\n\n\n\n    return (\n        <div>\n            <CountryDropdown\n                value={country}\n                onChange={(val) => onChangeCountry(val)} />\n            <RegionDropdown\n                country={country}\n                value={region}\n                onChange={(val) => onChangeRegion(val)} />\n            <form text=\"city\">\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"city\"\n                    value={city}\n                    onChange={onChangeCity}\n                    \n                />\n            </form>\n            <Button color=\"primary\" type=\"submit\" name=\"action\">\n                search\n            </Button>\n    \n        </div>\n    )\n}\n\nexport default SearchForm","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/common/FormGroup.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Statistics.js",["102","103"],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/services/auth.service.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/services/user.service.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/utilities/functions.utilities.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/DeathsGraph.js",["104","105"],"import React, { useState, useEffect } from 'react'\nimport { Line } from \"react-chartjs-2\";\n\n\n\nconst CasesGraph = ({dates, deaths}) => {\n    const data = {\n        labels: dates,\n        datasets: [\n          {\n            label: \"Confirmed Deaths\",\n            data: deaths,\n            fill: true,\n            backgroundColor: \"rgba(255,0,0,0.2)\",\n            borderColor: \"rgba(255,0,0,1)\"\n          }\n        ]\n      };\n    \n    const options = {\n        title: {\n            display: true,\n            text: \"Confirmed Cases\"\n          }\n    }\n\n    return(\n        <div className=\"cases-graph\">\n            <Line data={data} options={options}/>\n        </div>\n    )\n}\n\nexport default CasesGraph","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/CasesGraph.js",["106","107"],"import React, { useState, useEffect } from 'react'\nimport { Line } from \"react-chartjs-2\";\n\n\n\nconst CasesGraph = ({dates, cases}) => {\n    const data = {\n        labels: dates,\n        datasets: [\n          {\n            label: \"Confirmed Cases\",\n            data: cases,\n            fill: true,\n            backgroundColor: \"rgba(75,192,192,0.2)\",\n            borderColor: \"rgba(75,192,192,1)\"\n          }\n        ]\n      };\n    \n    const options = {\n        title: {\n            display: true,\n            text: \"Confirmed Cases\"\n          }\n    }\n\n    return(\n        <div className=\"cases-graph\">\n            <Line data={data} options={options}/>\n        </div>\n    )\n}\n\nexport default CasesGraph","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/utilities/localStorage.utilities.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/utilities/authHeader.utilities.js",[],["108","109"],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":1,"column":35,"nodeType":"116","messageId":"117","endLine":1,"endColumn":44},{"ruleId":"114","severity":1,"message":"118","line":6,"column":43,"nodeType":"116","messageId":"117","endLine":6,"endColumn":60},{"ruleId":"119","severity":1,"message":"120","line":76,"column":7,"nodeType":"121","endLine":76,"endColumn":9,"suggestions":"122"},{"ruleId":"114","severity":1,"message":"118","line":4,"column":43,"nodeType":"116","messageId":"117","endLine":4,"endColumn":60},{"ruleId":"114","severity":1,"message":"123","line":3,"column":10,"nodeType":"116","messageId":"117","endLine":3,"endColumn":24},{"ruleId":"119","severity":1,"message":"124","line":73,"column":8,"nodeType":"121","endLine":73,"endColumn":27,"suggestions":"125"},{"ruleId":"114","severity":1,"message":"126","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":25},{"ruleId":"114","severity":1,"message":"115","line":1,"column":27,"nodeType":"116","messageId":"117","endLine":1,"endColumn":36},{"ruleId":"114","severity":1,"message":"126","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":25},{"ruleId":"114","severity":1,"message":"115","line":1,"column":27,"nodeType":"116","messageId":"117","endLine":1,"endColumn":36},{"ruleId":"110","replacedBy":"127"},{"ruleId":"112","replacedBy":"128"},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'CountryRegionData' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["131"],"'getCurrentUser' is defined but never used.","React Hook useEffect has a missing dependency: 'county'. Either include it or remove the dependency array.",["132"],"'useState' is defined but never used.",["129"],["130"],"no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},"Update the dependencies array to be: [id]",{"range":"137","text":"138"},"Update the dependencies array to be: [region, dayFilter, county]",{"range":"139","text":"140"},[2341,2343],"[id]",[2714,2733],"[region, dayFilter, county]"]