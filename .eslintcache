[{"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\index.js":"1","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\App.js":"2","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\SearchDetail.js":"3","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Search.js":"4","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Home.js":"5","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\About.js":"6","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Login.js":"7","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Dashboard.js":"8","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Signup.js":"9","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Admin.js":"10","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\UserDetail.js":"11","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\common\\Layout.js":"12","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Profile.js":"13","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Statistics.js":"14","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\common\\FormGroup.js":"15","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\SearchForm.js":"16","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\common\\Loading.js":"17","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\services\\location.services.js":"18","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\services\\user.service.js":"19","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\services\\auth.service.js":"20","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\utilities\\functions.utilities.js":"21","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\DeathsGraph.js":"22","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\StatisticsTable.js":"23","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\CasesGraph.js":"24","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\utilities\\authHeader.utilities.js":"25","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\utilities\\localStorage.utilities.js":"26","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\SearchPractice.js":"27","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\SearchPopup.js":"28"},{"size":323,"mtime":1609646050998,"results":"29","hashOfConfig":"30"},{"size":1807,"mtime":1610762517728,"results":"31","hashOfConfig":"30"},{"size":4279,"mtime":1610742361114,"results":"32","hashOfConfig":"30"},{"size":17003,"mtime":1610771852424,"results":"33","hashOfConfig":"30"},{"size":664,"mtime":1610742361112,"results":"34","hashOfConfig":"30"},{"size":1024,"mtime":1610742361109,"results":"35","hashOfConfig":"30"},{"size":4558,"mtime":1610742361112,"results":"36","hashOfConfig":"30"},{"size":7098,"mtime":1610762517729,"results":"37","hashOfConfig":"30"},{"size":9419,"mtime":1610742361115,"results":"38","hashOfConfig":"30"},{"size":2965,"mtime":1610742361109,"results":"39","hashOfConfig":"30"},{"size":7963,"mtime":1610742361118,"results":"40","hashOfConfig":"30"},{"size":2765,"mtime":1610742361120,"results":"41","hashOfConfig":"30"},{"size":1067,"mtime":1609402605776,"results":"42","hashOfConfig":"30"},{"size":3868,"mtime":1610762517735,"results":"43","hashOfConfig":"30"},{"size":304,"mtime":1610742361119,"results":"44","hashOfConfig":"30"},{"size":6320,"mtime":1610764762985,"results":"45","hashOfConfig":"30"},{"size":471,"mtime":1610742361121,"results":"46","hashOfConfig":"30"},{"size":1116,"mtime":1610742361129,"results":"47","hashOfConfig":"30"},{"size":2987,"mtime":1610742361130,"results":"48","hashOfConfig":"30"},{"size":1274,"mtime":1610742361128,"results":"49","hashOfConfig":"30"},{"size":259,"mtime":1609376227974,"results":"50","hashOfConfig":"30"},{"size":808,"mtime":1610762517730,"results":"51","hashOfConfig":"30"},{"size":4579,"mtime":1610762517736,"results":"52","hashOfConfig":"30"},{"size":835,"mtime":1610742361110,"results":"53","hashOfConfig":"30"},{"size":359,"mtime":1609402605778,"results":"54","hashOfConfig":"30"},{"size":442,"mtime":1609376227975,"results":"55","hashOfConfig":"30"},{"size":1039,"mtime":1610762517735,"results":"56","hashOfConfig":"30"},{"size":548,"mtime":1610762517734,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"10jbua5",{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"60"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"60"},"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\index.js",[],["125","126"],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\App.js",["127"],"import {Switch, Route} from 'react-router-dom'\r\n\r\nimport SearchPractice from './components/SearchPractice'\r\n\r\n//Component Imports\r\nimport Search from './components/Search'\r\nimport SearchForm from './components/SearchForm'\r\nimport SearchDetail from './components/SearchDetail'\r\n// import New from \"./components/New\"\r\nimport Home from './components/Home'\r\nimport About from './components/About'\r\n\r\n//HOC which wraps around other components\r\nimport Layout from './components/common/Layout'\r\nimport Login from './components/Login'\r\nimport Signup from './components/Signup'\r\n\r\n// Admin Components\r\nimport Admin from './components/Admin'\r\nimport UserDetail from './components/UserDetail'\r\n\r\n// Dashboard\r\nimport Dashboard from './components/Dashboard'\r\n\r\n// --- TEST COMPONENTS --- //\r\nimport Profile from './components/Profile'\r\n\r\n//CSS imports\r\nimport './css/App.css'\r\nimport './css/site.css'\r\nimport './css/Signup.css'\r\nimport './css/Login.css'\r\nimport './css/Home.css'\r\n\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <Layout>\r\n      <Switch>\r\n      \r\n        <Route exact path='/search-practice' component={SearchPractice} />\r\n\r\n        <Route exact path='/search' component={SearchForm}/>\r\n        <Route exact path='/search/:id' component={SearchDetail} />\r\n        <Route exact path={['/','/home']} component={Home}/>\r\n        <Route exact path='/about' component={About} />\r\n        <Route exact path='/login' component={Login}/>\r\n        <Route exact path='/register' component={Signup}/>\r\n        <Route exact path='/admin' component={Admin} />\r\n        <Route exact path='/dashboard' component={Dashboard} />\r\n        <Route exact path='/profile' component={Profile} />\r\n        <Route exact path='/admin/users/:id' component={UserDetail} />\r\n      </Switch>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default App;","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\SearchDetail.js",["128","129"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport Form from 'react-validation/build/form'\r\nimport Input from 'react-validation/build/input'\r\nimport { useParams, Link } from 'react-router-dom'\r\nimport { getOneLocation } from '../services/location.services'\r\nimport { addFavorite, getFavorites, removeFavorite } from '../services/user.service'\r\nimport { getCurrentUser } from '../services/auth.service'\r\n\r\nimport Statistics from './Statistics'\r\nimport '../css/SearchDetail.css'\r\n\r\nconst SearchDetail = () => {\r\n    const form = useRef()\r\n    const [location, setLocation] = useState('')\r\n    const [currentUser, setCurrentUser] = useState(undefined)\r\n    const [favoriteLocations, setFavoriteLocations] = useState([])\r\n    const [message, setMessage] = useState('')\r\n    let { id } = useParams()\r\n\r\n    useEffect(() => {\r\n        getOneLocation(id).then(response => {\r\n            setLocation(response.data)\r\n            },\r\n            (error) => {\r\n                setMessage(error)\r\n                setLocation(error)\r\n            }\r\n        )\r\n        const user = getCurrentUser()\r\n        if(user) {\r\n            setCurrentUser(user)\r\n            getFavorites().then(favorites => {\r\n                setFavoriteLocations(favorites)\r\n            },\r\n            (error) => {\r\n                setMessage(error)\r\n                setFavoriteLocations(error)\r\n            })\r\n        }\r\n    },[])\r\n\r\n    const handleAddFavorite = e => {\r\n        e.preventDefault()\r\n        let user = currentUser.id\r\n        let id = e.target.id.value\r\n\r\n        addFavorite(user,id)\r\n        .then(response => {\r\n            // console.log(response.data)\r\n            setMessage(response.data)\r\n            window.location.reload()\r\n        })\r\n        .catch(err => setMessage(err))\r\n    }\r\n\r\n    const handleRemove = event => {\r\n        event.preventDefault()\r\n        let user = currentUser.id\r\n        let id = (event.target.id.value)\r\n\r\n        removeFavorite(user, id)\r\n        .then(response => {\r\n            // console.log(response.data)\r\n            setMessage(response.data)\r\n            window.location.reload()\r\n        })\r\n        .catch(err => setMessage(err))\r\n    }\r\n\r\n    return(\r\n        <div className='main container'>\r\n            {location ? (\r\n                <div className='row header-container'>\r\n                    <h3>{location.city}, {location.state} - {location.country}</h3>\r\n                    {currentUser ? (\r\n                        <>\r\n                        {(favoriteLocations.length > 0 && favoriteLocations.some(existing => existing._id === location._id)) ? (\r\n                            <Form ref={form} onSubmit={handleRemove}>\r\n                                <Input type='hidden' value={location._id} name='id'/>\r\n                                <Input type='submit' value='Remove from Favorite Locations' name='submit' className='waves-effect waves-light btn'/>\r\n                            </Form>\r\n                        ) : (\r\n                            <Form ref={form} onSubmit={handleAddFavorite}>\r\n                                <Input type='hidden' value={location._id} name='id'/>\r\n                                <Input type='submit' value='Add to Favorite Locations' name='submit' className='waves-effect waves-light btn'/>\r\n                            </Form>\r\n                        )}\r\n                        </>\r\n                    ) : (\r\n                        <div><Link to='/login'>Login</Link> or <Link to='/register'>Register</Link> to add to favorite locations!</div>\r\n                    )}\r\n                    <div className='row back-container'>\r\n                        <Link to='/search' className='waves-effect waves-teal btn-flat'>Back to Map</Link>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className='progress'>\r\n                    <span className='indeterminate'></span>\r\n                </div>\r\n            )}\r\n            <div className='row statistics-container'>\r\n                <Statistics\r\n                    newCountry={location.country}\r\n                    newCounty={location.county}\r\n                    newRegion={location.state}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchDetail","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Search.js",["130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145"],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Home.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\About.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Login.js",["146"],"import React, { useState, useRef } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Form from 'react-validation/build/form'\r\nimport Input from 'react-validation/build/input'\r\nimport CheckButton from 'react-validation/build/button'\r\n\r\n// Components\r\nimport Loading from './common/Loading'\r\n\r\n// Helper\r\nimport { login } from '../services/auth.service'\r\nimport { resMessage } from '../utilities/functions.utilities'\r\n\r\n//Function given to react-validator\r\nconst required = (value) => {\r\n    if(!value){\r\n        return (\r\n            <div className='alert'>\r\n                This field is required!\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst Login = (props) => {\r\n    const form = useRef()\r\n    const checkBtn = useRef()\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n\r\n    const onChangeUsername = (e) => {\r\n        const username = e.target.value\r\n        setUsername(username)\r\n    }\r\n\r\n    const onChangePassword = (e) => {\r\n        const password = e.target.value\r\n        setPassword(password)\r\n    }\r\n\r\n    const handleLogin = (e) => {\r\n        //Prevent reload of pressing the button\r\n        e.preventDefault()\r\n        //Prevent message clear them out\r\n        setMessage('')\r\n        setLoading(true)\r\n\r\n        // validtes all the fields in your form\r\n        form.current.validateAll()\r\n        \r\n        // Validator stores errors and we can check if errors exist\r\n        if(checkBtn.current.context._errors.length === 0) {\r\n            login(username, password).then(\r\n                ()=> {\r\n                    props.history.push('/dashboard')\r\n                    window.location.reload()\r\n                },\r\n                (error) => {                    \r\n                    // Setting loading to false and return the error\r\n                    setLoading(false)\r\n                    setMessage(resMessage(error))\r\n                }\r\n            )\r\n        } else {\r\n            loading(false)\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"input-field img-container\">\r\n                <img\r\n                    src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n                    alt=\"profile-img\"\r\n                    className=\"profile-img-card\"\r\n                />\r\n\r\n                <Form onSubmit={handleLogin} ref={form}>\r\n                    <label for='username'>Username</label>\r\n                    <div className='input-field'>\r\n                        <Input\r\n                            type=\"text\"\r\n                            // className=\"form-control\"\r\n                            name=\"username\"\r\n                            value={username}\r\n                            onChange={onChangeUsername}\r\n                            validations={[required]}\r\n                        />\r\n                    </div>\r\n\r\n                    <label for='password'>Password</label>\r\n                    <div className='input-field'>\r\n                        <Input\r\n                            type=\"password\"\r\n                            // className=\"form-control\"\r\n                            name=\"password\"\r\n                            value={password}\r\n                            onChange={onChangePassword}\r\n                            validations={[required]}\r\n                        />\r\n                    </div>\r\n                    \r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn waves-effect waves-light\">\r\n                            <span>Login</span>\r\n                            <i class=\"material-icons right\">send</i>\r\n                        </button>   \r\n                    </div>\r\n\r\n                    {message && (\r\n                        <div className='input-field'>\r\n                            <div className='alert alert-danger' role='alert'>\r\n                                {message}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    <CheckButton style={{display: 'none'}} ref={checkBtn}/>\r\n                    \r\n                    <div className=\"input-field\">\r\n                        <p>Not a member? <Link to=\"/register\">Sign Up</Link></p>           \r\n                    </div>\r\n                </Form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Dashboard.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Signup.js",["147"],"import React, { useState, useRef } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Form from 'react-validation/build/form'\r\nimport Input from 'react-validation/build/input'\r\nimport CheckButton from 'react-validation/build/button'\r\nimport { isEmail } from \"validator\"\r\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\r\n\r\n//Helper\r\nimport { register, login } from '../services/auth.service'\r\nimport { resMessage } from '../utilities/functions.utilities'\r\n\r\nconst axios = require('axios')\r\nconst GOOGLE_API_KEY = 'AIzaSyDbjklIejS9yn5KhRaEWen72vYpBu_0BZo'\r\n\r\n//Function given to react-validator\r\nconst required = (value) => {\r\n    if(!value){\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//Function that validates username\r\nconst vusername = (value) => {\r\n    if(value.length < 3 || value.length >= 20) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Your username must be between 3 and 20 characters\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//Function that validates passwords\r\nconst vpassword = (value) => {\r\n    if(value.length < 6 || value.length >= 40) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Your password must be between 6 and 40 characters\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst validEmail = (value) => {\r\n    if(!isEmail) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Submitted e-mail not valid\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst Register = (props) => {\r\n    const form = useRef()\r\n    const checkBtn = useRef()\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const [successful, setSuccessful] = useState(false)\r\n    const [country, setCountry] = useState('')\r\n    const [region, setRegion] = useState('')\r\n    const [city, setCity] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    \r\n    const onChangeUsername = (e) => {\r\n        const username = e.target.value\r\n        setUsername(username)\r\n    }\r\n\r\n    const onChangePassword = (e) => {\r\n        const password = e.target.value\r\n        setPassword(password)\r\n    }\r\n\r\n    const onChangeEmail = (e) => {\r\n        const email = e.target.value\r\n        setEmail(email)\r\n    }\r\n\r\n    const onChangeCountry = (val) => {\r\n        console.log(val)\r\n        setCountry(val)\r\n    }\r\n\r\n    const onChangeRegion = (val) => {\r\n        console.log(val)\r\n        setRegion(val)\r\n    }\r\n\r\n    const onChangeCity = (e) => {\r\n        const city = e.target.value\r\n        console.log(city)\r\n        setCity(city)\r\n    }\r\n\r\n    const handleSignup = async (e) => {\r\n        //Prevent reload of pressing the button\r\n        e.preventDefault()\r\n        //Prevent message clear them out\r\n        setMessage(\"\")\r\n        setSuccessful(false)\r\n        //delay for 2 seconds then switch to the login page\r\n        \r\n        \r\n        // validtes all the fields in your form\r\n        form.current.validateAll()\r\n        \r\n        // Validator stores errors and we can check if errors exist\r\n        \r\n        if(checkBtn.current.context._errors.length === 0) {\r\n            //Google API request\r\n            const apiResponse = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${city},${region}&key=${GOOGLE_API_KEY}`)\r\n            //Parses over API and pulls out \"____ County\", replace removes county for disease API\r\n            const county = Object.values(apiResponse.data.results[0])[0][1].long_name.replace(/County/g, '')\r\n            register(username, email, password, country, region, city, county).then(\r\n                (response) => {\r\n                    setMessage(response.data.message)\r\n                    setSuccessful(true)\r\n                    // console.log(\"COUNTY AFTER REGISTER\", county)\r\n                    login(username, password).then(\r\n                        ()=> {\r\n                            props.history.push(\"/dashboard\")\r\n                            window.location.reload()\r\n                        },\r\n                        (error) => {\r\n                            // Checking all the data received from our backend\r\n                            \r\n                            // Setting loading to false and return the error\r\n                            setLoading(false)\r\n                            setMessage(resMessage(error))\r\n                        }\r\n                    )\r\n                },\r\n                (error) => {\r\n                    setMessage(resMessage(error))\r\n                    setSuccessful(false)\r\n                }\r\n            )\r\n\r\n        } else {\r\n            successful(false)\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"input-field img-container\">\r\n                    <img\r\n                        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n                        alt=\"profile-img\"\r\n                        className=\"profile-img-card\"\r\n                    />\r\n                </div>\r\n                <Form onSubmit={handleSignup} ref={form} className=\"form\">\r\n                        <label for='username'>Username</label>\r\n                        <div className='input-field'>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"username\"\r\n                                value={username}\r\n                                placeholder=\"Username\"\r\n                                onChange={onChangeUsername}\r\n                                validations={[required, vusername]}\r\n                            />\r\n                            \r\n                        </div>\r\n\r\n                        <label for=\"email\">Email</label>\r\n                        <div className='input-field'>\r\n                            <Input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                value={email}\r\n                                placeholder=\"Email\"\r\n                                onChange={onChangeEmail}\r\n                                validations={[required, validEmail]}\r\n                            />\r\n                        </div>\r\n\r\n                        <label for='password'>Password</label>\r\n                        <div className='input-field'>\r\n                            <Input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                value={password}\r\n                                placeholder=\"Password\"\r\n                                onChange={onChangePassword}\r\n                                validations={[required, vpassword]}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-field\">\r\n                            <CountryDropdown\r\n                                className=\"browser-default\"\r\n                                value={country}\r\n                                onChange={(val) => onChangeCountry(val)} />\r\n                        </div>\r\n\r\n                        <div className=\"input-field\">\r\n                            <RegionDropdown\r\n                                className=\"browser-default\"\r\n                                country={country}\r\n                                value={region}\r\n                                onChange={(val) => onChangeRegion(val)} />\r\n                        </div>\r\n\r\n                        <label for='city'>City</label>\r\n                        <div className='input-field'>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"city\"\r\n                                value={city}\r\n                                placeholder=\"City\"\r\n                                onChange={onChangeCity}\r\n                                validations={[required]}\r\n                            />\r\n                        </div>\r\n                        \r\n\r\n                        <div className=\"input-field\">\r\n                            <button className=\"btn waves-effect waves-light\">\r\n                                <span>Sign Up</span>\r\n                                <i class=\"material-icons right\">send</i>\r\n                            </button>   \r\n                        </div>\r\n\r\n\r\n                        {message && (\r\n                            <div className=\"input-field\">\r\n                                <div className={successful ? \"alert alert-success\" : \"alert alert-danger\"} role=\"alert\">\r\n                                    {message}\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        <CheckButton style={{display: \"none\"}} ref={checkBtn}/>\r\n\r\n                        <div className=\"input-field\">\r\n                            <p>Already a member? <Link to=\"/login\">Log In</Link></p>          \r\n                        </div>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Admin.js",["148"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { getAllUsers } from '../services/user.service'\r\nimport {resMessage} from '../utilities/functions.utilities'\r\n\r\nconst Admin = () => {\r\n    const [users, setUsers] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    useEffect(() => {\r\n        getAllUsers().then(response => {\r\n            setUsers(response.data)\r\n            },\r\n            (error) => {\r\n                setMessage(resMessage(error))\r\n                setUsers(error);\r\n              }\r\n        )\r\n    },[])\r\n    return(\r\n        <>\r\n            {users ? (\r\n                <div className='container'>\r\n                    <h2>All Users</h2>\r\n                    {/* {console.log(users)} */}\r\n                    {users.length > 0 ? (\r\n                        <>\r\n                            {users.map(user => (\r\n                                <div key={user._id} className='row'>\r\n                                    <div className='col s12'>\r\n                                        <div className='card'>\r\n                                            <div className='card-content'>\r\n                                                <span className='card-title'>\r\n                                                    <Link to={`/admin/users/${user._id}`}>\r\n                                                        <h4>{user.username}</h4>\r\n                                                    </Link>    \r\n                                                </span>\r\n                                                <p>{user.email}</p>\r\n                                                {user.primaryLocation && \r\n                                                <p>\r\n                                                    {user.primaryLocation.city},{' '}\r\n                                                    {user.primaryLocation.state},{' '} \r\n                                                    {user.primaryLocation.county}{' '}-{' '}\r\n                                                    {user.primaryLocation.country}\r\n                                                </p>}\r\n                                                {user.roles && \r\n                                                    user.roles.map(role => <p key={role._id}>{role.name}</p>)\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </>\r\n                    ) : (\r\n                        <div>No Users to Show!</div>\r\n                    )}\r\n                </div>\r\n            ) : (\r\n                <div className='progress'>\r\n                    <span className='indeterminate'></span>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Admin","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\UserDetail.js",["149","150"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport Form from 'react-validation/build/form'\r\nimport Input from 'react-validation/build/input'\r\nimport { useParams } from 'react-router-dom'\r\nimport { getOneUser, getRoles, addUserRoles, removeUserRoles, deleteUser } from '../services/user.service'\r\n\r\nconst UserDetail = (props) => {\r\n    const form = useRef()\r\n    const [user, setUser] = useState('')\r\n    const [roles, setRoles] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    let { id } = useParams()\r\n\r\n    const handleAddRole = (event) => {\r\n        event.preventDefault()\r\n        let roleId = event.target.roleId.value\r\n        let roleName = event.target.roleName.value\r\n        const newRole =\r\n            {\r\n                _id: roleId, \r\n                name: roleName\r\n            }\r\n        // console.log(newRole)\r\n        addUserRoles(id,newRole)\r\n        .then(response => {\r\n            setMessage(response.data)\r\n            window.location.reload()\r\n        })\r\n        .catch(err => setMessage(err))\r\n    }\r\n\r\n    const handleRemoveRole = (event) => {\r\n        event.preventDefault()\r\n        let roleId = event.target.roleId.value\r\n        let roleName = event.target.roleName.value\r\n        const newRole =\r\n            {\r\n                _id: roleId, \r\n                name: roleName\r\n            }\r\n        // console.log(newRole)\r\n        removeUserRoles(id,newRole)\r\n        .then(response => {\r\n            setMessage(response.data)\r\n            window.location.reload()\r\n        })\r\n        .catch(err => setMessage(err))\r\n    }\r\n\r\n    const handleDelete = e => {\r\n        e.preventDefault()\r\n        deleteUser(id)\r\n        .then(\r\n            ()=> {\r\n                props.history.push('/admin')\r\n                window.location.reload()\r\n            }\r\n        )\r\n        .catch(err => {setMessage(err)})\r\n        // console.log(id)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getOneUser(id).then(response => {\r\n            setUser(response.data)\r\n            },\r\n            (error) => {\r\n                setMessage(error)\r\n                setUser(error)\r\n              }\r\n        )\r\n        getRoles().then(response => {\r\n            setRoles(response.data)\r\n            },\r\n            (error) => {\r\n                setMessage(error)\r\n                setRoles(error);\r\n              }\r\n        )\r\n    },[])\r\n    \r\n    return(\r\n        <div className='container'>\r\n            {user ? (\r\n                <div className='row'>\r\n                    <div className='col s12'>\r\n                        <div className='card'>\r\n                            <div className='card-content'>\r\n                            <span className='card-title'><h3>{user.username}</h3></span>\r\n                                <p>{user.email}</p>\r\n                                {user.primaryLocation && \r\n                                <p>\r\n                                    {user.primaryLocation.city},{' '}\r\n                                    {user.primaryLocation.state},{' '} \r\n                                    {user.primaryLocation.county}{' '}-{' '}\r\n                                    {user.primaryLocation.country}\r\n                                </p>}\r\n                                <Form onSubmit={handleDelete} ref={form}>\r\n                                    <Input type='submit' value='Delete User' className='card-action'/>\r\n                                </Form>\r\n                                {user.roles && \r\n                                    user.roles.map(role => \r\n                                    <div key={role._id}>\r\n                                        {/* <p>{role.name}</p> */}\r\n                                        <Form onSubmit={handleRemoveRole} ref={form}>\r\n                                            <Input type='hidden' value={role._id} name='roleId'/>\r\n                                            <Input type='hidden' value={role.name} name='roleName'/>\r\n                                            <Input \r\n                                                type='submit'  \r\n                                                value={`Remove ${role.name.slice(0,1).toUpperCase()+ role.name.slice(1,role.name.length)} Role`} \r\n                                                className='card-action'\r\n                                            />\r\n                                        </Form>\r\n                                    </div>)\r\n                                }\r\n                                {/* {console.log(user)} */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className='progress'>\r\n                    <span className='indeterminate'></span>\r\n                </div>\r\n            )}\r\n            {roles ? (\r\n                <div>\r\n                    <div className='row'>\r\n                        <div className='col s12'>\r\n                            <div className='card'>\r\n                                <div className='card-content'>\r\n                                    <span className='card-title'><h4>Add Roles</h4></span>\r\n                                        {/* {console.log(roles)} */}\r\n                                        {roles.length > 0 ? (\r\n                                            <div>\r\n                                                {/* {console.log(user.roles)} */}\r\n                                                    {roles.map(role => (\r\n                                                        <>\r\n                                                            {(user.roles && user.roles.some(existing => existing._id === role._id)) ? (\r\n                                                                <></>\r\n                                                            ) : (\r\n                                                                <div key={role._id}>\r\n                                                                    {/* <p>{role.name}</p> */}\r\n                                                                    <Form onSubmit={handleAddRole} ref={form}>\r\n                                                                        <Input type='hidden' value={role._id} name='roleId'/>\r\n                                                                        <Input type='hidden' value={role.name} name='roleName'/>\r\n                                                                        <Input \r\n                                                                            type='submit'  \r\n                                                                            value={`Add ${role.name.slice(0,1).toUpperCase()+ role.name.slice(1,role.name.length)} Role`} \r\n                                                                            className='card-action'\r\n                                                                        />\r\n                                                                    </Form>\r\n                                                                </div>\r\n                                                            )}\r\n                                                        </>\r\n                                                    )\r\n                                                )}\r\n                                                \r\n                                        </div>\r\n                                    ) : (\r\n                                        <div>No roles to display!</div>\r\n                                    )\r\n                                }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className='progress'>\r\n                    <span className='indeterminate'></span>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default UserDetail","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\common\\Layout.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Profile.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Statistics.js",["151","152"],"import React, { useState, useEffect } from 'react'\r\nimport DeathsGraph from './DeathsGraph'\r\nimport CasesGraph from './CasesGraph'\r\nimport '../css/Statistics.css'\r\n\r\nconst axios = require('axios')\r\n\r\n\r\nconst Statistics = ({newCountry, newCounty, newRegion}) => {\r\n    //Location states\r\n    const [country, setCountry] = useState(newCountry)\r\n    const [county, setCounty] = useState(newCounty)\r\n    const [region, setRegion] = useState(newRegion)\r\n    //API Stats states\r\n    const [confirmedCases, setConfirmedCases] = useState('')\r\n    const [deaths, setDeaths] = useState('')\r\n    const [recovered, setRecovered] = useState('')\r\n    const [updatedAt, setUpdatedAt] = useState('')\r\n    const [historicalDates, setHistoricalDates] = useState([])\r\n    const [historicalCases, setHistoricalCases] = useState([])\r\n    const [historicalDeaths, setHistoricalDeaths] = useState([])\r\n    const [dayFilter, setDayFilter] = useState(30)\r\n\r\n    const onChangeDayFilter = (event, val) => {\r\n        setDayFilter(val)\r\n        console.log(dayFilter)\r\n    }\r\n    \r\n    useEffect(()=> {\r\n        if(newCounty !== undefined) {\r\n            axios.get(`https://disease.sh/v3/covid-19/jhucsse/counties/${newCounty}`)\r\n            .then(response => {\r\n                response.data.forEach(data=> {\r\n                    if(newRegion === data.province) {\r\n                        setCountry(data.country)\r\n                        setCounty(data.county)\r\n                        setRegion(data.province)\r\n                        setConfirmedCases(data.stats.confirmed)\r\n                        setDeaths(data.stats.deaths)\r\n                        setRecovered(data.stats.recovered)\r\n                        setUpdatedAt(data.updatedAt)\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    }, [newCountry, newCounty, newRegion])\r\n\r\n\r\n    useEffect(() => {\r\n        if(region !== undefined) {\r\n            axios.get(`https://disease.sh/v3/covid-19/historical/usacounties/${region.toLowerCase()}?lastdays=${dayFilter}`)\r\n            .then(response => {\r\n                response.data.forEach(data => {\r\n                    if (data.county !== undefined && data.county === county.toLowerCase()) {\r\n                        setHistoricalDates(Object.keys(data.timeline.cases))\r\n                        setHistoricalCases(Object.values(data.timeline.cases))\r\n                        setHistoricalDeaths(Object.values(data.timeline.deaths))\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    }, [region, dayFilter])\r\n\r\n\r\n    return(\r\n        <div className='container'>\r\n            <div className='row'>\r\n                <div className='col s12'>\r\n                    <div className='card'>\r\n                        <p>Country: {country}</p>\r\n                        <p>County: {county}</p>\r\n                        <p>State: {region}</p>\r\n                        <p>Confirmed Cases: {confirmedCases}</p>\r\n                        <p>Deaths: {deaths}</p>\r\n                        <p>Last Updated: {updatedAt}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='row graph-container'>\r\n                    <ul>\r\n                        <button onClick={e => onChangeDayFilter(e, 7)} className='waves-effect waves-light btn-small'>7 Days</button>\r\n                        <button onClick={e => onChangeDayFilter(e, 30)} className='waves-effect waves-light btn-small'>30 Days</button>\r\n                        <button onClick={e => onChangeDayFilter(e, \"all\")} className='waves-effect waves-light btn-small'>All</button>\r\n                    </ul>\r\n\r\n                    <CasesGraph dates={historicalDates} cases={historicalCases} />\r\n                    <DeathsGraph dates={historicalDates} deaths={historicalDeaths} />\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Statistics","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\common\\FormGroup.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\SearchForm.js",["153","154"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport Form from 'react-validation/build/form'\r\nimport Input from 'react-validation/build/input'\r\nimport { Link } from 'react-router-dom'\r\nimport CheckButton from 'react-validation/build/button'\r\n\r\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\r\n\r\n//Components\r\n// import FormGroup from \"./common/FormGroup\"\r\nimport Loading from './common/Loading'\r\nimport Search from './Search'\r\n\r\n//Helper\r\nimport { locationSearch, addToSearchHistory } from '../services/location.services'\r\nimport { getHistory, removeFromSearchHistory } from '../services/user.service'\r\nimport { resMessage } from '../utilities/functions.utilities'\r\n// import searchTerm from './Search'\r\n\r\n//CSS\r\n// import '../css/SearchForm.css'\r\n\r\nconst axios = require('axios')\r\nconst GOOGLE_API_KEY = 'AIzaSyDbjklIejS9yn5KhRaEWen72vYpBu_0BZo'\r\n\r\n//Function given to react-validator\r\nconst required = (value) => {\r\n    if(!value){\r\n        return (\r\n            <div className='alert alert-danger' role='alert'>\r\n                This field is required!\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst SearchForm = (props) => {\r\n    const form = useRef()\r\n    const checkBtn = useRef()\r\n\r\n    const [message, setMessage] = useState('')\r\n    const [successful, setSuccessful] = useState(false)\r\n    const [country, setCountry] = useState('')\r\n    const [region, setRegion] = useState('')\r\n    const [city, setCity] = useState('')\r\n    const [id, setId] = useState(null)\r\n    const [searchHistory, setSearchHistory] = useState(undefined)\r\n\r\n    const[loading, setLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        getHistory().then(history => setSearchHistory(history))\r\n    },[])\r\n    \r\n    const onChangeCountry = (val) => {\r\n        console.log(val)\r\n        setCountry(val)\r\n    }\r\n\r\n    const onChangeRegion = (val) => {\r\n        console.log(val)\r\n        setRegion(val)\r\n    }\r\n\r\n    const onChangeCity = (e) => {\r\n        const city = e.target.value\r\n        console.log(city)\r\n        setCity(city)\r\n    }\r\n\r\n\r\n    const mapSearch = async (e) => {\r\n        //Prevent reload of pressing the button\r\n        e.preventDefault()\r\n        //Prevent message clear them out\r\n        setMessage('')\r\n        setSuccessful(false)\r\n\r\n        // validtes all the fields in your form\r\n        form.current.validateAll()\r\n        \r\n        // Validator stores errors and we can check if errors exist\r\n        \r\n        if(checkBtn.current.context._errors.length === 0) {\r\n            //Google API request\r\n            const apiResponse = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${city},${region}&key=${GOOGLE_API_KEY}`)\r\n            //Parses over API and pulls out \"____ County\", replace removes county for disease API\r\n            const county = Object.values(apiResponse.data.results[0])[0][1].long_name.replace(/County/g, '')\r\n            locationSearch(country, region, city, county).then(\r\n                (response) => {\r\n                    // console.log(response)\r\n                        if(response.data[0]) {\r\n                            setId(response.data[0]._id)\r\n                            addToSearchHistory(response.data[0]._id)\r\n                        } else {\r\n                            setId(response.data._id)\r\n                            addToSearchHistory(response.data._id)\r\n                        }\r\n                    if(searchHistory && searchHistory.length > 19) {removeFromSearchHistory()}\r\n                    setMessage(response.data.message)\r\n                    setSuccessful(true)\r\n                    // console.log(response.data)\r\n                    // console.log(\"country:\", country)\r\n                    // console.log(\"region:\", region)\r\n                    // console.log(\"city:\", city)\r\n                    // console.log(\"county:\", county)\r\n                    // console.log(\"id:\", id)\r\n                    // searchTerm(apiResponse.data.results)\r\n                },\r\n                (error) => {\r\n                    setMessage(resMessage(error))\r\n                    setSuccessful(false)\r\n                }\r\n            )\r\n\r\n        } else {\r\n            setSuccessful(false)\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    return(\r\n            <div className='form-container container'>\r\n                <Form onSubmit={mapSearch} ref={form} className='container'>\r\n                <div className='input-field'>\r\n                    <CountryDropdown\r\n                        className='browser-default'\r\n                        value={country}\r\n                        onChange={(val) => onChangeCountry(val)} />\r\n                </div>\r\n                <div className='input-field'>\r\n                    <RegionDropdown\r\n                        className='browser-default'\r\n                        country={country}\r\n                        value={region}\r\n                        onChange={(val) => onChangeRegion(val)} />\r\n                </div>\r\n                <label>City</label>\r\n                <div className='input-field'>\r\n                        <Input\r\n                            type='text'\r\n                            className='form-control'\r\n                            name='city'\r\n                            value={city}\r\n                            placeholder='City'\r\n                            onChange={onChangeCity}\r\n                            validations={[required]}\r\n                        />               \r\n                </div>\r\n\r\n                    <Loading text='Search' loading={loading} />\r\n\r\n                    {message && (\r\n                        <div className='input-field'>\r\n                            <div className={successful ? 'alert alert-success' : 'alert alert-danger'} role='alert'>\r\n                                {message}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    <CheckButton style={{display: 'none'}} ref={checkBtn}/>\r\n                <div className='input-field'>\r\n                    {id && (\r\n                        <Link to={`/search/${id}`}>Go to Details</Link>\r\n                    )}\r\n                </div>\r\n                </Form>\r\n                <Search id={id}/>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default SearchForm","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\common\\Loading.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\services\\location.services.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\services\\user.service.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\services\\auth.service.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\utilities\\functions.utilities.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\DeathsGraph.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\StatisticsTable.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\CasesGraph.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\utilities\\authHeader.utilities.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\utilities\\localStorage.utilities.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\SearchPractice.js",["155","156"],"import React, { useRef, useEffect, useState } from 'react'\r\nimport mapboxgl from 'mapbox-gl'\r\nimport SearchForm from './SearchForm'\r\n\r\nimport '../css/SearchPractice.css'\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoiYmluYXJ5YmVhc3QiLCJhIjoiY2tpbTU3cW8xMHE1ZTJycXJkemdjZThmMSJ9.LUCLnUpyYjcUF48GPUEUVQ'\r\n\r\nconst axios = require('axios')\r\n\r\nconst SearchPractice = () => {\r\n    const mapContainerRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        const map = new mapboxgl.Map({\r\n          container: mapContainerRef.current,\r\n          style: 'mapbox://styles/mapbox/light-v10',\r\n          center: [0, 0],\r\n          zoom: 2,\r\n        });\r\n\r\n        \r\n\r\n        // add navigation control (the +/- zoom buttons)\r\n        map.addControl(new mapboxgl.NavigationControl(), 'bottom-right');\r\n\r\n        // clean up on unmount\r\n        return () => map.remove();\r\n      }, [])\r\n\r\n    return(\r\n        <>\r\n            <SearchForm />\r\n            <div className=\"map-container\" ref={mapContainerRef} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchPractice","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\SearchPopup.js",["157","158"],"import React from \"react\";\r\n\r\nconst SearchPopup = ({ feature }) => {\r\n  const { id, country, province, county, cases, deaths, recovered } = feature.properties;  \r\n\r\n  return (\r\n    <div id={`popup-${id}`}>\r\n      <>\r\n      {/* yes, apparently 'null' is a string here */}\r\n        {county!='null' ? (\r\n            <h6>{county}, {province}, {country}</h6>\r\n        ) : (\r\n            <h6>{province}, {country}</h6>\r\n        )}\r\n      <p>Cases: {cases}</p>\r\n      <p>Deaths: {deaths}</p>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchPopup;",{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":6,"column":8,"nodeType":"165","messageId":"166","endLine":6,"endColumn":14},{"ruleId":"163","severity":1,"message":"167","line":17,"column":12,"nodeType":"165","messageId":"166","endLine":17,"endColumn":19},{"ruleId":"168","severity":1,"message":"169","line":40,"column":7,"nodeType":"170","endLine":40,"endColumn":9,"suggestions":"171"},{"ruleId":"163","severity":1,"message":"172","line":7,"column":8,"nodeType":"165","messageId":"166","endLine":7,"endColumn":13},{"ruleId":"163","severity":1,"message":"173","line":8,"column":8,"nodeType":"165","messageId":"166","endLine":8,"endColumn":15},{"ruleId":"163","severity":1,"message":"174","line":18,"column":12,"nodeType":"165","messageId":"166","endLine":18,"endColumn":22},{"ruleId":"163","severity":1,"message":"175","line":18,"column":24,"nodeType":"165","messageId":"166","endLine":18,"endColumn":37},{"ruleId":"163","severity":1,"message":"176","line":22,"column":12,"nodeType":"165","messageId":"166","endLine":22,"endColumn":25},{"ruleId":"163","severity":1,"message":"177","line":22,"column":27,"nodeType":"165","messageId":"166","endLine":22,"endColumn":43},{"ruleId":"163","severity":1,"message":"178","line":23,"column":12,"nodeType":"165","messageId":"166","endLine":23,"endColumn":24},{"ruleId":"163","severity":1,"message":"179","line":23,"column":26,"nodeType":"165","messageId":"166","endLine":23,"endColumn":41},{"ruleId":"163","severity":1,"message":"180","line":24,"column":12,"nodeType":"165","messageId":"166","endLine":24,"endColumn":24},{"ruleId":"163","severity":1,"message":"181","line":24,"column":26,"nodeType":"165","messageId":"166","endLine":24,"endColumn":41},{"ruleId":"163","severity":1,"message":"182","line":25,"column":12,"nodeType":"165","messageId":"166","endLine":25,"endColumn":22},{"ruleId":"163","severity":1,"message":"183","line":25,"column":24,"nodeType":"165","messageId":"166","endLine":25,"endColumn":37},{"ruleId":"163","severity":1,"message":"184","line":26,"column":12,"nodeType":"165","messageId":"166","endLine":26,"endColumn":20},{"ruleId":"163","severity":1,"message":"185","line":26,"column":22,"nodeType":"165","messageId":"166","endLine":26,"endColumn":33},{"ruleId":"163","severity":1,"message":"167","line":30,"column":12,"nodeType":"165","messageId":"166","endLine":30,"endColumn":19},{"ruleId":"168","severity":1,"message":"186","line":252,"column":8,"nodeType":"170","endLine":252,"endColumn":14,"suggestions":"187"},{"ruleId":"163","severity":1,"message":"173","line":8,"column":8,"nodeType":"165","messageId":"166","endLine":8,"endColumn":15},{"ruleId":"163","severity":1,"message":"188","line":71,"column":12,"nodeType":"165","messageId":"166","endLine":71,"endColumn":19},{"ruleId":"163","severity":1,"message":"167","line":9,"column":12,"nodeType":"165","messageId":"166","endLine":9,"endColumn":19},{"ruleId":"163","severity":1,"message":"167","line":11,"column":12,"nodeType":"165","messageId":"166","endLine":11,"endColumn":19},{"ruleId":"168","severity":1,"message":"169","line":80,"column":7,"nodeType":"170","endLine":80,"endColumn":9,"suggestions":"189"},{"ruleId":"163","severity":1,"message":"190","line":17,"column":12,"nodeType":"165","messageId":"166","endLine":17,"endColumn":21},{"ruleId":"168","severity":1,"message":"191","line":62,"column":8,"nodeType":"170","endLine":62,"endColumn":27,"suggestions":"192"},{"ruleId":"163","severity":1,"message":"193","line":7,"column":43,"nodeType":"165","messageId":"166","endLine":7,"endColumn":60},{"ruleId":"163","severity":1,"message":"194","line":50,"column":20,"nodeType":"165","messageId":"166","endLine":50,"endColumn":30},{"ruleId":"163","severity":1,"message":"195","line":1,"column":36,"nodeType":"165","messageId":"166","endLine":1,"endColumn":44},{"ruleId":"163","severity":1,"message":"196","line":9,"column":7,"nodeType":"165","messageId":"166","endLine":9,"endColumn":12},{"ruleId":"163","severity":1,"message":"190","line":4,"column":57,"nodeType":"165","messageId":"166","endLine":4,"endColumn":66},{"ruleId":"197","severity":1,"message":"198","line":10,"column":16,"nodeType":"199","messageId":"200","endLine":10,"endColumn":18},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],"no-unused-vars","'Search' is defined but never used.","Identifier","unusedVar","'message' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["203"],"'axios' is defined but never used.","'Loading' is defined but never used.","'searchTerm' is assigned a value but never used.","'setSearchTerm' is assigned a value but never used.","'searchCountry' is assigned a value but never used.","'setSearchCountry' is assigned a value but never used.","'searchRegion' is assigned a value but never used.","'setSearchRegion' is assigned a value but never used.","'searchCounty' is assigned a value but never used.","'setSearchCounty' is assigned a value but never used.","'searchCity' is assigned a value but never used.","'setSearchCity' is assigned a value but never used.","'searchId' is assigned a value but never used.","'setSearchId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'center', 'fetcher', and 'zoom'. Either include them or remove the dependency array.",["204"],"'loading' is assigned a value but never used.",["205"],"'recovered' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'county'. Either include it or remove the dependency array.",["206"],"'CountryRegionData' is defined but never used.","'setLoading' is assigned a value but never used.","'useState' is defined but never used.","'axios' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"207","fix":"211"},{"desc":"212","fix":"213"},"Update the dependencies array to be: [id]",{"range":"214","text":"215"},"Update the dependencies array to be: [center, data, fetcher, zoom]",{"range":"216","text":"217"},{"range":"218","text":"215"},"Update the dependencies array to be: [region, dayFilter, county]",{"range":"219","text":"220"},[1406,1408],"[id]",[9791,9797],"[center, data, fetcher, zoom]",[2366,2368],[2515,2534],"[region, dayFilter, county]"]

