[{"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/index.js":"1","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/App.js":"2","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/Profile.js":"3","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/Home.js":"4","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/About.js":"5","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/Dashboard.js":"6","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/Signup.js":"7","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/Admin.js":"8","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/Login.js":"9","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/UserDetail.js":"10","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/Search.js":"11","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/common/Layout.js":"12","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/common/FormGroup.js":"13","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/services/auth.service.js":"14","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/Statistics.js":"15","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/utilities/functions.utilities.js":"16","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/SearchForm.js":"17","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/services/user.service.js":"18","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/utilities/localStorage.utilities.js":"19","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/utilities/authHeader.utilities.js":"20","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/DeathsGraph.js":"21","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/CasesGraph.js":"22","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/services/location.services.js":"23","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/Map.js":"24"},{"size":304,"mtime":1609647817373,"results":"25","hashOfConfig":"26"},{"size":1360,"mtime":1609643400135,"results":"27","hashOfConfig":"26"},{"size":1031,"mtime":1609643400146,"results":"28","hashOfConfig":"26"},{"size":190,"mtime":1609643400143,"results":"29","hashOfConfig":"26"},{"size":154,"mtime":1609647817371,"results":"30","hashOfConfig":"26"},{"size":5031,"mtime":1609647817372,"results":"31","hashOfConfig":"26"},{"size":7963,"mtime":1609647817385,"results":"32","hashOfConfig":"26"},{"size":2208,"mtime":1609643400137,"results":"33","hashOfConfig":"26"},{"size":3937,"mtime":1609643400145,"results":"34","hashOfConfig":"26"},{"size":5066,"mtime":1609643400151,"results":"35","hashOfConfig":"26"},{"size":7230,"mtime":1609724652720,"results":"36","hashOfConfig":"26"},{"size":2679,"mtime":1609647817372,"results":"37","hashOfConfig":"26"},{"size":292,"mtime":1609544742770,"results":"38","hashOfConfig":"26"},{"size":1151,"mtime":1609544742774,"results":"39","hashOfConfig":"26"},{"size":3581,"mtime":1609713239752,"results":"40","hashOfConfig":"26"},{"size":251,"mtime":1609544742778,"results":"41","hashOfConfig":"26"},{"size":5633,"mtime":1609723305926,"results":"42","hashOfConfig":"26"},{"size":2921,"mtime":1609643400158,"results":"43","hashOfConfig":"26"},{"size":426,"mtime":1609544742780,"results":"44","hashOfConfig":"26"},{"size":347,"mtime":1609643400159,"results":"45","hashOfConfig":"26"},{"size":698,"mtime":1609643400142,"results":"46","hashOfConfig":"26"},{"size":701,"mtime":1609643400139,"results":"47","hashOfConfig":"26"},{"size":993,"mtime":1609647873156,"results":"48","hashOfConfig":"26"},{"size":7110,"mtime":1609711466457,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"28a3tb",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/index.js",[],["106","107"],"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/App.js",[],"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/Profile.js",[],"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/Home.js",[],"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/About.js",[],"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/Dashboard.js",[],"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/Signup.js",["108","109","110"],"import React, { useState, useRef, useEffect } from 'react'\nimport Form from 'react-validation/build/form'\nimport Input from 'react-validation/build/input'\nimport CheckButton from 'react-validation/build/button'\nimport { isEmail } from \"validator\"\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\n\n//Components\nimport FormGroup from \"./common/FormGroup\"\n\n//Helper\nimport { register, login } from '../services/auth.service'\nimport { resMessage } from '../utilities/functions.utilities'\n\nconst axios = require('axios')\nconst GOOGLE_API_KEY = 'AIzaSyDbjklIejS9yn5KhRaEWen72vYpBu_0BZo'\n\n//Function given to react-validator\nconst required = (value) => {\n    if(!value){\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        )\n    }\n}\n\n//Function that validates username\nconst vusername = (value) => {\n    if(value.length < 3 || value.length >= 20) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                Your username must be between 3 and 20 characters\n            </div>\n        )\n    }\n}\n\n//Function that validates passwords\nconst vpassword = (value) => {\n    if(value.length < 6 || value.length >= 40) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                Your password must be between 6 and 40 characters\n            </div>\n        )\n    }\n}\n\nconst validEmail = (value) => {\n    if(!isEmail) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                Submitted e-mail not valid\n            </div>\n        )\n    }\n}\n\nconst Register = (props) => {\n    const form = useRef()\n    const checkBtn = useRef()\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [email, setEmail] = useState('')\n    const [message, setMessage] = useState('')\n    const [successful, setSuccessful] = useState(false)\n    const [country, setCountry] = useState('')\n    const [region, setRegion] = useState('')\n    const [city, setCity] = useState('')\n    const [loading, setLoading] = useState(false)\n    \n    const onChangeUsername = (e) => {\n        const username = e.target.value\n        setUsername(username)\n    }\n\n    const onChangePassword = (e) => {\n        const password = e.target.value\n        setPassword(password)\n    }\n\n    const onChangeEmail = (e) => {\n        const email = e.target.value\n        setEmail(email)\n    }\n\n    const onChangeCountry = (val) => {\n        console.log(val)\n        setCountry(val)\n    }\n\n    const onChangeRegion = (val) => {\n        console.log(val)\n        setRegion(val)\n    }\n\n    const onChangeCity = (e) => {\n        const city = e.target.value\n        console.log(city)\n        setCity(city)\n    }\n\n    const handleSignup = async (e) => {\n        //Prevent reload of pressing the button\n        e.preventDefault()\n        //Prevent message clear them out\n        setMessage(\"\")\n        setSuccessful(false)\n        //delay for 2 seconds then switch to the login page\n        \n        \n        // validtes all the fields in your form\n        form.current.validateAll()\n        \n        // Validator stores errors and we can check if errors exist\n        \n        if(checkBtn.current.context._errors.length === 0) {\n            //Google API request\n            const apiResponse = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${city},${region}&key=${GOOGLE_API_KEY}`)\n            //Parses over API and pulls out \"____ County\", replace removes county for disease API\n            const county = Object.values(apiResponse.data.results[0])[0][1].long_name.replace(/County/g, '')\n            register(username, email, password, country, region, city, county).then(\n                (response) => {\n                    setMessage(response.data.message)\n                    setSuccessful(true)\n                    console.log(\"COUNTY AFTER REGISTER\", county)\n                    login(username, password).then(\n                        ()=> {\n                            props.history.push(\"/dashboard\")\n                            window.location.reload()\n                        },\n                        (error) => {\n                            // Checking all the data received from our backend\n                            \n                            // Setting loading to false and return the error\n                            setLoading(false)\n                            setMessage(resMessage(error))\n                        }\n                    )\n                },\n                (error) => {\n                    setMessage(resMessage(error))\n                    setSuccessful(false)\n                }\n            )\n\n        } else {\n            successful(false)\n        }\n\n\n    }\n\n\n    return(\n        <div>\n            <div className=\"container\">\n                <img\n                    src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n                    alt=\"profile-img\"\n                    className=\"profile-img-card\"\n                />\n                <Form onSubmit={handleSignup} ref={form}>\n\n                    <FormGroup text=\"username\">\n                        <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"username\"\n                            value={username}\n                            onChange={onChangeUsername}\n                            validations={[required, vusername]}\n                        />\n                    </FormGroup>\n\n                    <FormGroup text=\"email\">\n                        <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"email\"\n                            value={email}\n                            onChange={onChangeEmail}\n                            validations={[required, validEmail]}\n                        />\n                    </FormGroup>\n\n                    <FormGroup text=\"password\">\n                        <Input\n                            type=\"password\"\n                            className=\"form-control\"\n                            name=\"password\"\n                            value={password}\n                            onChange={onChangePassword}\n                            validations={[required, vpassword]}\n                        />\n                    </FormGroup>\n\n                    <CountryDropdown\n                        value={country}\n                        onChange={(val) => onChangeCountry(val)} />\n                    <RegionDropdown\n                        country={country}\n                        value={region}\n                        onChange={(val) => onChangeRegion(val)} />\n\n                    <FormGroup text=\"city\">\n                        <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"city\"\n                            value={city}\n                            onChange={onChangeCity}\n                            validations={[required]}\n                        />\n                    </FormGroup>\n\n                    <div className=\"form-group\">\n                        <button className=\"btn\" >\n                            <span>Sign Up</span>\n                        </button>   \n                    </div>\n\n                    {message && (\n                        <div className=\"form-group\">\n                            <div className={successful ? \"alert alert-success\" : \"alert alert-danger\"} role=\"alert\">\n                                {message}\n                            </div>\n                        </div>\n                    )}\n\n                    <CheckButton style={{display: \"none\"}} ref={checkBtn}/>\n                </Form>\n            </div>\n        </div>\n    )\n}\n\nexport default Register","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/Admin.js",[],"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/Login.js",[],"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/UserDetail.js",["111"],"import React, {useState, useEffect, useRef} from 'react'\nimport Form from 'react-validation/build/form'\nimport Input from 'react-validation/build/input'\nimport { useParams } from 'react-router-dom'\nimport { getOneUser, getRoles, addUserRoles, removeUserRoles, deleteUser } from '../services/user.service'\n\nconst UserDetail = (props) => {\n    const form = useRef()\n    const [user, setUser] = useState('')\n    const [roles, setRoles] = useState('')\n    let { id } = useParams()\n\n    const handleAddRole = (event) => {\n        event.preventDefault()\n        let roleId = event.target.roleId.value\n        let roleName = event.target.roleName.value\n        const newRole =\n            {\n                _id: roleId, \n                name: roleName\n            }\n        // console.log(newRole)\n        addUserRoles(id,newRole)\n        .then(response => {\n            console.log(response.data)\n            window.location.reload()\n        })\n        .catch(err => console.log(err))\n    }\n\n    const handleRemoveRole = (event) => {\n        event.preventDefault()\n        let roleId = event.target.roleId.value\n        let roleName = event.target.roleName.value\n        const newRole =\n            {\n                _id: roleId, \n                name: roleName\n            }\n        // console.log(newRole)\n        removeUserRoles(id,newRole)\n        .then(response => {\n            console.log(response.data)\n            window.location.reload()\n        })\n        .catch(err => console.log(err))\n    }\n\n    const handleDelete = e => {\n        e.preventDefault()\n        deleteUser(id)\n        .then(\n            ()=> {\n                props.history.push('/admin')\n                window.location.reload()\n            }\n        )\n        .catch(err => {console.log(err)})\n        console.log(id)\n    }\n\n    useEffect(() => {\n        getOneUser(id).then(response => {\n            setUser(response.data)\n            },\n            (error) => {\n                const _error =\n                    (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                    error.message ||\n                    error.toString();\n                setUser(_error);\n              }\n        )\n        getRoles().then(response => {\n            setRoles(response.data)\n            },\n            (error) => {\n                const _error =\n                    (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                    error.message ||\n                    error.toString();\n                setRoles(_error);\n              }\n        )\n    },[])\n    \n    return(\n        <>\n            {user ? (\n                <div>\n                    <h1>{user.username}</h1>\n                    <p>{user.email}</p>\n                    {user.primaryLocation && \n                    <p>\n                        {user.primaryLocation.city},{' '}\n                        {user.primaryLocation.state},{' '} \n                        {user.primaryLocation.county}{' '}-{' '}\n                        {user.primaryLocation.country}\n                    </p>}\n                    <Form onSubmit={handleDelete} ref={form}>\n                        <Input type='submit' value='Delete User' />\n                    </Form>\n                    {user.roles && \n                        user.roles.map(role => \n                        <div key={role._id}>\n                            <p>{role.name}</p>\n                            <Form onSubmit={handleRemoveRole} ref={form}>\n                                <Input type='hidden' value={role._id} name='roleId'/>\n                                <Input type='hidden' value={role.name} name='roleName'/>\n                                <Input type='submit'  value='Remove Role'/>\n                            </Form>\n                        </div>)\n                    }\n                    {/* {console.log(user)} */}\n                </div>\n            ) : (\n                <div>Loading...</div>\n            )}\n            {roles ? (\n                <div>\n                    <h4>Add Roles</h4>\n                {/* {console.log(roles)} */}\n                {roles.length > 0 ? (\n                <div>\n                    {roles.map(role => (\n                        <div key={role._id}>\n                            <p>{role.name}</p>\n                            <Form onSubmit={handleAddRole} ref={form}>\n                                <Input type='hidden' value={role._id} name='roleId'/>\n                                <Input type='hidden' value={role.name} name='roleName'/>\n                                <Input type='submit'  value='Add Role'/>\n                            </Form>\n                        </div>\n                    )\n                    )}\n                </div>\n                ) : (\n                    <div>No roles to display!</div>\n                )\n            }\n                </div>\n            ) : (\n                <div>Loading...</div>\n            )}\n        </>\n    )\n\n}\n\nexport default UserDetail","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/Search.js",["112"],"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/common/Layout.js",[],"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/common/FormGroup.js",[],"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/services/auth.service.js",[],"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/Statistics.js",["113","114"],"import React, { useState, useEffect } from 'react'\nimport { getPrimaryLocation } from '../services/user.service'\nimport { getCurrentUser } from '../services/auth.service'\nimport DeathsGraph from './DeathsGraph'\nimport CasesGraph from './CasesGraph'\n\nconst axios = require('axios')\n\n\nconst Statistics = () => {\n    const [primaryLocation, setPrimaryLocation] = useState({})\n    //Location states\n    const [country, setCountry] = useState('')\n    const [county, setCounty] = useState('')\n    const [region, setRegion] = useState('')\n    //API Stats states\n    const [confirmedCases, setConfirmedCases] = useState('')\n    const [deaths, setDeaths] = useState('')\n    const [recovered, setRecovered] = useState('')\n    const [updatedAt, setUpdatedAt] = useState('')\n    const [historicalDates, setHistoricalDates] = useState([])\n    const [historicalCases, setHistoricalCases] = useState([])\n    const [historicalDeaths, setHistoricalDeaths] = useState([])\n    const [dayFilter, setDayFilter] = useState(30)\n\n    const onChangeDayFilter = (event, val) => {\n        setDayFilter(val)\n        console.log(dayFilter)\n    }\n\n\n    useEffect(()=>{\n        getPrimaryLocation()\n        .then(response => {\n            setPrimaryLocation(response)\n        })\n    }, [])\n    \n\n    useEffect(()=> {\n        if(primaryLocation.county !== undefined) {\n            axios.get(`https://disease.sh/v3/covid-19/jhucsse/counties/${primaryLocation.county}`)\n            .then(response => {\n                response.data.forEach(data=> {\n                    if(primaryLocation.state === data.province) {\n                        setCountry(data.country)\n                        setCounty(data.county)\n                        setRegion(data.province)\n                        setConfirmedCases(data.stats.confirmed)\n                        setDeaths(data.stats.deaths)\n                        setRecovered(data.stats.recovered)\n                        setUpdatedAt(data.updatedAt)\n                    }\n                })\n            })\n        }\n    }, [primaryLocation])\n\n\n    useEffect(() => {\n        if(region !== undefined) {\n            axios.get(`https://disease.sh/v3/covid-19/historical/usacounties/${region.toLowerCase()}?lastdays=${dayFilter}`)\n            .then(response => {\n                response.data.forEach(data => {\n                    if (data.county !== undefined && data.county === county.toLowerCase()) {\n                        setHistoricalDates(Object.keys(data.timeline.cases))\n                        setHistoricalCases(Object.values(data.timeline.cases))\n                        setHistoricalDeaths(Object.values(data.timeline.deaths))\n                    }\n                })\n            })\n        }\n    }, [region, dayFilter])\n\n\n    return(\n        <div>\n            Statistics\n            <p>Country: {country}</p>\n            <p>County: {county}</p>\n            <p>State: {region}</p>\n            <p>Confirmed Cases: {confirmedCases}</p>\n            <p>Deaths: {deaths}</p>\n            <p>Recovered: {recovered}</p>\n            <p>Last Updated: {updatedAt}</p>\n            <h3>Filters: </h3>\n            <ul>\n                <button onClick={e => onChangeDayFilter(e, 7)}>7 Days</button>\n                <button onClick={e => onChangeDayFilter(e, 30)}>30 Days</button>\n                <button onClick={e => onChangeDayFilter(e, \"all\")}>All</button>\n            </ul>\n\n            <CasesGraph dates={historicalDates} cases={historicalCases} />\n            <DeathsGraph dates={historicalDates} deaths={historicalDeaths} />\n        </div>\n    )\n\n}\n\nexport default Statistics","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/utilities/functions.utilities.js",[],"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/SearchForm.js",["115"],"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/services/user.service.js",[],"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/utilities/localStorage.utilities.js",[],"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/utilities/authHeader.utilities.js",[],"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/DeathsGraph.js",["116","117"],"import React, { useState, useEffect } from 'react'\nimport { Line } from \"react-chartjs-2\";\n\n\n\nconst CasesGraph = ({dates, deaths}) => {\n    const data = {\n        labels: dates,\n        datasets: [\n          {\n            label: \"Confirmed Deaths\",\n            data: deaths,\n            fill: true,\n            backgroundColor: \"rgba(255,0,0,0.2)\",\n            borderColor: \"rgba(255,0,0,1)\"\n          }\n        ]\n      };\n    \n    const options = {\n        title: {\n            display: true,\n            text: \"Confirmed Cases\"\n          }\n    }\n\n    return(\n        <div className=\"cases-graph\">\n            <Line data={data} options={options}/>\n        </div>\n    )\n}\n\nexport default CasesGraph","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/CasesGraph.js",["118","119"],"import React, { useState, useEffect } from 'react'\nimport { Line } from \"react-chartjs-2\";\n\n\n\nconst CasesGraph = ({dates, cases}) => {\n    const data = {\n        labels: dates,\n        datasets: [\n          {\n            label: \"Confirmed Cases\",\n            data: cases,\n            fill: true,\n            backgroundColor: \"rgba(75,192,192,0.2)\",\n            borderColor: \"rgba(75,192,192,1)\"\n          }\n        ]\n      };\n    \n    const options = {\n        title: {\n            display: true,\n            text: \"Confirmed Cases\"\n          }\n    }\n\n    return(\n        <div className=\"cases-graph\">\n            <Line data={data} options={options}/>\n        </div>\n    )\n}\n\nexport default CasesGraph","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/services/location.services.js",[],"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/Map.js",["120","121","122"],"// import React from \"react\"\nimport React, { useRef, useEffect, useState } from \"react\";\n// import useSWR from \"swr\";\nimport axios from \"axios\"\n//import component\n\n\nconst mapboxgl = require('mapbox-gl/dist/mapbox-gl.js');\n\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiYmluYXJ5YmVhc3QiLCJhIjoiY2tpbTU3cW8xMHE1ZTJycXJkemdjZThmMSJ9.LUCLnUpyYjcUF48GPUEUVQ';\n\nfunction Map(props) {\n\n    const [searchTerm, setSearchTerm] = useState(props.searchTerm)\n    const mapboxElRef = useRef(null);\n\n    // const setSearch = (value) => {\n    //   console.log(value)\n    // //   setSearchTerm(value)\n    //   // data = useSWR(\"https://disease.sh/v3/covid-19/jhucsse\", fetcher);\n    // }\n    const fetcher = (url,city,state,county,country) =>\n    fetch(url) \n     \n      .then(r => r.json())\n      .then(data =>\n        \n        data.map((point, index) => {\n\n            // i need to another if statement to check if the search terms matches\n            \n                return {\n                    type: \"Feature\",\n                    geometry: {\n                      type: \"Point\",\n                      coordinates: [\n                        point.coordinates.longitude,\n                        point.coordinates.latitude\n                      ]\n                    },\n                    properties: {\n                      id: index, // unique identifier in this case the index\n                      country: point.country,\n                      province: point.province,\n                      county: point.county,\n                      cases: point.stats.confirmed,\n                      deaths: point.stats.deaths,\n                      recovered: point.stats.recovered\n                    }\n            }\n          \n            \n            \n        })\n      );\n\n  // Fetching our data with swr package\n//   let { data } = useSWR(\"https://disease.sh/v3/covid-19/jhucsse\", fetcher);\n    \n\n    useEffect(() => {\n       \n        let data\n        axios.get(\"https://disease.sh/v3/covid-19/jhucsse\")\n    .then(response => {\n        data = response.data.map((point, index) => {\n           \n            // i need to another if statement to check if the search terms matches\n            \n                return {\n                    type: \"Feature\",\n                    geometry: {\n                      type: \"Point\",\n                      coordinates: [\n                        point.coordinates.longitude,\n                        point.coordinates.latitude\n                      ]\n                    },\n                    properties: {\n                      id: index, // unique identifier in this case the index\n                      country: point.country,\n                      province: point.province,\n                      county: point.county,\n                      cases: point.stats.confirmed,\n                      deaths: point.stats.deaths,\n                      recovered: point.stats.recovered\n                    }\n            }\n          \n            \n            \n        })\n        if (data) {\n            // You can store the map instance with useRef too\n            let map = new mapboxgl.Map({\n              container: mapboxElRef.current,\n              style: \"mapbox://styles/binarybeast/ckjdljfpu6smv1ao028dmjh4r\",\n              center: [16, 27], // initial geo location\n              zoom: 1.5 // initial zoom\n            });\n            \n            map.addControl(new mapboxgl.NavigationControl());\n          let filterData = data\n          if(props.searchTerm){\n            console.log(props.searchTerm)\n            filterData = data.filter((locationData) => locationData.properties.country === props.searchTerm.country)\n          }\n          console.log(filterData)\n          console.log(data)\n         // Call this method when the map is loaded\n         map.once(\"load\", function() {\n            // Add our SOURCE\n            // with id \"points\"\n            map.addSource(\"points\", {\n              type: \"geojson\",\n              data: {\n                type: \"FeatureCollection\",\n                features: filterData\n              }\n            });\n    \n            // Add our layer\n            map.addLayer({\n              id: \"circles\",\n              source: \"points\", // this should be the id of the source\n              type: \"circle\",\n              // paint properties\n              paint: {\n                \"circle-opacity\": 0.75,\n                \"circle-stroke-width\": 1,\n                \"circle-radius\": 4,\n                \"circle-color\": \"#FFEB3B\"\n              }\n            });\n            // Create a mapbox popup\n    const popup = new mapboxgl.Popup({\n        closeButton: true,\n        closeOnClick: true\n      });\n      \n      // Variable to hold the active country/province on hover\n      let lastId;\n      \n      // Mouse move event\n      map.on(\"mousemove\", \"circles\", e => {\n        // Get the id from the properties\n        const id = e.features[0].properties.id;\n      \n        // Only if the id are different we process the tooltip\n        if (id !== lastId) {\n          lastId = id;\n      \n          // Change the pointer type on move move\n          map.getCanvas().style.cursor = \"pointer\";\n      \n          const { cases, deaths, country, province,county,recovered } = e.features[0].properties;\n          const coordinates = e.features[0].geometry.coordinates.slice();\n      \n          const provinceHTML =\n            province !== \"null\" ? `<p>Province: <b>${province}</b></p>` : \"\";\n      \n            const cityHTML =\n            county !== \"null\" ? `<p>City: <b>${county}</b></p>` : \"\";\n          const mortalityRate = ((deaths / cases) * 100).toFixed(2);\n      \n          const HTML = `<p>Country: <b>${country}</b></p>\n                    ${provinceHTML}\n                    ${cityHTML}\n                    <p>Cases: <b>${cases}</b></p>\n                    <p>Recovered: <b>${recovered}</b></p>\n                    <p>Deaths: <b>${deaths}</b></p>\n                    <p>Mortality Rate: <b>${mortalityRate}%</b></p>\n                   `;\n      \n          // Ensure that if the map is zoomed out such that multiple\n          // copies of the feature are visible, the popup appears\n          // over the copy being pointed to.\n          while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n            coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n          }\n      \n          popup\n            .setLngLat(coordinates)\n            .setHTML(HTML)\n            .addTo(map);\n        }\n      });\n      \n      // Mouse leave event\n      map.on(\"mouseleave\", \"circles\", function() {\n        // Reset the last Id\n        lastId = undefined;\n        map.getCanvas().style.cursor = \"\";\n        popup.remove();\n      });\n          });\n        }\n    \n        \n      }, [props.searchTerm]);\n      \n    })\n    // .catch(err => console.log(err))\n\n      console.log(\"rerender\")\n        \n\n    \n    return (\n        <div className=\"App\">\n            \n          <div className=\"mapContainer\">\n            {/* Assigned Mapbox container */}\n            <div className=\"mapBox\" ref={mapboxElRef} />\n          </div>\n        </div>\n      );\n    }\n\nexport default Map\n\n\n\n\n    ",["123","124"],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":1,"column":35,"nodeType":"131","messageId":"132","endLine":1,"endColumn":44},{"ruleId":"129","severity":1,"message":"133","line":6,"column":43,"nodeType":"131","messageId":"132","endLine":6,"endColumn":60},{"ruleId":"129","severity":1,"message":"134","line":73,"column":12,"nodeType":"131","messageId":"132","endLine":73,"endColumn":19},{"ruleId":"135","severity":1,"message":"136","line":89,"column":7,"nodeType":"137","endLine":89,"endColumn":9,"suggestions":"138"},{"ruleId":"135","severity":1,"message":"139","line":218,"column":6,"nodeType":"137","endLine":218,"endColumn":40,"suggestions":"140"},{"ruleId":"129","severity":1,"message":"141","line":3,"column":10,"nodeType":"131","messageId":"132","endLine":3,"endColumn":24},{"ruleId":"135","severity":1,"message":"142","line":73,"column":8,"nodeType":"137","endLine":73,"endColumn":27,"suggestions":"143"},{"ruleId":"129","severity":1,"message":"133","line":6,"column":43,"nodeType":"131","messageId":"132","endLine":6,"endColumn":60},{"ruleId":"129","severity":1,"message":"144","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":25},{"ruleId":"129","severity":1,"message":"130","line":1,"column":27,"nodeType":"131","messageId":"132","endLine":1,"endColumn":36},{"ruleId":"129","severity":1,"message":"144","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":25},{"ruleId":"129","severity":1,"message":"130","line":1,"column":27,"nodeType":"131","messageId":"132","endLine":1,"endColumn":36},{"ruleId":"129","severity":1,"message":"145","line":15,"column":12,"nodeType":"131","messageId":"132","endLine":15,"endColumn":22},{"ruleId":"129","severity":1,"message":"146","line":15,"column":24,"nodeType":"131","messageId":"132","endLine":15,"endColumn":37},{"ruleId":"129","severity":1,"message":"147","line":23,"column":11,"nodeType":"131","messageId":"132","endLine":23,"endColumn":18},{"ruleId":"125","replacedBy":"148"},{"ruleId":"127","replacedBy":"149"},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'CountryRegionData' is defined but never used.","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["152"],"React Hook useEffect has a missing dependency: 'searchLongitude'. Either include it or remove the dependency array.",["153"],"'getCurrentUser' is defined but never used.","React Hook useEffect has a missing dependency: 'county'. Either include it or remove the dependency array.",["154"],"'useState' is defined but never used.","'searchTerm' is assigned a value but never used.","'setSearchTerm' is assigned a value but never used.","'fetcher' is assigned a value but never used.",["150"],["151"],"no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},"Update the dependencies array to be: [id]",{"range":"161","text":"162"},"Update the dependencies array to be: [searchTerm, searchLatitude, data, searchLongitude]",{"range":"163","text":"164"},"Update the dependencies array to be: [region, dayFilter, county]",{"range":"165","text":"166"},[2657,2659],"[id]",[6768,6802],"[searchTerm, searchLatitude, data, searchLongitude]",[2714,2733],"[region, dayFilter, county]"]