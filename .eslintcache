[{"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/index.js":"1","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/App.js":"2","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/About.js":"3","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Search.js":"4","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Profile.js":"5","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/common/Layout.js":"6","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Signup.js":"7","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Dashboard.js":"8","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/SearchDetail.js":"9","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Admin.js":"10","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Home.js":"11","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Login.js":"12","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/UserDetail.js":"13","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/SearchForm.js":"14","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/services/auth.service.js":"15","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/services/location.services.js":"16","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/services/user.service.js":"17","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/common/FormGroup.js":"18","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/utilities/functions.utilities.js":"19","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Statistics.js":"20","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/common/Loading.js":"21","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/utilities/localStorage.utilities.js":"22","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/utilities/authHeader.utilities.js":"23","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/StatisticsTable.js":"24","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/DeathsGraph.js":"25","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/CasesGraph.js":"26"},{"size":304,"mtime":1609647560227,"results":"27","hashOfConfig":"28"},{"size":1559,"mtime":1610146116161,"results":"29","hashOfConfig":"28"},{"size":154,"mtime":1609647560224,"results":"30","hashOfConfig":"28"},{"size":8673,"mtime":1610146116162,"results":"31","hashOfConfig":"28"},{"size":1031,"mtime":1609615204809,"results":"32","hashOfConfig":"28"},{"size":2685,"mtime":1610146116163,"results":"33","hashOfConfig":"28"},{"size":9162,"mtime":1610146116162,"results":"34","hashOfConfig":"28"},{"size":6038,"mtime":1609905236188,"results":"35","hashOfConfig":"28"},{"size":3794,"mtime":1609905236190,"results":"36","hashOfConfig":"28"},{"size":2210,"mtime":1609905236187,"results":"37","hashOfConfig":"28"},{"size":758,"mtime":1610146116161,"results":"38","hashOfConfig":"28"},{"size":4418,"mtime":1610146116162,"results":"39","hashOfConfig":"28"},{"size":5396,"mtime":1609905236191,"results":"40","hashOfConfig":"28"},{"size":6194,"mtime":1610146116162,"results":"41","hashOfConfig":"28"},{"size":1231,"mtime":1610146116165,"results":"42","hashOfConfig":"28"},{"size":1075,"mtime":1610146116165,"results":"43","hashOfConfig":"28"},{"size":2870,"mtime":1610146116165,"results":"44","hashOfConfig":"28"},{"size":293,"mtime":1610146116163,"results":"45","hashOfConfig":"28"},{"size":251,"mtime":1609365055429,"results":"46","hashOfConfig":"28"},{"size":3373,"mtime":1609905236190,"results":"47","hashOfConfig":"28"},{"size":454,"mtime":1609905236193,"results":"48","hashOfConfig":"28"},{"size":426,"mtime":1609365083485,"results":"49","hashOfConfig":"28"},{"size":347,"mtime":1609536329668,"results":"50","hashOfConfig":"28"},{"size":4666,"mtime":1609991141033,"results":"51","hashOfConfig":"28"},{"size":698,"mtime":1609615667064,"results":"52","hashOfConfig":"28"},{"size":701,"mtime":1609615667063,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1xnegec",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"56"},"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/index.js",[],["115","116"],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/App.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/About.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Search.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Profile.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/common/Layout.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Signup.js",["117"],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Dashboard.js",["118"],"import React, {useState, useEffect, useRef} from 'react'\nimport { Link } from 'react-router-dom'\nimport Form from 'react-validation/build/form'\nimport Input from 'react-validation/build/input'\n\nimport Statistics from './Statistics'\nimport Loading from './common/Loading'\n\nimport { getFavorites, getHistory, getPrimaryLocation, editPrimary, removeFavorite } from '../services/user.service'\nimport { getCurrentUser } from '../services/auth.service'\n      \nconst Dashboard = () => {\n    const form = useRef()\n    const [currentUser, setCurrentUser] = useState(undefined)\n    const [userDashboard, setUserDashboard] = useState(undefined)\n    const [searchHistory, setSearchHistory] = useState(undefined)\n    const [primaryLocation, setPrimaryLocation] = useState(undefined)\n    const [primaryCountry, setPrimaryCountry] = useState(undefined)\n    const [primaryCounty, setPrimaryCounty] = useState(undefined)\n    const [primaryState, setPrimaryState] = useState(undefined)\n    \n    \n    useEffect(()=> {\n        const user = getCurrentUser()\n        if(user) {\n          setCurrentUser(user)\n          getFavorites().then(favorites => setUserDashboard(favorites))\n          getHistory().then(history => setSearchHistory(history))\n        }\n      }, [])\n\n    useEffect(()=> {\n        getPrimaryLocation().then(location => {\n            setPrimaryLocation(location)\n            setPrimaryCountry(location.country)\n            setPrimaryCounty(location.county)\n            setPrimaryState(location.state)\n          })\n      }, [])\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        let user = currentUser.id\n        \n        let id = (event.target.id.value)\n        let city = (event.target.city.value)\n        let userState = (event.target.userState.value)\n        let country = (event.target.country.value)\n        let county = (event.target.county.value)\n\n        editPrimary(user,id,city,userState,country,county)\n        .then(response => {\n            console.log(response.data)\n            window.location.reload()\n        })\n        .catch(err => console.log(err))\n    }\n\n    const handleRemove = event => {\n        event.preventDefault()\n        let user = currentUser.id\n        let id = (event.target.id.value)\n\n        removeFavorite(user, id)\n        .then(response => {\n            console.log(response.data)\n            window.location.reload()\n        })\n        .catch(err => console.log(err))\n    }\n\n    return(\n        <>\n        {currentUser ? (\n        <div className='container'>\n            <h1>Dashboard - {currentUser.username}</h1>\n            {primaryLocation ? (\n                <div>\n                    <h3>My Primary Location</h3>\n                    <div>\n                        <h4>{primaryLocation.city}, {primaryLocation.state} - {primaryLocation.country}</h4>\n                        <Statistics\n                            newCountry={primaryCountry}\n                            newCounty={primaryCounty}\n                            newRegion={primaryState}\n                        />\n                    </div>\n                </div>\n            ) : (\n                <div>No Primary Location set</div>\n            )}\n        </div>\n        ) : (\n            <div>Please <Link to='/login'>Login</Link> or <Link to='/register'>Register</Link> to add to view this page</div>\n        )}\n        {userDashboard ? (\n        <div>\n            {/* {setLoading(false)} */}\n            {/* {console.log(userDashboard)} */}\n            {userDashboard.length > 0 ? (\n                <div>\n                <h2>My Locations</h2>\n                <div>\n                    {userDashboard.map(favorite=> (\n                        <div key={favorite._id}>\n                            <h4>{favorite.city}, {favorite.state} - {favorite.country}</h4>\n                            <Form onSubmit={handleSubmit} ref={form}>\n                                <Input type='hidden' value={favorite._id} name='id' />\n                                <Input type='hidden' value={favorite.city} name='city' />\n                                <Input type='hidden' value={favorite.state} name='userState' />\n                                <Input type='hidden' value={favorite.country} name='country' />\n                                <Input type='hidden' value={favorite.county} name='county' />\n                                <Input type='submit' value='Set as Primary Location' name='submit' />\n                            </Form>\n                            <Form onSubmit={handleRemove} ref={form}>\n                                <Input type='hidden' value={favorite._id} name='id' />\n                                <Input type='submit' value='Remove from My Locations' name='submit' />\n                            </Form>\n                        </div>\n                    ))}\n                </div>\n                </div>\n            ) : (\n                <div>No Locations to Display!</div>\n            )}\n        </div>\n        ) : (\n            <div>\n                <div className='progress'>\n                    <span className='indeterminate'></span>\n                </div>\n            </div>\n        )}\n        {searchHistory ? (\n        <div>\n            Search History\n            {/* {setLoading(false)} */}\n            {/* {console.log(searchHistory)} */}\n            {searchHistory.length > 0 ? (\n                <div>\n                <ul>\n                    {searchHistory.map((history, index)=> (\n                        <li key={index}><Link to= {`/search/${history._id}`}>{history.city}, {history.state}, {history.country}</Link></li>\n                    ))}\n                </ul>\n                </div>\n            ) : (\n                <div>No Search History to Display! Get started <Link to='/search'>here</Link></div>\n            )}\n        </div>\n        ) : (\n            <div>\n                <div className='progress'>\n                    <span className='indeterminate'></span>\n                </div>\n            </div>\n        )}\n        </>\n\n    )\n}\n\nexport default Dashboard","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/SearchDetail.js",["119","120"],"import React, {useState, useEffect, useRef} from 'react'\nimport Form from 'react-validation/build/form'\nimport Input from 'react-validation/build/input'\nimport { useParams, Link } from 'react-router-dom'\nimport { getOneLocation } from '../services/location.services'\nimport { addFavorite, getFavorites, removeFavorite } from '../services/user.service'\nimport { getCurrentUser } from '../services/auth.service'\n\nimport Statistics from './Statistics'\n\nconst SearchDetail = () => {\n    const form = useRef()\n    const [location, setLocation] = useState('')\n    const [currentUser, setCurrentUser] = useState(undefined)\n    const [favoriteLocations, setFavoriteLocations] = useState([])\n    const [message, setMessage] = useState('')\n    let { id } = useParams()\n\n    useEffect(() => {\n        getOneLocation(id).then(response => {\n            setLocation(response.data)\n            },\n            (error) => {\n                setMessage(error)\n                setLocation(error)\n            }\n        )\n        const user = getCurrentUser()\n        if(user) {\n            setCurrentUser(user)\n            getFavorites().then(favorites => {\n                setFavoriteLocations(favorites)\n            },\n            (error) => {\n                setMessage(error)\n                setFavoriteLocations(error)\n            })\n        }\n    },[])\n\n    const handleAddFavorite = e => {\n        e.preventDefault()\n        let user = currentUser.id\n        let id = e.target.id.value\n\n        addFavorite(user,id)\n        .then(response => {\n            // console.log(response.data)\n            setMessage(response.data)\n            window.location.reload()\n        })\n        .catch(err => setMessage(err))\n    }\n\n    const handleRemove = event => {\n        event.preventDefault()\n        let user = currentUser.id\n        let id = (event.target.id.value)\n\n        removeFavorite(user, id)\n        .then(response => {\n            // console.log(response.data)\n            setMessage(response.data)\n            window.location.reload()\n        })\n        .catch(err => setMessage(err))\n    }\n\n    return(\n        <>\n            {location ? (\n                <div>\n                    <h3>{location.city}, {location.state} - {location.country}</h3>\n                    {currentUser ? (\n                        <>\n                        {(favoriteLocations.length > 0 && favoriteLocations.some(existing => existing._id === location._id)) ? (\n                            <Form ref={form} onSubmit={handleRemove}>\n                                <Input type='hidden' value={location._id} name='id'/>\n                                <Input type='submit' value='Remove from Favorite Locations' name='submit'/>\n                            </Form>\n                        ) : (\n                            <Form ref={form} onSubmit={handleAddFavorite}>\n                                <Input type='hidden' value={location._id} name='id'/>\n                                <Input type='submit' value='Add to Favorite Locations' name='submit'/>\n                            </Form>\n                        )}\n                        </>\n                    ) : (\n                        <div><Link to='/login'>Login</Link> or <Link to='/register'>Register</Link> to add to favorite locations!</div>\n                    )}\n                </div>\n            ) : (\n                <div className='progress'>\n                    <span className='indeterminate'></span>\n                </div>\n            )}\n            <Statistics\n                newCountry={location.country}\n                newCounty={location.county}\n                newRegion={location.state}\n             />\n            <div>\n                <Link to='/search'>Back to Map</Link>\n            </div>\n        </>\n    )\n}\n\nexport default SearchDetail","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Admin.js",["121"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { getAllUsers } from '../services/user.service'\nimport {resMessage} from '../utilities/functions.utilities'\n\nconst Admin = () => {\n    const [users, setUsers] = useState('')\n    const [message, setMessage] = useState('')\n\n    useEffect(() => {\n        getAllUsers().then(response => {\n            setUsers(response.data)\n            },\n            (error) => {\n                setMessage(resMessage(error))\n                setUsers(error);\n              }\n        )\n    },[])\n    return(\n        <>\n            {users ? (\n                <div>\n                    <h1>All Users</h1>\n                    {/* {console.log(users)} */}\n                    {users.length > 0 ? (\n                        <div>\n                            {users.map(user => (\n                                <div key={user._id}>\n                                    <Link to={`/admin/users/${user._id}`}>\n                                        <h3>{user.username}</h3>\n                                    </Link>    \n                                    <p>{user.email}</p>\n                                    {user.primaryLocation && \n                                    <p>\n                                        {user.primaryLocation.city},{' '}\n                                        {user.primaryLocation.state},{' '} \n                                        {user.primaryLocation.county}{' '}-{' '}\n                                        {user.primaryLocation.country}\n                                    </p>}\n                                    {user.roles && \n                                        user.roles.map(role => <p key={role._id}>{role.name}</p>)\n                                    }\n                                </div>\n                            ))}\n                        </div>\n                    ) : (\n                        <div>No Users to Show!</div>\n                    )}\n                </div>\n            ) : (\n                <div className='progress'>\n                    <span className='indeterminate'></span>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default Admin","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Home.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Login.js",["122"],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/UserDetail.js",["123","124"],"import React, {useState, useEffect, useRef} from 'react'\nimport Form from 'react-validation/build/form'\nimport Input from 'react-validation/build/input'\nimport { useParams } from 'react-router-dom'\nimport { getOneUser, getRoles, addUserRoles, removeUserRoles, deleteUser } from '../services/user.service'\n\nconst UserDetail = (props) => {\n    const form = useRef()\n    const [user, setUser] = useState('')\n    const [roles, setRoles] = useState('')\n    const [message, setMessage] = useState('')\n    let { id } = useParams()\n\n    const handleAddRole = (event) => {\n        event.preventDefault()\n        let roleId = event.target.roleId.value\n        let roleName = event.target.roleName.value\n        const newRole =\n            {\n                _id: roleId, \n                name: roleName\n            }\n        // console.log(newRole)\n        addUserRoles(id,newRole)\n        .then(response => {\n            setMessage(response.data)\n            window.location.reload()\n        })\n        .catch(err => setMessage(err))\n    }\n\n    const handleRemoveRole = (event) => {\n        event.preventDefault()\n        let roleId = event.target.roleId.value\n        let roleName = event.target.roleName.value\n        const newRole =\n            {\n                _id: roleId, \n                name: roleName\n            }\n        // console.log(newRole)\n        removeUserRoles(id,newRole)\n        .then(response => {\n            setMessage(response.data)\n            window.location.reload()\n        })\n        .catch(err => setMessage(err))\n    }\n\n    const handleDelete = e => {\n        e.preventDefault()\n        deleteUser(id)\n        .then(\n            ()=> {\n                props.history.push('/admin')\n                window.location.reload()\n            }\n        )\n        .catch(err => {setMessage(err)})\n        // console.log(id)\n    }\n\n    useEffect(() => {\n        getOneUser(id).then(response => {\n            setUser(response.data)\n            },\n            (error) => {\n                setMessage(error)\n                setUser(error)\n              }\n        )\n        getRoles().then(response => {\n            setRoles(response.data)\n            },\n            (error) => {\n                setMessage(error)\n                setRoles(error);\n              }\n        )\n    },[])\n    \n    return(\n        <>\n            {user ? (\n                <div>\n                    <h1>{user.username}</h1>\n                    <p>{user.email}</p>\n                    {user.primaryLocation && \n                    <p>\n                        {user.primaryLocation.city},{' '}\n                        {user.primaryLocation.state},{' '} \n                        {user.primaryLocation.county}{' '}-{' '}\n                        {user.primaryLocation.country}\n                    </p>}\n                    <Form onSubmit={handleDelete} ref={form}>\n                        <Input type='submit' value='Delete User' />\n                    </Form>\n                    {user.roles && \n                        user.roles.map(role => \n                        <div key={role._id}>\n                            <p>{role.name}</p>\n                            <Form onSubmit={handleRemoveRole} ref={form}>\n                                <Input type='hidden' value={role._id} name='roleId'/>\n                                <Input type='hidden' value={role.name} name='roleName'/>\n                                <Input type='submit'  value='Remove Role'/>\n                            </Form>\n                        </div>)\n                    }\n                    {/* {console.log(user)} */}\n                </div>\n            ) : (\n                <div className='progress'>\n                    <span className='indeterminate'></span>\n                </div>\n            )}\n            {roles ? (\n                <div>\n                    <h4>Add Roles</h4>\n                {/* {console.log(roles)} */}\n                {roles.length > 0 ? (\n                    <div>\n                        {/* {console.log(user.roles)} */}\n                            {roles.map(role => (\n                                <>\n                                    {(user.roles && user.roles.some(existing => existing._id === role._id)) ? (\n                                        <></>\n                                    ) : (\n                                        <div key={role._id}>\n                                            <p>{role.name}</p>\n                                            <Form onSubmit={handleAddRole} ref={form}>\n                                                <Input type='hidden' value={role._id} name='roleId'/>\n                                                <Input type='hidden' value={role.name} name='roleName'/>\n                                                <Input type='submit'  value='Add Role'/>\n                                            </Form>\n                                        </div>\n                                    )}\n                                </>\n                            )\n                        )}\n                    </div>\n                ) : (\n                    <div>No roles to display!</div>\n                )\n            }\n                </div>\n            ) : (\n                <div className='progress'>\n                    <span className='indeterminate'></span>\n                </div>\n            )}\n        </>\n    )\n\n}\n\nexport default UserDetail","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/SearchForm.js",["125","126"],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/services/auth.service.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/services/location.services.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/services/user.service.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/common/FormGroup.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/utilities/functions.utilities.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Statistics.js",["127"],"import React, { useState, useEffect } from 'react'\nimport DeathsGraph from './DeathsGraph'\nimport CasesGraph from './CasesGraph'\nimport StatisticsTable from './StatisticsTable'\n\n\nconst axios = require('axios')\n\n\nconst Statistics = ({newCountry, newCounty, newRegion}) => {\n    //Location states\n    const [country, setCountry] = useState(newCountry)\n    const [county, setCounty] = useState(newCounty)\n    const [region, setRegion] = useState(newRegion)\n    //API Stats states\n    const [confirmedCases, setConfirmedCases] = useState('')\n    const [deaths, setDeaths] = useState('')\n    const [recovered, setRecovered] = useState('')\n    const [updatedAt, setUpdatedAt] = useState('')\n    const [historicalDates, setHistoricalDates] = useState([])\n    const [historicalCases, setHistoricalCases] = useState([])\n    const [historicalDeaths, setHistoricalDeaths] = useState([])\n    const [dayFilter, setDayFilter] = useState(30)\n\n    const onChangeDayFilter = (event, val) => {\n        setDayFilter(val)\n        console.log(dayFilter)\n    }\n    \n    useEffect(()=> {\n        if(newCounty !== undefined) {\n            axios.get(`https://disease.sh/v3/covid-19/jhucsse/counties/${newCounty}`)\n            .then(response => {\n                response.data.forEach(data=> {\n                    if(newRegion === data.province) {\n                        setCountry(data.country)\n                        setCounty(data.county)\n                        setRegion(data.province)\n                        setConfirmedCases(data.stats.confirmed)\n                        setDeaths(data.stats.deaths)\n                        setRecovered(data.stats.recovered)\n                        setUpdatedAt(data.updatedAt)\n                    }\n                })\n            })\n        }\n    }, [newCountry, newCounty, newRegion])\n\n\n    useEffect(() => {\n        if(region !== undefined) {\n            axios.get(`https://disease.sh/v3/covid-19/historical/usacounties/${region.toLowerCase()}?lastdays=${dayFilter}`)\n            .then(response => {\n                response.data.forEach(data => {\n                    if (data.county !== undefined && data.county === county.toLowerCase()) {\n                        setHistoricalDates(Object.keys(data.timeline.cases))\n                        setHistoricalCases(Object.values(data.timeline.cases))\n                        setHistoricalDeaths(Object.values(data.timeline.deaths))\n                    }\n                })\n            })\n        }\n    }, [region, dayFilter])\n\n\n    return(\n        <div>\n            Statistics\n            <p>Country: {country}</p>\n            <p>County: {county}</p>\n            <p>State: {region}</p>\n            <p>Confirmed Cases: {confirmedCases}</p>\n            <p>Deaths: {deaths}</p>\n            <p>Recovered: {recovered}</p>\n            <p>Last Updated: {updatedAt}</p>\n            <h3>Filters: </h3>\n            <ul>\n                <button onClick={e => onChangeDayFilter(e, 7)}>7 Days</button>\n                <button onClick={e => onChangeDayFilter(e, 30)}>30 Days</button>\n                <button onClick={e => onChangeDayFilter(e, \"all\")}>All</button>\n            </ul>\n\n            <CasesGraph dates={historicalDates} cases={historicalCases} />\n            <DeathsGraph dates={historicalDates} deaths={historicalDeaths} />\n\n            <StatisticsTable />\n\n        </div>\n    )\n\n}\n\nexport default Statistics","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/common/Loading.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/utilities/localStorage.utilities.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/utilities/authHeader.utilities.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/StatisticsTable.js",["128"],"import React, { useState, useEffect } from 'react'\nimport { getFavorites, removeFavorite } from '../services/user.service'\nimport MaterialTable from \"material-table\";\n\nconst axios = require('axios')\n\n\nconst StatisticsTable = () => {\n    const [gridTable, setGridTable] = useState({\n        resolve: () => {}\n    })\n    const [gridData, setGridData] = useState([])\n\n    const onRowDelete = oldData =>\n        new Promise((resolve, reject) => {\n            const dataID = oldData._id\n            removeFavorite(dataID).then(response => {\n                console.log(response)\n            })\n            console.log(dataID)\n            let data = [...gridTable.data];\n            const index = data.indexOf(oldData);\n            data.splice(index, 1);\n            const updatedAt = new Date();\n            setGridTable({ ...gridTable, data, updatedAt, resolve });\n        })\n    \n    const onRowEdit = oldData =>\n    new Promise((resolve, reject) => {\n        const dataID = oldData._id\n        console.log(dataID)\n        // let data = [...gridTable.data];\n        // const index = data.indexOf(oldData);\n        // data.splice(index, 1);\n        // const updatedAt = new Date();\n        // setGridTable({ ...gridTable, data, updatedAt, resolve });\n    })\n\n\n    //Get favorites and set state\n    useEffect(() => {\n        let localGridData\n        //Get Favorites data\n        getFavorites().then(response => {\n            localGridData = response\n            response.forEach((favoritesData, index) => {\n                console.log(favoritesData)\n                const favoritesRegion = favoritesData.state\n                console.log(favoritesRegion)\n                //Make API call with favorites data county\n                axios.get(`https://disease.sh/v3/covid-19/jhucsse/counties/${favoritesData.county}`)\n                .then(response => {\n                    // Loop through API response and get the data for the county\n                    response.data.forEach((countyData) => {\n                        //Check if favorites state matches returned array of API response state\n                        if(countyData.province === favoritesRegion) {\n                            //merges the favorite location object with API response data\n                            let merged = Object.assign({}, localGridData[index], countyData.stats)\n                            setGridData(prevArray => [...prevArray, merged])\n                        }\n                    })\n                })\n\n            })\n        })\n    },[])\n\n    useEffect(()=> {\n        console.log(\"FINALY GRID DATA:\", gridData)\n        setGridTable({\n            data: gridData,\n            columns: [\n                {\n                    title: \"id\",\n                    field: \"_id\",\n                    hidden: true,\n                },\n                {\n                    title: \"City\",\n                    field: \"city\",\n                },\n                {\n                    title: \"County\",\n                    field: \"county\",\n                },\n                {\n                    title: \"State\",\n                    field: \"state\",\n                },\n                {\n                    title: \"Country\",\n                    field: \"country\",\n                },\n                {\n                    title: \"Confirmed Cases\",\n                    field: \"confirmed\",\n                },\n                {\n                    title: \"Confirmed Deaths\",\n                    field: \"deaths\",\n                },\n            ],\n            resolve: () => {}\n\n        })\n    }, [gridData])\n\n    //Run resolve for table\n    useEffect(() => {\n        gridTable.resolve()\n    }, [gridData, gridTable])\n\n    return (\n        <div>\n            <MaterialTable\n                title=\"Favorited Locations\"\n                data={gridTable.data}\n                columns={gridTable.columns}\n                editable={{\n                    deletable: rowData => true,\n                    onRowDelete: onRowDelete,\n                }}\n                options={{ search: true, paging: false, filtering: true, exportButton: true }}\n                localization={{\n                    header: {\n                        actions: \"Actions\"\n                    },\n                    body: {\n                        editRow: {\n                            deleteText: \"Are you sure you want to remove this favorited location?\"\n                        },\n                        deleteTooltip: \"Remove from favorite location\",\n                    },\n                }}\n                onRowClick={(event, rowData,) => console.log(rowData)}\n            />\n        </div>\n    )\n}\n\nexport default StatisticsTable","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/DeathsGraph.js",["129","130"],"import React, { useState, useEffect } from 'react'\nimport { Line } from \"react-chartjs-2\";\n\n\n\nconst CasesGraph = ({dates, deaths}) => {\n    const data = {\n        labels: dates,\n        datasets: [\n          {\n            label: \"Confirmed Deaths\",\n            data: deaths,\n            fill: true,\n            backgroundColor: \"rgba(255,0,0,0.2)\",\n            borderColor: \"rgba(255,0,0,1)\"\n          }\n        ]\n      };\n    \n    const options = {\n        title: {\n            display: true,\n            text: \"Confirmed Cases\"\n          }\n    }\n\n    return(\n        <div className=\"cases-graph\">\n            <Line data={data} options={options}/>\n        </div>\n    )\n}\n\nexport default CasesGraph","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/CasesGraph.js",["131","132"],"import React, { useState, useEffect } from 'react'\nimport { Line } from \"react-chartjs-2\";\n\n\n\nconst CasesGraph = ({dates, cases}) => {\n    const data = {\n        labels: dates,\n        datasets: [\n          {\n            label: \"Confirmed Cases\",\n            data: cases,\n            fill: true,\n            backgroundColor: \"rgba(75,192,192,0.2)\",\n            borderColor: \"rgba(75,192,192,1)\"\n          }\n        ]\n      };\n    \n    const options = {\n        title: {\n            display: true,\n            text: \"Confirmed Cases\"\n          }\n    }\n\n    return(\n        <div className=\"cases-graph\">\n            <Line data={data} options={options}/>\n        </div>\n    )\n}\n\nexport default CasesGraph",{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":71,"column":12,"nodeType":"139","messageId":"140","endLine":71,"endColumn":19},{"ruleId":"137","severity":1,"message":"141","line":7,"column":8,"nodeType":"139","messageId":"140","endLine":7,"endColumn":15},{"ruleId":"137","severity":1,"message":"142","line":16,"column":12,"nodeType":"139","messageId":"140","endLine":16,"endColumn":19},{"ruleId":"143","severity":1,"message":"144","line":39,"column":7,"nodeType":"145","endLine":39,"endColumn":9,"suggestions":"146"},{"ruleId":"137","severity":1,"message":"142","line":9,"column":12,"nodeType":"139","messageId":"140","endLine":9,"endColumn":19},{"ruleId":"137","severity":1,"message":"141","line":8,"column":8,"nodeType":"139","messageId":"140","endLine":8,"endColumn":15},{"ruleId":"137","severity":1,"message":"142","line":11,"column":12,"nodeType":"139","messageId":"140","endLine":11,"endColumn":19},{"ruleId":"143","severity":1,"message":"144","line":80,"column":7,"nodeType":"145","endLine":80,"endColumn":9,"suggestions":"147"},{"ruleId":"137","severity":1,"message":"148","line":7,"column":43,"nodeType":"139","messageId":"140","endLine":7,"endColumn":60},{"ruleId":"137","severity":1,"message":"149","line":50,"column":20,"nodeType":"139","messageId":"140","endLine":50,"endColumn":30},{"ruleId":"143","severity":1,"message":"150","line":63,"column":8,"nodeType":"145","endLine":63,"endColumn":27,"suggestions":"151"},{"ruleId":"137","severity":1,"message":"152","line":28,"column":11,"nodeType":"139","messageId":"140","endLine":28,"endColumn":20},{"ruleId":"137","severity":1,"message":"153","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":25},{"ruleId":"137","severity":1,"message":"154","line":1,"column":27,"nodeType":"139","messageId":"140","endLine":1,"endColumn":36},{"ruleId":"137","severity":1,"message":"153","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":25},{"ruleId":"137","severity":1,"message":"154","line":1,"column":27,"nodeType":"139","messageId":"140","endLine":1,"endColumn":36},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'Loading' is defined but never used.","'message' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["157"],["158"],"'CountryRegionData' is defined but never used.","'setLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'county'. Either include it or remove the dependency array.",["159"],"'onRowEdit' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},{"desc":"160","fix":"162"},{"desc":"163","fix":"164"},"Update the dependencies array to be: [id]",{"range":"165","text":"166"},{"range":"167","text":"166"},"Update the dependencies array to be: [region, dayFilter, county]",{"range":"168","text":"169"},[1334,1336],"[id]",[2287,2289],[2472,2491],"[region, dayFilter, county]"]