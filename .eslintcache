[{"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/index.js":"1","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/App.js":"2","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Signup.js":"3","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Home.js":"4","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/common/Layout.js":"5","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Login.js":"6","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/About.js":"7","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Admin.js":"8","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Dashboard.js":"9","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/common/FormGroup.js":"10","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/utilities/functions.utilities.js":"11","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/services/auth.service.js":"12","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/services/user.service.js":"13","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/utilities/localStorage.utilities.js":"14","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/utilities/authHeader.utilities.js":"15","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Statistics.js":"16"},{"size":301,"mtime":1609293814000,"results":"17","hashOfConfig":"18"},{"size":945,"mtime":1609387795870,"results":"19","hashOfConfig":"18"},{"size":7231,"mtime":1609383313445,"results":"20","hashOfConfig":"18"},{"size":95,"mtime":1609293233266,"results":"21","hashOfConfig":"18"},{"size":174,"mtime":1609293446586,"results":"22","hashOfConfig":"18"},{"size":3935,"mtime":1609366226768,"results":"23","hashOfConfig":"18"},{"size":132,"mtime":1609387795870,"results":"24","hashOfConfig":"18"},{"size":508,"mtime":1609459920475,"results":"25","hashOfConfig":"18"},{"size":321,"mtime":1609536189876,"results":"26","hashOfConfig":"18"},{"size":292,"mtime":1609365186864,"results":"27","hashOfConfig":"18"},{"size":251,"mtime":1609365055429,"results":"28","hashOfConfig":"18"},{"size":1151,"mtime":1609372513809,"results":"29","hashOfConfig":"18"},{"size":2198,"mtime":1609536157803,"results":"30","hashOfConfig":"18"},{"size":426,"mtime":1609365083485,"results":"31","hashOfConfig":"18"},{"size":347,"mtime":1609387795872,"results":"32","hashOfConfig":"18"},{"size":3398,"mtime":1609536085409,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1xnegec",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/index.js",[],["70","71"],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/App.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Signup.js",["72","73"],"import React, { useState, useRef, useEffect } from 'react'\nimport Form from 'react-validation/build/form'\nimport Input from 'react-validation/build/input'\nimport CheckButton from 'react-validation/build/button'\nimport { isEmail } from \"validator\"\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\n\n//Components\nimport FormGroup from \"./common/FormGroup\"\n\n//Helper\nimport { register } from '../services/auth.service'\nimport { resMessage } from '../utilities/functions.utilities'\n\nconst axios = require('axios')\nconst GOOGLE_API_KEY = 'AIzaSyDbjklIejS9yn5KhRaEWen72vYpBu_0BZo'\n\n//Function given to react-validator\nconst required = (value) => {\n    if(!value){\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        )\n    }\n}\n\n//Function that validates username\nconst vusername = (value) => {\n    if(value.length < 3 || value.length >= 20) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                Your username must be between 3 and 20 characters\n            </div>\n        )\n    }\n}\n\n//Function that validates passwords\nconst vpassword = (value) => {\n    if(value.length < 6 || value.length >= 40) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                Your password must be between 6 and 40 characters\n            </div>\n        )\n    }\n}\n\nconst validEmail = (value) => {\n    if(!isEmail) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                Submitted e-mail not valid\n            </div>\n        )\n    }\n}\n\nconst Register = (props) => {\n    const form = useRef()\n    const checkBtn = useRef()\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [email, setEmail] = useState('')\n    const [message, setMessage] = useState('')\n    const [successful, setSuccessful] = useState(false)\n    const [country, setCountry] = useState('')\n    const [region, setRegion] = useState('')\n    const [city, setCity] = useState('')\n    \n    const onChangeUsername = (e) => {\n        const username = e.target.value\n        setUsername(username)\n    }\n\n    const onChangePassword = (e) => {\n        const password = e.target.value\n        setPassword(password)\n    }\n\n    const onChangeEmail = (e) => {\n        const email = e.target.value\n        setEmail(email)\n    }\n\n    const onChangeCountry = (val) => {\n        console.log(val)\n        setCountry(val)\n    }\n\n    const onChangeRegion = (val) => {\n        console.log(val)\n        setRegion(val)\n    }\n\n    const onChangeCity = (e) => {\n        const city = e.target.value\n        console.log(city)\n        setCity(city)\n    }\n\n    const handleSignup = async (e) => {\n        //Prevent reload of pressing the button\n        e.preventDefault()\n        //Prevent message clear them out\n        setMessage(\"\")\n        setSuccessful(false)\n\n        // validtes all the fields in your form\n        form.current.validateAll()\n        \n        // Validator stores errors and we can check if errors exist\n        \n        if(checkBtn.current.context._errors.length === 0) {\n            //Google API request\n            const apiResponse = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${city},${region}&key=${GOOGLE_API_KEY}`)\n            //Parses over API and pulls out \"____ County\", replace removes county for disease API\n            const county = Object.values(apiResponse.data.results[0])[0][1].long_name.replace(/County/g, '')\n            register(username, email, password, country, region, city, county).then(\n                (response) => {\n                    setMessage(response.data.message)\n                    setSuccessful(true)\n                    console.log(\"COUNTY AFTER REGISTER\", county)\n                },\n                (error) => {\n                    setMessage(resMessage(error))\n                    setSuccessful(false)\n                }\n            )\n\n        } else {\n            successful(false)\n        }\n\n\n    }\n\n\n    return(\n        <div>\n            <div className=\"container\">\n                <img\n                    src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n                    alt=\"profile-img\"\n                    className=\"profile-img-card\"\n                />\n                <Form onSubmit={handleSignup} ref={form}>\n\n                    <FormGroup text=\"username\">\n                        <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"username\"\n                            value={username}\n                            onChange={onChangeUsername}\n                            validations={[required, vusername]}\n                        />\n                    </FormGroup>\n\n                    <FormGroup text=\"email\">\n                        <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"email\"\n                            value={email}\n                            onChange={onChangeEmail}\n                            validations={[required, validEmail]}\n                        />\n                    </FormGroup>\n\n                    <FormGroup text=\"password\">\n                        <Input\n                            type=\"password\"\n                            className=\"form-control\"\n                            name=\"password\"\n                            value={password}\n                            onChange={onChangePassword}\n                            validations={[required, vpassword]}\n                        />\n                    </FormGroup>\n\n                    <CountryDropdown\n                        value={country}\n                        onChange={(val) => onChangeCountry(val)} />\n                    <RegionDropdown\n                        country={country}\n                        value={region}\n                        onChange={(val) => onChangeRegion(val)} />\n\n                    <FormGroup text=\"city\">\n                        <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"city\"\n                            value={city}\n                            onChange={onChangeCity}\n                            validations={[required]}\n                        />\n                    </FormGroup>\n\n                    <div className=\"form-group\">\n                        <button className=\"btn\" >\n                            <span>Sign Up</span>\n                        </button>   \n                    </div>\n\n                    {message && (\n                        <div className=\"form-group\">\n                            <div className={successful ? \"alert alert-success\" : \"alert alert-danger\"} role=\"alert\">\n                                {message}\n                            </div>\n                        </div>\n                    )}\n\n                    <CheckButton style={{display: \"none\"}} ref={checkBtn}/>\n                </Form>\n            </div>\n        </div>\n    )\n}\n\nexport default Register","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Home.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/common/Layout.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Login.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/About.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Admin.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Dashboard.js",["74","75"],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/common/FormGroup.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/utilities/functions.utilities.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/services/auth.service.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/services/user.service.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/utilities/localStorage.utilities.js",[],["76","77"],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/utilities/authHeader.utilities.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Statistics.js",["78","79"],"import React, { useState, useEffect } from 'react'\nimport { getPrimaryLocation } from '../services/user.service'\nimport { getCurrentUser } from '../services/auth.service'\n\nconst axios = require('axios')\n\n\nconst Statistics = () => {\n    const [primaryLocation, setPrimaryLocation] = useState({})\n    //Location states\n    const [country, setCountry] = useState('')\n    const [county, setCounty] = useState('')\n    const [region, setRegion] = useState('')\n    //API Stats states\n    const [confirmedCases, setConfirmedCases] = useState('')\n    const [deaths, setDeaths] = useState('')\n    const [recovered, setRecovered] = useState('')\n    const [updatedAt, setUpdatedAt] = useState('')\n    const [historicalDates, setHistoricalDates] = useState([])\n    const [historicalCases, setHistoricalCases] = useState([])\n    const [historicalDeaths, setHistoricalDeaths] = useState([])\n\n\n    useEffect(()=>{\n        getPrimaryLocation()\n        .then(response => {\n            setPrimaryLocation(response)\n        })\n    }, [])\n\n    useEffect(()=> {\n        if(primaryLocation.county !== undefined) {\n            axios.get(`https://disease.sh/v3/covid-19/jhucsse/counties/${primaryLocation.county}`)\n            .then(response => {\n                response.data.forEach(data=> {\n                //Change state abbreviation to state name\n                // const stateName = abbrState(state, 'name')\n                if(primaryLocation.state === data.province)\n                    setCountry(data.country)\n                    setCounty(data.county)\n                    setRegion(data.province)\n                    setConfirmedCases(data.stats.confirmed)\n                    setDeaths(data.stats.deaths)\n                    setRecovered(data.stats.recovered)\n                    setUpdatedAt(data.updatedAt)\n                })\n            })\n        }\n    }, [primaryLocation])\n\n    //https://disease.sh/v3/covid-19/historical/usacounties/texas?lastdays=30\n\n    useEffect(() => {\n        if(region !== undefined) {\n            axios.get(`https://disease.sh/v3/covid-19/historical/usacounties/${region.toLowerCase()}?lastdays=30`)\n            .then(response => {\n                response.data.forEach(data => {\n                    if (data.county !== undefined && data.county === county.toLowerCase()) {\n                        setHistoricalDates(Object.keys(data.timeline.cases))\n                        setHistoricalCases(Object.values(data.timeline.cases))\n                        setHistoricalDeaths(Object.values(data.timeline.deaths))\n                    }\n                })\n            })\n        }\n    }, [region])\n\n\n    // const getStatistics = async () => {\n    //     await getPrimaryLocation()\n    //     .then(response => {\n    //         setPrimaryLocation(response)\n    //     })\n    // }\n\n    return(\n        <div>\n            Statistics\n            <p>Country: {country}</p>\n            <p>County: {county}</p>\n            <p>State: {region}</p>\n            <p>Confirmed Cases: {confirmedCases}</p>\n            <p>Deaths: {deaths}</p>\n            <p>Recovered: {recovered}</p>\n            <p>Last Updated: {updatedAt}</p>\n            <ol>\n            {historicalCases.map((cases, index) => (\n                <li key={index}> Date: {historicalDates[index]} Cases: {cases} Deaths: {historicalDeaths[index]}</li>\n            ))}\n            </ol>\n        </div>\n    )\n\n}\n\nexport default Statistics",{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":1,"column":35,"nodeType":"86","messageId":"87","endLine":1,"endColumn":44},{"ruleId":"84","severity":1,"message":"88","line":6,"column":43,"nodeType":"86","messageId":"87","endLine":6,"endColumn":60},{"ruleId":"84","severity":1,"message":"89","line":2,"column":10,"nodeType":"86","messageId":"87","endLine":2,"endColumn":21},{"ruleId":"84","severity":1,"message":"90","line":6,"column":11,"nodeType":"86","messageId":"87","endLine":6,"endColumn":20},{"ruleId":"80","replacedBy":"91"},{"ruleId":"82","replacedBy":"92"},{"ruleId":"84","severity":1,"message":"93","line":3,"column":10,"nodeType":"86","messageId":"87","endLine":3,"endColumn":24},{"ruleId":"94","severity":1,"message":"95","line":66,"column":8,"nodeType":"96","endLine":66,"endColumn":16,"suggestions":"97"},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'CountryRegionData' is defined but never used.","'getAllUsers' is defined but never used.","'favorites' is assigned a value but never used.",["98"],["99"],"'getCurrentUser' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'county'. Either include it or remove the dependency array.","ArrayExpression",["100"],"no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},"Update the dependencies array to be: [county, region]",{"range":"103","text":"104"},[2600,2608],"[county, region]"]