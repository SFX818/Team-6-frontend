
[{"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/index.js":"1","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/App.js":"2","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Home.js":"3","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/About.js":"4","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Signup.js":"5","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Login.js":"6","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Profile.js":"7","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Dashboard.js":"8","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/UserDetail.js":"9","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Admin.js":"10","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/common/Layout.js":"11","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/common/FormGroup.js":"12","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Statistics.js":"13","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/services/auth.service.js":"14","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/utilities/functions.utilities.js":"15","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/services/user.service.js":"16","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/utilities/localStorage.utilities.js":"17","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/utilities/authHeader.utilities.js":"18","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/DeathsGraph.js":"19","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/CasesGraph.js":"20"},{"size":301,"mtime":1609293814000,"results":"21","hashOfConfig":"22"},{"size":1199,"mtime":1609615204807,"results":"23","hashOfConfig":"22"},{"size":95,"mtime":1609293233266,"results":"24","hashOfConfig":"22"},{"size":132,"mtime":1609536329665,"results":"25","hashOfConfig":"22"},{"size":7231,"mtime":1609536329666,"results":"26","hashOfConfig":"22"},{"size":3935,"mtime":1609366226768,"results":"27","hashOfConfig":"22"},{"size":1031,"mtime":1609615204809,"results":"28","hashOfConfig":"22"},{"size":2006,"mtime":1609615204808,"results":"29","hashOfConfig":"22"},{"size":1502,"mtime":1609615204809,"results":"30","hashOfConfig":"22"},{"size":2200,"mtime":1609615204808,"results":"31","hashOfConfig":"22"},{"size":1256,"mtime":1609615204809,"results":"32","hashOfConfig":"22"},{"size":292,"mtime":1609365186864,"results":"33","hashOfConfig":"22"},{"size":3416,"mtime":1609615449932,"results":"34","hashOfConfig":"22"},{"size":1151,"mtime":1609372513809,"results":"35","hashOfConfig":"22"},{"size":251,"mtime":1609365055429,"results":"36","hashOfConfig":"22"},{"size":2249,"mtime":1609615204810,"results":"37","hashOfConfig":"22"},{"size":426,"mtime":1609365083485,"results":"38","hashOfConfig":"22"},{"size":347,"mtime":1609536329668,"results":"39","hashOfConfig":"22"},{"size":698,"mtime":1609543415141,"results":"40","hashOfConfig":"22"},{"size":701,"mtime":1609542000186,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1xnegec",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/index.js",[],["88","89"],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/App.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Home.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/About.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Signup.js",["90","91"],"import React, { useState, useRef, useEffect } from 'react'\nimport Form from 'react-validation/build/form'\nimport Input from 'react-validation/build/input'\nimport CheckButton from 'react-validation/build/button'\nimport { isEmail } from \"validator\"\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\n\n//Components\nimport FormGroup from \"./common/FormGroup\"\n\n//Helper\nimport { register } from '../services/auth.service'\nimport { resMessage } from '../utilities/functions.utilities'\n\nconst axios = require('axios')\nconst GOOGLE_API_KEY = 'AIzaSyDbjklIejS9yn5KhRaEWen72vYpBu_0BZo'\n\n//Function given to react-validator\nconst required = (value) => {\n    if(!value){\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        )\n    }\n}\n\n//Function that validates username\nconst vusername = (value) => {\n    if(value.length < 3 || value.length >= 20) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                Your username must be between 3 and 20 characters\n            </div>\n        )\n    }\n}\n\n//Function that validates passwords\nconst vpassword = (value) => {\n    if(value.length < 6 || value.length >= 40) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                Your password must be between 6 and 40 characters\n            </div>\n        )\n    }\n}\n\nconst validEmail = (value) => {\n    if(!isEmail) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                Submitted e-mail not valid\n            </div>\n        )\n    }\n}\n\nconst Register = (props) => {\n    const form = useRef()\n    const checkBtn = useRef()\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [email, setEmail] = useState('')\n    const [message, setMessage] = useState('')\n    const [successful, setSuccessful] = useState(false)\n    const [country, setCountry] = useState('')\n    const [region, setRegion] = useState('')\n    const [city, setCity] = useState('')\n    \n    const onChangeUsername = (e) => {\n        const username = e.target.value\n        setUsername(username)\n    }\n\n    const onChangePassword = (e) => {\n        const password = e.target.value\n        setPassword(password)\n    }\n\n    const onChangeEmail = (e) => {\n        const email = e.target.value\n        setEmail(email)\n    }\n\n    const onChangeCountry = (val) => {\n        console.log(val)\n        setCountry(val)\n    }\n\n    const onChangeRegion = (val) => {\n        console.log(val)\n        setRegion(val)\n    }\n\n    const onChangeCity = (e) => {\n        const city = e.target.value\n        console.log(city)\n        setCity(city)\n    }\n\n    const handleSignup = async (e) => {\n        //Prevent reload of pressing the button\n        e.preventDefault()\n        //Prevent message clear them out\n        setMessage(\"\")\n        setSuccessful(false)\n\n        // validtes all the fields in your form\n        form.current.validateAll()\n        \n        // Validator stores errors and we can check if errors exist\n        \n        if(checkBtn.current.context._errors.length === 0) {\n            //Google API request\n            const apiResponse = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${city},${region}&key=${GOOGLE_API_KEY}`)\n            //Parses over API and pulls out \"____ County\", replace removes county for disease API\n            const county = Object.values(apiResponse.data.results[0])[0][1].long_name.replace(/County/g, '')\n            register(username, email, password, country, region, city, county).then(\n                (response) => {\n                    setMessage(response.data.message)\n                    setSuccessful(true)\n                    console.log(\"COUNTY AFTER REGISTER\", county)\n                },\n                (error) => {\n                    setMessage(resMessage(error))\n                    setSuccessful(false)\n                }\n            )\n\n        } else {\n            successful(false)\n        }\n\n\n    }\n\n\n    return(\n        <div>\n            <div className=\"container\">\n                <img\n                    src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n                    alt=\"profile-img\"\n                    className=\"profile-img-card\"\n                />\n                <Form onSubmit={handleSignup} ref={form}>\n\n                    <FormGroup text=\"username\">\n                        <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"username\"\n                            value={username}\n                            onChange={onChangeUsername}\n                            validations={[required, vusername]}\n                        />\n                    </FormGroup>\n\n                    <FormGroup text=\"email\">\n                        <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"email\"\n                            value={email}\n                            onChange={onChangeEmail}\n                            validations={[required, validEmail]}\n                        />\n                    </FormGroup>\n\n                    <FormGroup text=\"password\">\n                        <Input\n                            type=\"password\"\n                            className=\"form-control\"\n                            name=\"password\"\n                            value={password}\n                            onChange={onChangePassword}\n                            validations={[required, vpassword]}\n                        />\n                    </FormGroup>\n\n                    <CountryDropdown\n                        value={country}\n                        onChange={(val) => onChangeCountry(val)} />\n                    <RegionDropdown\n                        country={country}\n                        value={region}\n                        onChange={(val) => onChangeRegion(val)} />\n\n                    <FormGroup text=\"city\">\n                        <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"city\"\n                            value={city}\n                            onChange={onChangeCity}\n                            validations={[required]}\n                        />\n                    </FormGroup>\n\n                    <div className=\"form-group\">\n                        <button className=\"btn\" >\n                            <span>Sign Up</span>\n                        </button>   \n                    </div>\n\n                    {message && (\n                        <div className=\"form-group\">\n                            <div className={successful ? \"alert alert-success\" : \"alert alert-danger\"} role=\"alert\">\n                                {message}\n                            </div>\n                        </div>\n                    )}\n\n                    <CheckButton style={{display: \"none\"}} ref={checkBtn}/>\n                </Form>\n            </div>\n        </div>\n    )\n}\n\nexport default Register","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Login.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Profile.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Dashboard.js",["92"],"import React, {useState, useEffect} from 'react'\nimport { getFavorites, getHistory } from '../services/user.service'\nimport { getCurrentUser } from '../services/auth.service'\nimport Statistics from './Statistics'\n      \nconst Dashboard = () => {\n    const [currentUser, setCurrentUser] = useState(undefined)\n    const [userDashboard, setUserDashboard] = useState(undefined)\n    const [searchHistory, setSearchHistory] = useState(undefined)\n\n    useEffect(()=> {\n        const user = getCurrentUser()\n        if(user) {\n          setCurrentUser(user)\n          getFavorites().then(favorites => setUserDashboard(favorites))\n          getHistory().then(history => setSearchHistory(history))\n        }\n      }, [])\n\n    return(\n        <>\n        {userDashboard ? (\n        <div>\n            Dashboard\n            {/* {console.log(userDashboard)} */}\n            {userDashboard.length > 0 ? (\n                <div>\n                <h2>My Locations</h2>\n                <ul>\n                    {userDashboard.map(favorite=> (\n                        <li key={favorite._id}>{favorite.city}, {favorite.state}, {favorite.country}</li>\n                    ))}\n                </ul>\n                </div>\n            ) : (\n                <div>No Favorites to Display!</div>\n            )}\n        </div>\n        ) : (\n            <div>Loading...</div>\n        )}\n        {searchHistory ? (\n        <div>\n            Search History\n            {console.log(searchHistory)}\n            {searchHistory.length > 0 ? (\n                <div>\n                <ul>\n                    {searchHistory.map(history=> (\n                        <li key={history._id}>{history.city}, {history.state}, {history.country}</li>\n                    ))}\n                </ul>\n                </div>\n            ) : (\n                <div>No Search History to Display!</div>\n            )}\n        </div>\n        ) : (\n            <div>Loading...</div>\n        )}\n        <Statistics />\n\n        </>\n\n    )\n}\n\nexport default Dashboard","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/UserDetail.js",["93"],"import React, {useState, useEffect} from 'react'\nimport { useParams } from 'react-router-dom'\nimport { getOneUser } from '../services/user.service'\n\nconst UserDetail = () => {\n    const [user, setUser] = useState('')\n    let { id } = useParams()\n\n    useEffect(() => {\n        getOneUser(id).then(response => {\n            setUser(response.data)\n            },\n            (error) => {\n                const _error =\n                    (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                    error.message ||\n                    error.toString();\n                setUser(_error);\n              }\n        )\n    },[])\n    return(\n        <>\n            {user ? (\n                <div>\n                    <h1>{user.username}</h1>\n                    <p>{user.email}</p>\n                    {user.primaryLocation && \n                    <p>\n                        {user.primaryLocation.city},{' '}\n                        {user.primaryLocation.state},{' '} \n                        {user.primaryLocation.county}{' '}-{' '}\n                        {user.primaryLocation.country}\n                    </p>}\n                    {user.roles && \n                        user.roles.map(role => <p key={role._id}>{role.name}</p>)\n                    }\n                    {console.log(user)}\n                </div>\n            ) : (\n                <div>Loading...</div>\n            )}\n        </>\n    )\n\n}\n\nexport default UserDetail","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Admin.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/common/Layout.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/common/FormGroup.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/Statistics.js",["94","95"],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/services/auth.service.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/utilities/functions.utilities.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/services/user.service.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/utilities/localStorage.utilities.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/utilities/authHeader.utilities.js",[],"/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/DeathsGraph.js",["96","97"],"import React, { useState, useEffect } from 'react'\nimport { Line } from \"react-chartjs-2\";\n\n\n\nconst CasesGraph = ({dates, deaths}) => {\n    const data = {\n        labels: dates,\n        datasets: [\n          {\n            label: \"Confirmed Deaths\",\n            data: deaths,\n            fill: true,\n            backgroundColor: \"rgba(255,0,0,0.2)\",\n            borderColor: \"rgba(255,0,0,1)\"\n          }\n        ]\n      };\n    \n    const options = {\n        title: {\n            display: true,\n            text: \"Confirmed Cases\"\n          }\n    }\n\n    return(\n        <div className=\"cases-graph\">\n            <Line data={data} options={options}/>\n        </div>\n    )\n}\n\nexport default CasesGraph","/Users/cameronmoreno/Desktop/GA/projects/Binary-Beasts-Project/team-6-frontend/src/components/CasesGraph.js",["98","99"],"import React, { useState, useEffect } from 'react'\nimport { Line } from \"react-chartjs-2\";\n\n\n\nconst CasesGraph = ({dates, cases}) => {\n    const data = {\n        labels: dates,\n        datasets: [\n          {\n            label: \"Confirmed Cases\",\n            data: cases,\n            fill: true,\n            backgroundColor: \"rgba(75,192,192,0.2)\",\n            borderColor: \"rgba(75,192,192,1)\"\n          }\n        ]\n      };\n    \n    const options = {\n        title: {\n            display: true,\n            text: \"Confirmed Cases\"\n          }\n    }\n\n    return(\n        <div className=\"cases-graph\">\n            <Line data={data} options={options}/>\n        </div>\n    )\n}\n\nexport default CasesGraph",{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":1,"column":35,"nodeType":"106","messageId":"107","endLine":1,"endColumn":44},{"ruleId":"104","severity":1,"message":"108","line":6,"column":43,"nodeType":"106","messageId":"107","endLine":6,"endColumn":60},{"ruleId":"104","severity":1,"message":"109","line":7,"column":12,"nodeType":"106","messageId":"107","endLine":7,"endColumn":23},{"ruleId":"110","severity":1,"message":"111","line":23,"column":7,"nodeType":"112","endLine":23,"endColumn":9,"suggestions":"113"},{"ruleId":"104","severity":1,"message":"114","line":3,"column":10,"nodeType":"106","messageId":"107","endLine":3,"endColumn":24},{"ruleId":"110","severity":1,"message":"115","line":68,"column":8,"nodeType":"112","endLine":68,"endColumn":16,"suggestions":"116"},{"ruleId":"104","severity":1,"message":"117","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":25},{"ruleId":"104","severity":1,"message":"105","line":1,"column":27,"nodeType":"106","messageId":"107","endLine":1,"endColumn":36},{"ruleId":"104","severity":1,"message":"117","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":25},{"ruleId":"104","severity":1,"message":"105","line":1,"column":27,"nodeType":"106","messageId":"107","endLine":1,"endColumn":36},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'CountryRegionData' is defined but never used.","'currentUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["120"],"'getCurrentUser' is defined but never used.","React Hook useEffect has a missing dependency: 'county'. Either include it or remove the dependency array.",["121"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},"Update the dependencies array to be: [id]",{"range":"126","text":"127"},"Update the dependencies array to be: [county, region]",{"range":"128","text":"129"},[691,693],"[id]",[2678,2686],"[county, region]"]

[{"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\index.js":"1","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\App.js":"2","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\About.js":"3","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Signup.js":"4","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Login.js":"5","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\UserDetail.js":"6","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Dashboard.js":"7","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Profile.js":"8","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Admin.js":"9","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\common\\Layout.js":"10","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Search.js":"11","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Home.js":"12","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\common\\FormGroup.js":"13","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Statistics.js":"14","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\services\\auth.service.js":"15","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\services\\user.service.js":"16","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\utilities\\functions.utilities.js":"17","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\SearchForm.js":"18","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\utilities\\localStorage.utilities.js":"19","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\utilities\\authHeader.utilities.js":"20"},{"size":319,"mtime":1609564476260,"results":"21","hashOfConfig":"22"},{"size":1410,"mtime":1609564476256,"results":"23","hashOfConfig":"22"},{"size":140,"mtime":1609402605774,"results":"24","hashOfConfig":"22"},{"size":7455,"mtime":1609448655656,"results":"25","hashOfConfig":"22"},{"size":4063,"mtime":1609376227972,"results":"26","hashOfConfig":"22"},{"size":1704,"mtime":1609564553842,"results":"27","hashOfConfig":"22"},{"size":5150,"mtime":1609564553841,"results":"28","hashOfConfig":"22"},{"size":1067,"mtime":1609402605776,"results":"29","hashOfConfig":"22"},{"size":2259,"mtime":1609488479423,"results":"30","hashOfConfig":"22"},{"size":1382,"mtime":1609543437996,"results":"31","hashOfConfig":"22"},{"size":2515,"mtime":1609564476257,"results":"32","hashOfConfig":"22"},{"size":262,"mtime":1609564476257,"results":"33","hashOfConfig":"22"},{"size":303,"mtime":1609376227973,"results":"34","hashOfConfig":"22"},{"size":3493,"mtime":1609543477869,"results":"35","hashOfConfig":"22"},{"size":1194,"mtime":1609376227974,"results":"36","hashOfConfig":"22"},{"size":2580,"mtime":1609564553844,"results":"37","hashOfConfig":"22"},{"size":259,"mtime":1609376227974,"results":"38","hashOfConfig":"22"},{"size":1551,"mtime":1609564476258,"results":"39","hashOfConfig":"22"},{"size":442,"mtime":1609376227975,"results":"40","hashOfConfig":"22"},{"size":359,"mtime":1609402605778,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"10jbua5",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\index.js",[],["87","88"],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\App.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\About.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Signup.js",["89","90"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport Form from 'react-validation/build/form'\r\nimport Input from 'react-validation/build/input'\r\nimport CheckButton from 'react-validation/build/button'\r\nimport { isEmail } from \"validator\"\r\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\r\n\r\n//Components\r\nimport FormGroup from \"./common/FormGroup\"\r\n\r\n//Helper\r\nimport { register } from '../services/auth.service'\r\nimport { resMessage } from '../utilities/functions.utilities'\r\n\r\nconst axios = require('axios')\r\nconst GOOGLE_API_KEY = 'AIzaSyDbjklIejS9yn5KhRaEWen72vYpBu_0BZo'\r\n\r\n//Function given to react-validator\r\nconst required = (value) => {\r\n    if(!value){\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//Function that validates username\r\nconst vusername = (value) => {\r\n    if(value.length < 3 || value.length >= 20) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Your username must be between 3 and 20 characters\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//Function that validates passwords\r\nconst vpassword = (value) => {\r\n    if(value.length < 6 || value.length >= 40) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Your password must be between 6 and 40 characters\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst validEmail = (value) => {\r\n    if(!isEmail) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Submitted e-mail not valid\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst Register = (props) => {\r\n    const form = useRef()\r\n    const checkBtn = useRef()\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const [successful, setSuccessful] = useState(false)\r\n    const [country, setCountry] = useState('')\r\n    const [region, setRegion] = useState('')\r\n    const [city, setCity] = useState('')\r\n    \r\n    const onChangeUsername = (e) => {\r\n        const username = e.target.value\r\n        setUsername(username)\r\n    }\r\n\r\n    const onChangePassword = (e) => {\r\n        const password = e.target.value\r\n        setPassword(password)\r\n    }\r\n\r\n    const onChangeEmail = (e) => {\r\n        const email = e.target.value\r\n        setEmail(email)\r\n    }\r\n\r\n    const onChangeCountry = (val) => {\r\n        console.log(val)\r\n        setCountry(val)\r\n    }\r\n\r\n    const onChangeRegion = (val) => {\r\n        console.log(val)\r\n        setRegion(val)\r\n    }\r\n\r\n    const onChangeCity = (e) => {\r\n        const city = e.target.value\r\n        console.log(city)\r\n        setCity(city)\r\n    }\r\n\r\n    const handleSignup = async (e) => {\r\n        //Prevent reload of pressing the button\r\n        e.preventDefault()\r\n        //Prevent message clear them out\r\n        setMessage(\"\")\r\n        setSuccessful(false)\r\n\r\n        // validtes all the fields in your form\r\n        form.current.validateAll()\r\n        \r\n        // Validator stores errors and we can check if errors exist\r\n        \r\n        if(checkBtn.current.context._errors.length === 0) {\r\n            //Google API request\r\n            const apiResponse = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${city},${region}&key=${GOOGLE_API_KEY}`)\r\n            //Parses over API and pulls out \"____ County\", replace removes county for disease API\r\n            const county = Object.values(apiResponse.data.results[0])[0][1].long_name.replace(/County/g, '')\r\n            register(username, email, password, country, region, city, county).then(\r\n                (response) => {\r\n                    setMessage(response.data.message)\r\n                    setSuccessful(true)\r\n                    console.log(\"COUNTY AFTER REGISTER\", county)\r\n                },\r\n                (error) => {\r\n                    setMessage(resMessage(error))\r\n                    setSuccessful(false)\r\n                }\r\n            )\r\n\r\n        } else {\r\n            successful(false)\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"container\">\r\n                <img\r\n                    src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n                    alt=\"profile-img\"\r\n                    className=\"profile-img-card\"\r\n                />\r\n                <Form onSubmit={handleSignup} ref={form}>\r\n\r\n                    <FormGroup text=\"username\">\r\n                        <Input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"username\"\r\n                            value={username}\r\n                            onChange={onChangeUsername}\r\n                            validations={[required, vusername]}\r\n                        />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup text=\"email\">\r\n                        <Input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"email\"\r\n                            value={email}\r\n                            onChange={onChangeEmail}\r\n                            validations={[required, validEmail]}\r\n                        />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup text=\"password\">\r\n                        <Input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            name=\"password\"\r\n                            value={password}\r\n                            onChange={onChangePassword}\r\n                            validations={[required, vpassword]}\r\n                        />\r\n                    </FormGroup>\r\n\r\n                    <CountryDropdown\r\n                        value={country}\r\n                        onChange={(val) => onChangeCountry(val)} />\r\n                    <RegionDropdown\r\n                        country={country}\r\n                        value={region}\r\n                        onChange={(val) => onChangeRegion(val)} />\r\n\r\n                    <FormGroup text=\"city\">\r\n                        <Input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"city\"\r\n                            value={city}\r\n                            onChange={onChangeCity}\r\n                            validations={[required]}\r\n                        />\r\n                    </FormGroup>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button className=\"btn\" >\r\n                            <span>Sign Up</span>\r\n                        </button>   \r\n                    </div>\r\n\r\n                    {message && (\r\n                        <div className=\"form-group\">\r\n                            <div className={successful ? \"alert alert-success\" : \"alert alert-danger\"} role=\"alert\">\r\n                                {message}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    <CheckButton style={{display: \"none\"}} ref={checkBtn}/>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Login.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\UserDetail.js",["91","92"],"import React, {useState, useEffect, useRef} from 'react'\r\n// import Form from 'react-validation/build/form'\r\n// import Input from 'react-validation/build/input'\r\nimport { useParams } from 'react-router-dom'\r\nimport { getOneUser } from '../services/user.service'\r\n\r\nconst UserDetail = () => {\r\n    const form = useRef()\r\n    const [user, setUser] = useState('')\r\n    let { id } = useParams()\r\n\r\n    useEffect(() => {\r\n        getOneUser(id).then(response => {\r\n            setUser(response.data)\r\n            },\r\n            (error) => {\r\n                const _error =\r\n                    (error.response &&\r\n                    error.response.data &&\r\n                    error.response.data.message) ||\r\n                    error.message ||\r\n                    error.toString();\r\n                setUser(_error);\r\n              }\r\n        )\r\n    },[])\r\n    \r\n    return(\r\n        <>\r\n            {user ? (\r\n                <div>\r\n                    <h1>{user.username}</h1>\r\n                    <p>{user.email}</p>\r\n                    {user.primaryLocation && \r\n                    <p>\r\n                        {user.primaryLocation.city},{' '}\r\n                        {user.primaryLocation.state},{' '} \r\n                        {user.primaryLocation.county}{' '}-{' '}\r\n                        {user.primaryLocation.country}\r\n                    </p>}\r\n                    {user.roles && \r\n                        user.roles.map(role => <p key={role._id}>{role.name}</p>)\r\n                    }\r\n                    {/* {console.log(user)} */}\r\n                </div>\r\n            ) : (\r\n                <div>Loading...</div>\r\n            )}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default UserDetail","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Dashboard.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Profile.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Admin.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\common\\Layout.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Search.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Home.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\common\\FormGroup.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Statistics.js",["93","94"],"import React, { useState, useEffect } from 'react'\r\nimport { getPrimaryLocation } from '../services/user.service'\r\nimport { getCurrentUser } from '../services/auth.service'\r\n\r\nconst axios = require('axios')\r\n\r\n\r\nconst Statistics = () => {\r\n    const [primaryLocation, setPrimaryLocation] = useState({})\r\n    //Location states\r\n    const [country, setCountry] = useState('')\r\n    const [county, setCounty] = useState('')\r\n    const [region, setRegion] = useState('')\r\n    //API Stats states\r\n    const [confirmedCases, setConfirmedCases] = useState('')\r\n    const [deaths, setDeaths] = useState('')\r\n    const [recovered, setRecovered] = useState('')\r\n    const [updatedAt, setUpdatedAt] = useState('')\r\n    const [historicalDates, setHistoricalDates] = useState([])\r\n    const [historicalCases, setHistoricalCases] = useState([])\r\n    const [historicalDeaths, setHistoricalDeaths] = useState([])\r\n\r\n\r\n    useEffect(()=>{\r\n        getPrimaryLocation()\r\n        .then(response => {\r\n            setPrimaryLocation(response)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(()=> {\r\n        if(primaryLocation.county !== undefined) {\r\n            axios.get(`https://disease.sh/v3/covid-19/jhucsse/counties/${primaryLocation.county}`)\r\n            .then(response => {\r\n                response.data.forEach(data=> {\r\n                //Change state abbreviation to state name\r\n                // const stateName = abbrState(state, 'name')\r\n                if(primaryLocation.state === data.province)\r\n                    setCountry(data.country)\r\n                    setCounty(data.county)\r\n                    setRegion(data.province)\r\n                    setConfirmedCases(data.stats.confirmed)\r\n                    setDeaths(data.stats.deaths)\r\n                    setRecovered(data.stats.recovered)\r\n                    setUpdatedAt(data.updatedAt)\r\n                })\r\n            })\r\n        }\r\n    }, [primaryLocation])\r\n\r\n    //https://disease.sh/v3/covid-19/historical/usacounties/texas?lastdays=30\r\n\r\n    useEffect(() => {\r\n        if(region !== undefined) {\r\n            axios.get(`https://disease.sh/v3/covid-19/historical/usacounties/${region.toLowerCase()}?lastdays=30`)\r\n            .then(response => {\r\n                response.data.forEach(data => {\r\n                    if (data.county !== undefined && data.county === county.toLowerCase()) {\r\n                        setHistoricalDates(Object.keys(data.timeline.cases))\r\n                        setHistoricalCases(Object.values(data.timeline.cases))\r\n                        setHistoricalDeaths(Object.values(data.timeline.deaths))\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    }, [region])\r\n\r\n\r\n    // const getStatistics = async () => {\r\n    //     await getPrimaryLocation()\r\n    //     .then(response => {\r\n    //         setPrimaryLocation(response)\r\n    //     })\r\n    // }\r\n\r\n    return(\r\n        <div>\r\n            Statistics\r\n            <p>Country: {country}</p>\r\n            <p>County: {county}</p>\r\n            <p>State: {region}</p>\r\n            <p>Confirmed Cases: {confirmedCases}</p>\r\n            <p>Deaths: {deaths}</p>\r\n            <p>Recovered: {recovered}</p>\r\n            <p>Last Updated: {updatedAt}</p>\r\n            <ol>\r\n            {historicalCases.map((cases, index) => (\r\n                <li key={index}> Date: {historicalDates[index]} Cases: {cases} Deaths: {historicalDeaths[index]}</li>\r\n            ))}\r\n            </ol>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Statistics","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\services\\auth.service.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\services\\user.service.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\utilities\\functions.utilities.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\SearchForm.js",["95"],"import React, { useState } from 'react'\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\r\n\r\n// const API_URL_SEARCH = 'http://localhost:8080/search/'\r\n\r\nexport const SearchForm = () => {\r\n\r\n    const [country, setCountry] = useState('')\r\n    const [region, setRegion] = useState('')\r\n    const [city, setCity] = useState('')\r\n\r\n    const onChangeCountry = (val) => {\r\n        console.log(val)\r\n        setCountry(val)\r\n    }\r\n\r\n    const onChangeRegion = (val) => {\r\n        console.log(val)\r\n        setRegion(val)\r\n    }\r\n\r\n    const onChangeCity = (e) => {\r\n        const city = e.target.value\r\n        console.log(city)\r\n        setCity(city)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <CountryDropdown\r\n                value={country}\r\n                onChange={(val) => onChangeCountry(val)} />\r\n            <RegionDropdown\r\n                country={country}\r\n                value={region}\r\n                onChange={(val) => onChangeRegion(val)} />\r\n            <form text=\"city\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"city\"\r\n                    value={city}\r\n                    onChange={onChangeCity}\r\n                    \r\n                />\r\n            </form>\r\n            <Button color=\"primary\" type=\"submit\" name=\"action\">\r\n                search\r\n            </Button>\r\n    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchForm","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\utilities\\localStorage.utilities.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\utilities\\authHeader.utilities.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":1,"column":35,"nodeType":"102","messageId":"103","endLine":1,"endColumn":44},{"ruleId":"100","severity":1,"message":"104","line":6,"column":43,"nodeType":"102","messageId":"103","endLine":6,"endColumn":60},{"ruleId":"100","severity":1,"message":"105","line":8,"column":11,"nodeType":"102","messageId":"103","endLine":8,"endColumn":15},{"ruleId":"106","severity":1,"message":"107","line":26,"column":7,"nodeType":"108","endLine":26,"endColumn":9,"suggestions":"109"},{"ruleId":"100","severity":1,"message":"110","line":3,"column":10,"nodeType":"102","messageId":"103","endLine":3,"endColumn":24},{"ruleId":"106","severity":1,"message":"111","line":66,"column":8,"nodeType":"108","endLine":66,"endColumn":16,"suggestions":"112"},{"ruleId":"100","severity":1,"message":"104","line":4,"column":43,"nodeType":"102","messageId":"103","endLine":4,"endColumn":60},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'CountryRegionData' is defined but never used.","'form' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["115"],"'getCurrentUser' is defined but never used.","React Hook useEffect has a missing dependency: 'county'. Either include it or remove the dependency array.",["116"],"no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},"Update the dependencies array to be: [id]",{"range":"121","text":"122"},"Update the dependencies array to be: [county, region]",{"range":"123","text":"124"},[852,854],"[id]",[2665,2673],"[county, region]"]

