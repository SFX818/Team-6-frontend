[{"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\index.js":"1","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\App.js":"2","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\About.js":"3","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Home.js":"4","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Search.js":"5","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Login.js":"6","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\UserDetail.js":"7","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Signup.js":"8","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Admin.js":"9","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Dashboard.js":"10","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Profile.js":"11","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\common\\Layout.js":"12","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\SearchForm.js":"13","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\common\\FormGroup.js":"14","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Statistics.js":"15","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\services\\auth.service.js":"16","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\services\\user.service.js":"17","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\utilities\\functions.utilities.js":"18","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\utilities\\localStorage.utilities.js":"19","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\utilities\\authHeader.utilities.js":"20","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\DeathsGraph.js":"21","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\CasesGraph.js":"22"},{"size":319,"mtime":1609601794023,"results":"23","hashOfConfig":"24"},{"size":1410,"mtime":1609601794020,"results":"25","hashOfConfig":"24"},{"size":140,"mtime":1609402605774,"results":"26","hashOfConfig":"24"},{"size":262,"mtime":1609601794020,"results":"27","hashOfConfig":"24"},{"size":2515,"mtime":1609601794021,"results":"28","hashOfConfig":"24"},{"size":4063,"mtime":1609376227972,"results":"29","hashOfConfig":"24"},{"size":4729,"mtime":1609623961344,"results":"30","hashOfConfig":"24"},{"size":7455,"mtime":1609448655656,"results":"31","hashOfConfig":"24"},{"size":2267,"mtime":1609623961342,"results":"32","hashOfConfig":"24"},{"size":5150,"mtime":1609564553841,"results":"33","hashOfConfig":"24"},{"size":1067,"mtime":1609402605776,"results":"34","hashOfConfig":"24"},{"size":1382,"mtime":1609543437996,"results":"35","hashOfConfig":"24"},{"size":1551,"mtime":1609601794021,"results":"36","hashOfConfig":"24"},{"size":303,"mtime":1609376227973,"results":"37","hashOfConfig":"24"},{"size":3446,"mtime":1609623961343,"results":"38","hashOfConfig":"24"},{"size":1194,"mtime":1609376227974,"results":"39","hashOfConfig":"24"},{"size":2820,"mtime":1609623961344,"results":"40","hashOfConfig":"24"},{"size":259,"mtime":1609376227974,"results":"41","hashOfConfig":"24"},{"size":442,"mtime":1609376227975,"results":"42","hashOfConfig":"24"},{"size":359,"mtime":1609402605778,"results":"43","hashOfConfig":"24"},{"size":731,"mtime":1609623961343,"results":"44","hashOfConfig":"24"},{"size":734,"mtime":1609623961342,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"10jbua5",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"48"},"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\index.js",[],["98","99"],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\App.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\About.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Home.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Search.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Login.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\UserDetail.js",["100"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport Form from 'react-validation/build/form'\r\nimport Input from 'react-validation/build/input'\r\nimport { useParams } from 'react-router-dom'\r\nimport { getOneUser, getRoles, addUserRoles, removeUserRoles } from '../services/user.service'\r\n\r\nconst UserDetail = () => {\r\n    const form = useRef()\r\n    const [user, setUser] = useState('')\r\n    const [roles, setRoles] = useState('')\r\n    let { id } = useParams()\r\n\r\n    const handleAddRole = (event) => {\r\n        event.preventDefault()\r\n        let roleId = event.target.roleId.value\r\n        let roleName = event.target.roleName.value\r\n        const newRole =\r\n            {\r\n                _id: roleId, \r\n                name: roleName\r\n            }\r\n        // console.log(newRole)\r\n        addUserRoles(id,newRole)\r\n        .then(response => {\r\n            console.log(response.data)\r\n            window.location.reload()\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    const handleRemoveRole = (event) => {\r\n        event.preventDefault()\r\n        let roleId = event.target.roleId.value\r\n        let roleName = event.target.roleName.value\r\n        const newRole =\r\n            {\r\n                _id: roleId, \r\n                name: roleName\r\n            }\r\n        // console.log(newRole)\r\n        removeUserRoles(id,newRole)\r\n        .then(response => {\r\n            console.log(response.data)\r\n            window.location.reload()\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        getOneUser(id).then(response => {\r\n            setUser(response.data)\r\n            },\r\n            (error) => {\r\n                const _error =\r\n                    (error.response &&\r\n                    error.response.data &&\r\n                    error.response.data.message) ||\r\n                    error.message ||\r\n                    error.toString();\r\n                setUser(_error);\r\n              }\r\n        )\r\n        getRoles().then(response => {\r\n            setRoles(response.data)\r\n            },\r\n            (error) => {\r\n                const _error =\r\n                    (error.response &&\r\n                    error.response.data &&\r\n                    error.response.data.message) ||\r\n                    error.message ||\r\n                    error.toString();\r\n                setRoles(_error);\r\n              }\r\n        )\r\n    },[])\r\n    \r\n    return(\r\n        <>\r\n            {user ? (\r\n                <div>\r\n                    <h1>{user.username}</h1>\r\n                    <p>{user.email}</p>\r\n                    {user.primaryLocation && \r\n                    <p>\r\n                        {user.primaryLocation.city},{' '}\r\n                        {user.primaryLocation.state},{' '} \r\n                        {user.primaryLocation.county}{' '}-{' '}\r\n                        {user.primaryLocation.country}\r\n                    </p>}\r\n                    {user.roles && \r\n                        user.roles.map(role => \r\n                        <div key={role._id}>\r\n                            <p>{role.name}</p>\r\n                            <Form onSubmit={handleRemoveRole} ref={form}>\r\n                                <Input type='hidden' value={role._id} name='roleId'/>\r\n                                <Input type='hidden' value={role.name} name='roleName'/>\r\n                                <Input type='submit'  value='Remove Role'/>\r\n                            </Form>\r\n                        </div>)\r\n                    }\r\n                    {/* {console.log(user)} */}\r\n                </div>\r\n            ) : (\r\n                <div>Loading...</div>\r\n            )}\r\n            {roles ? (\r\n                <div>\r\n                    <h4>Add Roles</h4>\r\n                {/* {console.log(roles)} */}\r\n                {roles.length > 0 ? (\r\n                <div>\r\n                    {roles.map(role => (\r\n                        <div key={role._id}>\r\n                            <p>{role.name}</p>\r\n                            <Form onSubmit={handleAddRole} ref={form}>\r\n                                <Input type='hidden' value={role._id} name='roleId'/>\r\n                                <Input type='hidden' value={role.name} name='roleName'/>\r\n                                <Input type='submit'  value='Add Role'/>\r\n                            </Form>\r\n                        </div>\r\n                    )\r\n                    )}\r\n                </div>\r\n                ) : (\r\n                    <div>No roles to display!</div>\r\n                )\r\n            }\r\n                </div>\r\n            ) : (\r\n                <div>Loading...</div>\r\n            )}\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default UserDetail","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Signup.js",["101","102"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport Form from 'react-validation/build/form'\r\nimport Input from 'react-validation/build/input'\r\nimport CheckButton from 'react-validation/build/button'\r\nimport { isEmail } from \"validator\"\r\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\r\n\r\n//Components\r\nimport FormGroup from \"./common/FormGroup\"\r\n\r\n//Helper\r\nimport { register } from '../services/auth.service'\r\nimport { resMessage } from '../utilities/functions.utilities'\r\n\r\nconst axios = require('axios')\r\nconst GOOGLE_API_KEY = 'AIzaSyDbjklIejS9yn5KhRaEWen72vYpBu_0BZo'\r\n\r\n//Function given to react-validator\r\nconst required = (value) => {\r\n    if(!value){\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                This field is required!\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//Function that validates username\r\nconst vusername = (value) => {\r\n    if(value.length < 3 || value.length >= 20) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Your username must be between 3 and 20 characters\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//Function that validates passwords\r\nconst vpassword = (value) => {\r\n    if(value.length < 6 || value.length >= 40) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Your password must be between 6 and 40 characters\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst validEmail = (value) => {\r\n    if(!isEmail) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Submitted e-mail not valid\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst Register = (props) => {\r\n    const form = useRef()\r\n    const checkBtn = useRef()\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const [successful, setSuccessful] = useState(false)\r\n    const [country, setCountry] = useState('')\r\n    const [region, setRegion] = useState('')\r\n    const [city, setCity] = useState('')\r\n    \r\n    const onChangeUsername = (e) => {\r\n        const username = e.target.value\r\n        setUsername(username)\r\n    }\r\n\r\n    const onChangePassword = (e) => {\r\n        const password = e.target.value\r\n        setPassword(password)\r\n    }\r\n\r\n    const onChangeEmail = (e) => {\r\n        const email = e.target.value\r\n        setEmail(email)\r\n    }\r\n\r\n    const onChangeCountry = (val) => {\r\n        console.log(val)\r\n        setCountry(val)\r\n    }\r\n\r\n    const onChangeRegion = (val) => {\r\n        console.log(val)\r\n        setRegion(val)\r\n    }\r\n\r\n    const onChangeCity = (e) => {\r\n        const city = e.target.value\r\n        console.log(city)\r\n        setCity(city)\r\n    }\r\n\r\n    const handleSignup = async (e) => {\r\n        //Prevent reload of pressing the button\r\n        e.preventDefault()\r\n        //Prevent message clear them out\r\n        setMessage(\"\")\r\n        setSuccessful(false)\r\n\r\n        // validtes all the fields in your form\r\n        form.current.validateAll()\r\n        \r\n        // Validator stores errors and we can check if errors exist\r\n        \r\n        if(checkBtn.current.context._errors.length === 0) {\r\n            //Google API request\r\n            const apiResponse = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${city},${region}&key=${GOOGLE_API_KEY}`)\r\n            //Parses over API and pulls out \"____ County\", replace removes county for disease API\r\n            const county = Object.values(apiResponse.data.results[0])[0][1].long_name.replace(/County/g, '')\r\n            register(username, email, password, country, region, city, county).then(\r\n                (response) => {\r\n                    setMessage(response.data.message)\r\n                    setSuccessful(true)\r\n                    console.log(\"COUNTY AFTER REGISTER\", county)\r\n                },\r\n                (error) => {\r\n                    setMessage(resMessage(error))\r\n                    setSuccessful(false)\r\n                }\r\n            )\r\n\r\n        } else {\r\n            successful(false)\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"container\">\r\n                <img\r\n                    src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n                    alt=\"profile-img\"\r\n                    className=\"profile-img-card\"\r\n                />\r\n                <Form onSubmit={handleSignup} ref={form}>\r\n\r\n                    <FormGroup text=\"username\">\r\n                        <Input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"username\"\r\n                            value={username}\r\n                            onChange={onChangeUsername}\r\n                            validations={[required, vusername]}\r\n                        />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup text=\"email\">\r\n                        <Input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"email\"\r\n                            value={email}\r\n                            onChange={onChangeEmail}\r\n                            validations={[required, validEmail]}\r\n                        />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup text=\"password\">\r\n                        <Input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            name=\"password\"\r\n                            value={password}\r\n                            onChange={onChangePassword}\r\n                            validations={[required, vpassword]}\r\n                        />\r\n                    </FormGroup>\r\n\r\n                    <CountryDropdown\r\n                        value={country}\r\n                        onChange={(val) => onChangeCountry(val)} />\r\n                    <RegionDropdown\r\n                        country={country}\r\n                        value={region}\r\n                        onChange={(val) => onChangeRegion(val)} />\r\n\r\n                    <FormGroup text=\"city\">\r\n                        <Input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"city\"\r\n                            value={city}\r\n                            onChange={onChangeCity}\r\n                            validations={[required]}\r\n                        />\r\n                    </FormGroup>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button className=\"btn\" >\r\n                            <span>Sign Up</span>\r\n                        </button>   \r\n                    </div>\r\n\r\n                    {message && (\r\n                        <div className=\"form-group\">\r\n                            <div className={successful ? \"alert alert-success\" : \"alert alert-danger\"} role=\"alert\">\r\n                                {message}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    <CheckButton style={{display: \"none\"}} ref={checkBtn}/>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Admin.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Dashboard.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Profile.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\common\\Layout.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\SearchForm.js",["103"],"import React, { useState } from 'react'\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\r\n\r\n// const API_URL_SEARCH = 'http://localhost:8080/search/'\r\n\r\nexport const SearchForm = () => {\r\n\r\n    const [country, setCountry] = useState('')\r\n    const [region, setRegion] = useState('')\r\n    const [city, setCity] = useState('')\r\n\r\n    const onChangeCountry = (val) => {\r\n        console.log(val)\r\n        setCountry(val)\r\n    }\r\n\r\n    const onChangeRegion = (val) => {\r\n        console.log(val)\r\n        setRegion(val)\r\n    }\r\n\r\n    const onChangeCity = (e) => {\r\n        const city = e.target.value\r\n        console.log(city)\r\n        setCity(city)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <CountryDropdown\r\n                value={country}\r\n                onChange={(val) => onChangeCountry(val)} />\r\n            <RegionDropdown\r\n                country={country}\r\n                value={region}\r\n                onChange={(val) => onChangeRegion(val)} />\r\n            <form text=\"city\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"city\"\r\n                    value={city}\r\n                    onChange={onChangeCity}\r\n                    \r\n                />\r\n            </form>\r\n            <Button color=\"primary\" type=\"submit\" name=\"action\">\r\n                search\r\n            </Button>\r\n    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchForm","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\common\\FormGroup.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\Statistics.js",["104","105"],"import React, { useState, useEffect } from 'react'\r\nimport { getPrimaryLocation } from '../services/user.service'\r\nimport { getCurrentUser } from '../services/auth.service'\r\nimport DeathsGraph from './DeathsGraph'\r\nimport CasesGraph from './CasesGraph'\r\n\r\nconst axios = require('axios')\r\n\r\n\r\nconst Statistics = () => {\r\n    const [primaryLocation, setPrimaryLocation] = useState({})\r\n    //Location states\r\n    const [country, setCountry] = useState('')\r\n    const [county, setCounty] = useState('')\r\n    const [region, setRegion] = useState('')\r\n    //API Stats states\r\n    const [confirmedCases, setConfirmedCases] = useState('')\r\n    const [deaths, setDeaths] = useState('')\r\n    const [recovered, setRecovered] = useState('')\r\n    const [updatedAt, setUpdatedAt] = useState('')\r\n    const [historicalDates, setHistoricalDates] = useState([])\r\n    const [historicalCases, setHistoricalCases] = useState([])\r\n    const [historicalDeaths, setHistoricalDeaths] = useState([])\r\n\r\n\r\n    useEffect(()=>{\r\n        getPrimaryLocation()\r\n        .then(response => {\r\n            setPrimaryLocation(response)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(()=> {\r\n        if(primaryLocation.county !== undefined) {\r\n            axios.get(`https://disease.sh/v3/covid-19/jhucsse/counties/${primaryLocation.county}`)\r\n            .then(response => {\r\n                response.data.forEach(data=> {\r\n                    if(primaryLocation.state === data.province) {\r\n                        setCountry(data.country)\r\n                        setCounty(data.county)\r\n                        setRegion(data.province)\r\n                        setConfirmedCases(data.stats.confirmed)\r\n                        setDeaths(data.stats.deaths)\r\n                        setRecovered(data.stats.recovered)\r\n                        setUpdatedAt(data.updatedAt)\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    }, [primaryLocation])\r\n\r\n    //https://disease.sh/v3/covid-19/historical/usacounties/texas?lastdays=30\r\n\r\n    useEffect(() => {\r\n        if(region !== undefined) {\r\n            axios.get(`https://disease.sh/v3/covid-19/historical/usacounties/${region.toLowerCase()}?lastdays=30`)\r\n            .then(response => {\r\n                response.data.forEach(data => {\r\n                    if (data.county !== undefined && data.county === county.toLowerCase()) {\r\n                        setHistoricalDates(Object.keys(data.timeline.cases))\r\n                        setHistoricalCases(Object.values(data.timeline.cases))\r\n                        setHistoricalDeaths(Object.values(data.timeline.deaths))\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    }, [region])\r\n\r\n\r\n    // const getStatistics = async () => {\r\n    //     await getPrimaryLocation()\r\n    //     .then(response => {\r\n    //         setPrimaryLocation(response)\r\n    //     })\r\n    // }\r\n\r\n    return(\r\n        <div>\r\n            Statistics\r\n            <p>Country: {country}</p>\r\n            <p>County: {county}</p>\r\n            <p>State: {region}</p>\r\n            <p>Confirmed Cases: {confirmedCases}</p>\r\n            <p>Deaths: {deaths}</p>\r\n            <p>Recovered: {recovered}</p>\r\n            <p>Last Updated: {updatedAt}</p>\r\n        \r\n            <CasesGraph dates={historicalDates} cases={historicalCases} />\r\n            <DeathsGraph dates={historicalDates} deaths={historicalDeaths} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Statistics","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\services\\auth.service.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\services\\user.service.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\utilities\\functions.utilities.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\utilities\\localStorage.utilities.js",[],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\utilities\\authHeader.utilities.js",[],["106","107"],"C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\DeathsGraph.js",["108","109"],"import React, { useState, useEffect } from 'react'\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\n\r\n\r\nconst CasesGraph = ({dates, deaths}) => {\r\n    const data = {\r\n        labels: dates,\r\n        datasets: [\r\n          {\r\n            label: \"Confirmed Deaths\",\r\n            data: deaths,\r\n            fill: true,\r\n            backgroundColor: \"rgba(255,0,0,0.2)\",\r\n            borderColor: \"rgba(255,0,0,1)\"\r\n          }\r\n        ]\r\n      };\r\n    \r\n    const options = {\r\n        title: {\r\n            display: true,\r\n            text: \"Confirmed Cases\"\r\n          }\r\n    }\r\n\r\n    return(\r\n        <div className=\"cases-graph\">\r\n            <Line data={data} options={options}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CasesGraph","C:\\Users\\ecgue\\Documents\\General_Assembly\\Unit_3\\Project 3\\team-6-frontend\\src\\components\\CasesGraph.js",["110","111"],"import React, { useState, useEffect } from 'react'\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\n\r\n\r\nconst CasesGraph = ({dates, cases}) => {\r\n    const data = {\r\n        labels: dates,\r\n        datasets: [\r\n          {\r\n            label: \"Confirmed Cases\",\r\n            data: cases,\r\n            fill: true,\r\n            backgroundColor: \"rgba(75,192,192,0.2)\",\r\n            borderColor: \"rgba(75,192,192,1)\"\r\n          }\r\n        ]\r\n      };\r\n    \r\n    const options = {\r\n        title: {\r\n            display: true,\r\n            text: \"Confirmed Cases\"\r\n          }\r\n    }\r\n\r\n    return(\r\n        <div className=\"cases-graph\">\r\n            <Line data={data} options={options}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CasesGraph",{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":76,"column":7,"nodeType":"118","endLine":76,"endColumn":9,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":1,"column":35,"nodeType":"122","messageId":"123","endLine":1,"endColumn":44},{"ruleId":"120","severity":1,"message":"124","line":6,"column":43,"nodeType":"122","messageId":"123","endLine":6,"endColumn":60},{"ruleId":"120","severity":1,"message":"124","line":4,"column":43,"nodeType":"122","messageId":"123","endLine":4,"endColumn":60},{"ruleId":"120","severity":1,"message":"125","line":3,"column":10,"nodeType":"122","messageId":"123","endLine":3,"endColumn":24},{"ruleId":"116","severity":1,"message":"126","line":67,"column":8,"nodeType":"118","endLine":67,"endColumn":16,"suggestions":"127"},{"ruleId":"112","replacedBy":"128"},{"ruleId":"114","replacedBy":"129"},{"ruleId":"120","severity":1,"message":"130","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":25},{"ruleId":"120","severity":1,"message":"121","line":1,"column":27,"nodeType":"122","messageId":"123","endLine":1,"endColumn":36},{"ruleId":"120","severity":1,"message":"130","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":25},{"ruleId":"120","severity":1,"message":"121","line":1,"column":27,"nodeType":"122","messageId":"123","endLine":1,"endColumn":36},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["133"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'CountryRegionData' is defined but never used.","'getCurrentUser' is defined but never used.","React Hook useEffect has a missing dependency: 'county'. Either include it or remove the dependency array.",["134"],["131"],["132"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},"Update the dependencies array to be: [id]",{"range":"139","text":"140"},"Update the dependencies array to be: [county, region]",{"range":"141","text":"142"},[2416,2418],"[id]",[2680,2688],"[county, region]"]