[{"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/index.js":"1","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/App.js":"2","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/Search.js":"3","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/SearchDetail.js":"4","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/About.js":"5","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/Admin.js":"6","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/Dashboard.js":"7","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/UserDetail.js":"8","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/Profile.js":"9","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/Login.js":"10","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/Signup.js":"11","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/Home.js":"12","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/common/Layout.js":"13","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/Statistics.js":"14","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/SearchForm.js":"15","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/common/Loading.js":"16","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/utilities/functions.utilities.js":"17","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/services/location.services.js":"18","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/services/auth.service.js":"19","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/services/user.service.js":"20","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/DeathsGraph.js":"21","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/CasesGraph.js":"22","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/StatisticsTable.js":"23","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/common/FormGroup.js":"24","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/utilities/authHeader.utilities.js":"25","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/utilities/localStorage.utilities.js":"26"},{"size":304,"mtime":1609725307355,"results":"27","hashOfConfig":"28"},{"size":1559,"mtime":1610074175067,"results":"29","hashOfConfig":"28"},{"size":8673,"mtime":1610146328626,"results":"30","hashOfConfig":"28"},{"size":3794,"mtime":1610075177660,"results":"31","hashOfConfig":"28"},{"size":154,"mtime":1609725307341,"results":"32","hashOfConfig":"28"},{"size":2210,"mtime":1610075177654,"results":"33","hashOfConfig":"28"},{"size":6038,"mtime":1610075177655,"results":"34","hashOfConfig":"28"},{"size":5396,"mtime":1610075177664,"results":"35","hashOfConfig":"28"},{"size":1031,"mtime":1609643400146,"results":"36","hashOfConfig":"28"},{"size":4427,"mtime":1610141617868,"results":"37","hashOfConfig":"28"},{"size":9162,"mtime":1610141557619,"results":"38","hashOfConfig":"28"},{"size":758,"mtime":1610141433532,"results":"39","hashOfConfig":"28"},{"size":2685,"mtime":1610141632840,"results":"40","hashOfConfig":"28"},{"size":3373,"mtime":1610075177662,"results":"41","hashOfConfig":"28"},{"size":7230,"mtime":1610149719459,"results":"42","hashOfConfig":"28"},{"size":454,"mtime":1610075177666,"results":"43","hashOfConfig":"28"},{"size":251,"mtime":1609544742778,"results":"44","hashOfConfig":"28"},{"size":1075,"mtime":1610141433537,"results":"45","hashOfConfig":"28"},{"size":1231,"mtime":1610141433536,"results":"46","hashOfConfig":"28"},{"size":2870,"mtime":1610141433537,"results":"47","hashOfConfig":"28"},{"size":698,"mtime":1609725307348,"results":"48","hashOfConfig":"28"},{"size":701,"mtime":1609725307342,"results":"49","hashOfConfig":"28"},{"size":4196,"mtime":1610075177663,"results":"50","hashOfConfig":"28"},{"size":293,"mtime":1610141433534,"results":"51","hashOfConfig":"28"},{"size":347,"mtime":1609643400159,"results":"52","hashOfConfig":"28"},{"size":426,"mtime":1609544742780,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"28a3tb",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/index.js",[],["119","120"],"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/App.js",[],"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/Search.js",[],"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/SearchDetail.js",["121","122"],"import React, {useState, useEffect, useRef} from 'react'\nimport Form from 'react-validation/build/form'\nimport Input from 'react-validation/build/input'\nimport { useParams, Link } from 'react-router-dom'\nimport { getOneLocation } from '../services/location.services'\nimport { addFavorite, getFavorites, removeFavorite } from '../services/user.service'\nimport { getCurrentUser } from '../services/auth.service'\n\nimport Statistics from './Statistics'\n\nconst SearchDetail = () => {\n    const form = useRef()\n    const [location, setLocation] = useState('')\n    const [currentUser, setCurrentUser] = useState(undefined)\n    const [favoriteLocations, setFavoriteLocations] = useState([])\n    const [message, setMessage] = useState('')\n    let { id } = useParams()\n\n    useEffect(() => {\n        getOneLocation(id).then(response => {\n            setLocation(response.data)\n            },\n            (error) => {\n                setMessage(error)\n                setLocation(error)\n            }\n        )\n        const user = getCurrentUser()\n        if(user) {\n            setCurrentUser(user)\n            getFavorites().then(favorites => {\n                setFavoriteLocations(favorites)\n            },\n            (error) => {\n                setMessage(error)\n                setFavoriteLocations(error)\n            })\n        }\n    },[])\n\n    const handleAddFavorite = e => {\n        e.preventDefault()\n        let user = currentUser.id\n        let id = e.target.id.value\n\n        addFavorite(user,id)\n        .then(response => {\n            // console.log(response.data)\n            setMessage(response.data)\n            window.location.reload()\n        })\n        .catch(err => setMessage(err))\n    }\n\n    const handleRemove = event => {\n        event.preventDefault()\n        let user = currentUser.id\n        let id = (event.target.id.value)\n\n        removeFavorite(user, id)\n        .then(response => {\n            // console.log(response.data)\n            setMessage(response.data)\n            window.location.reload()\n        })\n        .catch(err => setMessage(err))\n    }\n\n    return(\n        <>\n            {location ? (\n                <div>\n                    <h3>{location.city}, {location.state} - {location.country}</h3>\n                    {currentUser ? (\n                        <>\n                        {(favoriteLocations.length > 0 && favoriteLocations.some(existing => existing._id === location._id)) ? (\n                            <Form ref={form} onSubmit={handleRemove}>\n                                <Input type='hidden' value={location._id} name='id'/>\n                                <Input type='submit' value='Remove from Favorite Locations' name='submit'/>\n                            </Form>\n                        ) : (\n                            <Form ref={form} onSubmit={handleAddFavorite}>\n                                <Input type='hidden' value={location._id} name='id'/>\n                                <Input type='submit' value='Add to Favorite Locations' name='submit'/>\n                            </Form>\n                        )}\n                        </>\n                    ) : (\n                        <div><Link to='/login'>Login</Link> or <Link to='/register'>Register</Link> to add to favorite locations!</div>\n                    )}\n                </div>\n            ) : (\n                <div className='progress'>\n                    <span className='indeterminate'></span>\n                </div>\n            )}\n            <Statistics\n                newCountry={location.country}\n                newCounty={location.county}\n                newRegion={location.state}\n             />\n            <div>\n                <Link to='/search'>Back to Map</Link>\n            </div>\n        </>\n    )\n}\n\nexport default SearchDetail","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/About.js",[],"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/Admin.js",["123"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { getAllUsers } from '../services/user.service'\nimport {resMessage} from '../utilities/functions.utilities'\n\nconst Admin = () => {\n    const [users, setUsers] = useState('')\n    const [message, setMessage] = useState('')\n\n    useEffect(() => {\n        getAllUsers().then(response => {\n            setUsers(response.data)\n            },\n            (error) => {\n                setMessage(resMessage(error))\n                setUsers(error);\n              }\n        )\n    },[])\n    return(\n        <>\n            {users ? (\n                <div>\n                    <h1>All Users</h1>\n                    {/* {console.log(users)} */}\n                    {users.length > 0 ? (\n                        <div>\n                            {users.map(user => (\n                                <div key={user._id}>\n                                    <Link to={`/admin/users/${user._id}`}>\n                                        <h3>{user.username}</h3>\n                                    </Link>    \n                                    <p>{user.email}</p>\n                                    {user.primaryLocation && \n                                    <p>\n                                        {user.primaryLocation.city},{' '}\n                                        {user.primaryLocation.state},{' '} \n                                        {user.primaryLocation.county}{' '}-{' '}\n                                        {user.primaryLocation.country}\n                                    </p>}\n                                    {user.roles && \n                                        user.roles.map(role => <p key={role._id}>{role.name}</p>)\n                                    }\n                                </div>\n                            ))}\n                        </div>\n                    ) : (\n                        <div>No Users to Show!</div>\n                    )}\n                </div>\n            ) : (\n                <div className='progress'>\n                    <span className='indeterminate'></span>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default Admin","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/Dashboard.js",["124"],"import React, {useState, useEffect, useRef} from 'react'\nimport { Link } from 'react-router-dom'\nimport Form from 'react-validation/build/form'\nimport Input from 'react-validation/build/input'\n\nimport Statistics from './Statistics'\nimport Loading from './common/Loading'\n\nimport { getFavorites, getHistory, getPrimaryLocation, editPrimary, removeFavorite } from '../services/user.service'\nimport { getCurrentUser } from '../services/auth.service'\n      \nconst Dashboard = () => {\n    const form = useRef()\n    const [currentUser, setCurrentUser] = useState(undefined)\n    const [userDashboard, setUserDashboard] = useState(undefined)\n    const [searchHistory, setSearchHistory] = useState(undefined)\n    const [primaryLocation, setPrimaryLocation] = useState(undefined)\n    const [primaryCountry, setPrimaryCountry] = useState(undefined)\n    const [primaryCounty, setPrimaryCounty] = useState(undefined)\n    const [primaryState, setPrimaryState] = useState(undefined)\n    \n    \n    useEffect(()=> {\n        const user = getCurrentUser()\n        if(user) {\n          setCurrentUser(user)\n          getFavorites().then(favorites => setUserDashboard(favorites))\n          getHistory().then(history => setSearchHistory(history))\n        }\n      }, [])\n\n    useEffect(()=> {\n        getPrimaryLocation().then(location => {\n            setPrimaryLocation(location)\n            setPrimaryCountry(location.country)\n            setPrimaryCounty(location.county)\n            setPrimaryState(location.state)\n          })\n      }, [])\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        let user = currentUser.id\n        \n        let id = (event.target.id.value)\n        let city = (event.target.city.value)\n        let userState = (event.target.userState.value)\n        let country = (event.target.country.value)\n        let county = (event.target.county.value)\n\n        editPrimary(user,id,city,userState,country,county)\n        .then(response => {\n            console.log(response.data)\n            window.location.reload()\n        })\n        .catch(err => console.log(err))\n    }\n\n    const handleRemove = event => {\n        event.preventDefault()\n        let user = currentUser.id\n        let id = (event.target.id.value)\n\n        removeFavorite(user, id)\n        .then(response => {\n            console.log(response.data)\n            window.location.reload()\n        })\n        .catch(err => console.log(err))\n    }\n\n    return(\n        <>\n        {currentUser ? (\n        <div className='container'>\n            <h1>Dashboard - {currentUser.username}</h1>\n            {primaryLocation ? (\n                <div>\n                    <h3>My Primary Location</h3>\n                    <div>\n                        <h4>{primaryLocation.city}, {primaryLocation.state} - {primaryLocation.country}</h4>\n                        <Statistics\n                            newCountry={primaryCountry}\n                            newCounty={primaryCounty}\n                            newRegion={primaryState}\n                        />\n                    </div>\n                </div>\n            ) : (\n                <div>No Primary Location set</div>\n            )}\n        </div>\n        ) : (\n            <div>Please <Link to='/login'>Login</Link> or <Link to='/register'>Register</Link> to add to view this page</div>\n        )}\n        {userDashboard ? (\n        <div>\n            {/* {setLoading(false)} */}\n            {/* {console.log(userDashboard)} */}\n            {userDashboard.length > 0 ? (\n                <div>\n                <h2>My Locations</h2>\n                <div>\n                    {userDashboard.map(favorite=> (\n                        <div key={favorite._id}>\n                            <h4>{favorite.city}, {favorite.state} - {favorite.country}</h4>\n                            <Form onSubmit={handleSubmit} ref={form}>\n                                <Input type='hidden' value={favorite._id} name='id' />\n                                <Input type='hidden' value={favorite.city} name='city' />\n                                <Input type='hidden' value={favorite.state} name='userState' />\n                                <Input type='hidden' value={favorite.country} name='country' />\n                                <Input type='hidden' value={favorite.county} name='county' />\n                                <Input type='submit' value='Set as Primary Location' name='submit' />\n                            </Form>\n                            <Form onSubmit={handleRemove} ref={form}>\n                                <Input type='hidden' value={favorite._id} name='id' />\n                                <Input type='submit' value='Remove from My Locations' name='submit' />\n                            </Form>\n                        </div>\n                    ))}\n                </div>\n                </div>\n            ) : (\n                <div>No Locations to Display!</div>\n            )}\n        </div>\n        ) : (\n            <div>\n                <div className='progress'>\n                    <span className='indeterminate'></span>\n                </div>\n            </div>\n        )}\n        {searchHistory ? (\n        <div>\n            Search History\n            {/* {setLoading(false)} */}\n            {/* {console.log(searchHistory)} */}\n            {searchHistory.length > 0 ? (\n                <div>\n                <ul>\n                    {searchHistory.map((history, index)=> (\n                        <li key={index}><Link to= {`/search/${history._id}`}>{history.city}, {history.state}, {history.country}</Link></li>\n                    ))}\n                </ul>\n                </div>\n            ) : (\n                <div>No Search History to Display! Get started <Link to='/search'>here</Link></div>\n            )}\n        </div>\n        ) : (\n            <div>\n                <div className='progress'>\n                    <span className='indeterminate'></span>\n                </div>\n            </div>\n        )}\n        </>\n\n    )\n}\n\nexport default Dashboard","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/UserDetail.js",["125","126"],"import React, {useState, useEffect, useRef} from 'react'\nimport Form from 'react-validation/build/form'\nimport Input from 'react-validation/build/input'\nimport { useParams } from 'react-router-dom'\nimport { getOneUser, getRoles, addUserRoles, removeUserRoles, deleteUser } from '../services/user.service'\n\nconst UserDetail = (props) => {\n    const form = useRef()\n    const [user, setUser] = useState('')\n    const [roles, setRoles] = useState('')\n    const [message, setMessage] = useState('')\n    let { id } = useParams()\n\n    const handleAddRole = (event) => {\n        event.preventDefault()\n        let roleId = event.target.roleId.value\n        let roleName = event.target.roleName.value\n        const newRole =\n            {\n                _id: roleId, \n                name: roleName\n            }\n        // console.log(newRole)\n        addUserRoles(id,newRole)\n        .then(response => {\n            setMessage(response.data)\n            window.location.reload()\n        })\n        .catch(err => setMessage(err))\n    }\n\n    const handleRemoveRole = (event) => {\n        event.preventDefault()\n        let roleId = event.target.roleId.value\n        let roleName = event.target.roleName.value\n        const newRole =\n            {\n                _id: roleId, \n                name: roleName\n            }\n        // console.log(newRole)\n        removeUserRoles(id,newRole)\n        .then(response => {\n            setMessage(response.data)\n            window.location.reload()\n        })\n        .catch(err => setMessage(err))\n    }\n\n    const handleDelete = e => {\n        e.preventDefault()\n        deleteUser(id)\n        .then(\n            ()=> {\n                props.history.push('/admin')\n                window.location.reload()\n            }\n        )\n        .catch(err => {setMessage(err)})\n        // console.log(id)\n    }\n\n    useEffect(() => {\n        getOneUser(id).then(response => {\n            setUser(response.data)\n            },\n            (error) => {\n                setMessage(error)\n                setUser(error)\n              }\n        )\n        getRoles().then(response => {\n            setRoles(response.data)\n            },\n            (error) => {\n                setMessage(error)\n                setRoles(error);\n              }\n        )\n    },[])\n    \n    return(\n        <>\n            {user ? (\n                <div>\n                    <h1>{user.username}</h1>\n                    <p>{user.email}</p>\n                    {user.primaryLocation && \n                    <p>\n                        {user.primaryLocation.city},{' '}\n                        {user.primaryLocation.state},{' '} \n                        {user.primaryLocation.county}{' '}-{' '}\n                        {user.primaryLocation.country}\n                    </p>}\n                    <Form onSubmit={handleDelete} ref={form}>\n                        <Input type='submit' value='Delete User' />\n                    </Form>\n                    {user.roles && \n                        user.roles.map(role => \n                        <div key={role._id}>\n                            <p>{role.name}</p>\n                            <Form onSubmit={handleRemoveRole} ref={form}>\n                                <Input type='hidden' value={role._id} name='roleId'/>\n                                <Input type='hidden' value={role.name} name='roleName'/>\n                                <Input type='submit'  value='Remove Role'/>\n                            </Form>\n                        </div>)\n                    }\n                    {/* {console.log(user)} */}\n                </div>\n            ) : (\n                <div className='progress'>\n                    <span className='indeterminate'></span>\n                </div>\n            )}\n            {roles ? (\n                <div>\n                    <h4>Add Roles</h4>\n                {/* {console.log(roles)} */}\n                {roles.length > 0 ? (\n                    <div>\n                        {/* {console.log(user.roles)} */}\n                            {roles.map(role => (\n                                <>\n                                    {(user.roles && user.roles.some(existing => existing._id === role._id)) ? (\n                                        <></>\n                                    ) : (\n                                        <div key={role._id}>\n                                            <p>{role.name}</p>\n                                            <Form onSubmit={handleAddRole} ref={form}>\n                                                <Input type='hidden' value={role._id} name='roleId'/>\n                                                <Input type='hidden' value={role.name} name='roleName'/>\n                                                <Input type='submit'  value='Add Role'/>\n                                            </Form>\n                                        </div>\n                                    )}\n                                </>\n                            )\n                        )}\n                    </div>\n                ) : (\n                    <div>No roles to display!</div>\n                )\n            }\n                </div>\n            ) : (\n                <div className='progress'>\n                    <span className='indeterminate'></span>\n                </div>\n            )}\n        </>\n    )\n\n}\n\nexport default UserDetail","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/Profile.js",[],"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/Login.js",["127"],"import React, { useState, useRef } from 'react'\nimport { Link } from 'react-router-dom'\nimport Form from 'react-validation/build/form'\nimport Input from 'react-validation/build/input'\nimport CheckButton from 'react-validation/build/button'\n\n// Components\nimport Loading from './common/Loading'\n\n// Helper\nimport { login } from '../services/auth.service'\nimport { resMessage } from '../utilities/functions.utilities'\n\n//Function given to react-validator\nconst required = (value) => {\n    if(!value){\n        return (\n            <div className='alert'>\n                This field is required!\n            </div>\n        )\n    }\n}\n\nconst Login = (props) => {\n    const form = useRef()\n    const checkBtn = useRef()\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [loading, setLoading] = useState(false)\n    const [message, setMessage] = useState('')\n\n    const onChangeUsername = (e) => {\n        const username = e.target.value\n        setUsername(username)\n    }\n\n    const onChangePassword = (e) => {\n        const password = e.target.value\n        setPassword(password)\n    }\n\n    const handleLogin = (e) => {\n        //Prevent reload of pressing the button\n        e.preventDefault()\n        //Prevent message clear them out\n        setMessage('')\n        setLoading(true)\n\n        // validtes all the fields in your form\n        form.current.validateAll()\n        \n        // Validator stores errors and we can check if errors exist\n        if(checkBtn.current.context._errors.length === 0) {\n            login(username, password).then(\n                ()=> {\n                    props.history.push('/dashboard')\n                    window.location.reload()\n                },\n                (error) => {                    \n                    // Setting loading to false and return the error\n                    setLoading(false)\n                    setMessage(resMessage(error))\n                }\n            )\n        } else {\n            loading(false)\n        }\n\n\n    }\n\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <div class=\"input-field img-container\">\n                <img\n                    src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n                    alt=\"profile-img\"\n                    className=\"profile-img-card\"\n                />\n\n                <Form onSubmit={handleLogin} ref={form}>\n                    <label for='username'>Username</label>\n                    <div className='input-field'>\n                        <Input\n                            type=\"text\"\n                            // className=\"form-control\"\n                            name=\"username\"\n                            value={username}\n                            onChange={onChangeUsername}\n                            validations={[required]}\n                        />\n                    </div>\n\n                    <label for='password'>Password</label>\n                    <div className='input-field'>\n                        <Input\n                            type=\"password\"\n                            // className=\"form-control\"\n                            name=\"password\"\n                            value={password}\n                            onChange={onChangePassword}\n                            validations={[required]}\n                        />\n                    </div>\n                    \n                    <div className=\"input-field\">\n                        <button className=\"btn waves-effect waves-light\">\n                            <span>Login</span>\n                            <i class=\"material-icons right\">send</i>\n                        </button>   \n                    </div>\n\n                    {message && (\n                        <div className='input-field'>\n                            <div className='alert alert-danger' role='alert'>\n                                {message}\n                            </div>\n                        </div>\n                    )}\n\n                    <CheckButton style={{display: 'none'}} ref={checkBtn}/>\n                    \n                    <div className=\"input-field\">\n                        <p>Not a member? <Link to=\"/register\">Sign Up</Link></p>           \n                    </div>\n                </Form>\n                </div>\n            </div>\n        </div>\n        \n    )\n}\n\nexport default Login","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/Signup.js",["128"],"import React, { useState, useRef } from 'react'\nimport { Link } from 'react-router-dom'\nimport Form from 'react-validation/build/form'\nimport Input from 'react-validation/build/input'\nimport CheckButton from 'react-validation/build/button'\nimport { isEmail } from \"validator\"\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\n\n//Helper\nimport { register, login } from '../services/auth.service'\nimport { resMessage } from '../utilities/functions.utilities'\n\nconst axios = require('axios')\nconst GOOGLE_API_KEY = 'AIzaSyDbjklIejS9yn5KhRaEWen72vYpBu_0BZo'\n\n//Function given to react-validator\nconst required = (value) => {\n    if(!value){\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        )\n    }\n}\n\n//Function that validates username\nconst vusername = (value) => {\n    if(value.length < 3 || value.length >= 20) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                Your username must be between 3 and 20 characters\n            </div>\n        )\n    }\n}\n\n//Function that validates passwords\nconst vpassword = (value) => {\n    if(value.length < 6 || value.length >= 40) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                Your password must be between 6 and 40 characters\n            </div>\n        )\n    }\n}\n\nconst validEmail = (value) => {\n    if(!isEmail) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                Submitted e-mail not valid\n            </div>\n        )\n    }\n}\n\nconst Register = (props) => {\n    const form = useRef()\n    const checkBtn = useRef()\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [email, setEmail] = useState('')\n    const [message, setMessage] = useState('')\n    const [successful, setSuccessful] = useState(false)\n    const [country, setCountry] = useState('')\n    const [region, setRegion] = useState('')\n    const [city, setCity] = useState('')\n    const [loading, setLoading] = useState(false)\n    \n    const onChangeUsername = (e) => {\n        const username = e.target.value\n        setUsername(username)\n    }\n\n    const onChangePassword = (e) => {\n        const password = e.target.value\n        setPassword(password)\n    }\n\n    const onChangeEmail = (e) => {\n        const email = e.target.value\n        setEmail(email)\n    }\n\n    const onChangeCountry = (val) => {\n        console.log(val)\n        setCountry(val)\n    }\n\n    const onChangeRegion = (val) => {\n        console.log(val)\n        setRegion(val)\n    }\n\n    const onChangeCity = (e) => {\n        const city = e.target.value\n        console.log(city)\n        setCity(city)\n    }\n\n    const handleSignup = async (e) => {\n        //Prevent reload of pressing the button\n        e.preventDefault()\n        //Prevent message clear them out\n        setMessage(\"\")\n        setSuccessful(false)\n        //delay for 2 seconds then switch to the login page\n        \n        \n        // validtes all the fields in your form\n        form.current.validateAll()\n        \n        // Validator stores errors and we can check if errors exist\n        \n        if(checkBtn.current.context._errors.length === 0) {\n            //Google API request\n            const apiResponse = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${city},${region}&key=${GOOGLE_API_KEY}`)\n            //Parses over API and pulls out \"____ County\", replace removes county for disease API\n            const county = Object.values(apiResponse.data.results[0])[0][1].long_name.replace(/County/g, '')\n            register(username, email, password, country, region, city, county).then(\n                (response) => {\n                    setMessage(response.data.message)\n                    setSuccessful(true)\n                    // console.log(\"COUNTY AFTER REGISTER\", county)\n                    login(username, password).then(\n                        ()=> {\n                            props.history.push(\"/dashboard\")\n                            window.location.reload()\n                        },\n                        (error) => {\n                            // Checking all the data received from our backend\n                            \n                            // Setting loading to false and return the error\n                            setLoading(false)\n                            setMessage(resMessage(error))\n                        }\n                    )\n                },\n                (error) => {\n                    setMessage(resMessage(error))\n                    setSuccessful(false)\n                }\n            )\n\n        } else {\n            successful(false)\n        }\n\n\n    }\n\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"input-field img-container\">\n                    <img\n                        src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n                        alt=\"profile-img\"\n                        className=\"profile-img-card\"\n                    />\n                </div>\n                <Form onSubmit={handleSignup} ref={form} className=\"form\">\n                        <label for='username'>Username</label>\n                        <div className='input-field'>\n                            <Input\n                                type=\"text\"\n                                name=\"username\"\n                                value={username}\n                                placeholder=\"Username\"\n                                onChange={onChangeUsername}\n                                validations={[required, vusername]}\n                            />\n                            \n                        </div>\n\n                        <label for=\"email\">Email</label>\n                        <div className='input-field'>\n                            <Input\n                                type=\"email\"\n                                name=\"email\"\n                                value={email}\n                                placeholder=\"Email\"\n                                onChange={onChangeEmail}\n                                validations={[required, validEmail]}\n                            />\n                        </div>\n\n                        <label for='password'>Password</label>\n                        <div className='input-field'>\n                            <Input\n                                type=\"password\"\n                                name=\"password\"\n                                value={password}\n                                placeholder=\"Password\"\n                                onChange={onChangePassword}\n                                validations={[required, vpassword]}\n                            />\n                        </div>\n                        <div className=\"input-field\">\n                            <CountryDropdown\n                                className=\"browser-default\"\n                                value={country}\n                                onChange={(val) => onChangeCountry(val)} />\n                        </div>\n\n                        <div className=\"input-field\">\n                            <RegionDropdown\n                                className=\"browser-default\"\n                                country={country}\n                                value={region}\n                                onChange={(val) => onChangeRegion(val)} />\n                        </div>\n\n                        <label for='city'>City</label>\n                        <div className='input-field'>\n                            <Input\n                                type=\"text\"\n                                name=\"city\"\n                                value={city}\n                                placeholder=\"City\"\n                                onChange={onChangeCity}\n                                validations={[required]}\n                            />\n                        </div>\n                        \n\n                        <div className=\"input-field\">\n                            <button className=\"btn waves-effect waves-light\">\n                                <span>Sign Up</span>\n                                <i class=\"material-icons right\">send</i>\n                            </button>   \n                        </div>\n\n\n                        {message && (\n                            <div className=\"input-field\">\n                                <div className={successful ? \"alert alert-success\" : \"alert alert-danger\"} role=\"alert\">\n                                    {message}\n                                </div>\n                            </div>\n                        )}\n\n                        <CheckButton style={{display: \"none\"}} ref={checkBtn}/>\n\n                        <div className=\"input-field\">\n                            <p>Already a member? <Link to=\"/login\">Log In</Link></p>          \n                        </div>\n                </Form>\n            </div>\n        </div>\n    )\n}\n\nexport default Register","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/Home.js",[],"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/common/Layout.js",[],"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/Statistics.js",["129"],"import React, { useState, useEffect } from 'react'\nimport DeathsGraph from './DeathsGraph'\nimport CasesGraph from './CasesGraph'\nimport StatisticsTable from './StatisticsTable'\n\n\nconst axios = require('axios')\n\n\nconst Statistics = ({newCountry, newCounty, newRegion}) => {\n    //Location states\n    const [country, setCountry] = useState(newCountry)\n    const [county, setCounty] = useState(newCounty)\n    const [region, setRegion] = useState(newRegion)\n    //API Stats states\n    const [confirmedCases, setConfirmedCases] = useState('')\n    const [deaths, setDeaths] = useState('')\n    const [recovered, setRecovered] = useState('')\n    const [updatedAt, setUpdatedAt] = useState('')\n    const [historicalDates, setHistoricalDates] = useState([])\n    const [historicalCases, setHistoricalCases] = useState([])\n    const [historicalDeaths, setHistoricalDeaths] = useState([])\n    const [dayFilter, setDayFilter] = useState(30)\n\n    const onChangeDayFilter = (event, val) => {\n        setDayFilter(val)\n        console.log(dayFilter)\n    }\n    \n    useEffect(()=> {\n        if(newCounty !== undefined) {\n            axios.get(`https://disease.sh/v3/covid-19/jhucsse/counties/${newCounty}`)\n            .then(response => {\n                response.data.forEach(data=> {\n                    if(newRegion === data.province) {\n                        setCountry(data.country)\n                        setCounty(data.county)\n                        setRegion(data.province)\n                        setConfirmedCases(data.stats.confirmed)\n                        setDeaths(data.stats.deaths)\n                        setRecovered(data.stats.recovered)\n                        setUpdatedAt(data.updatedAt)\n                    }\n                })\n            })\n        }\n    }, [newCountry, newCounty, newRegion])\n\n\n    useEffect(() => {\n        if(region !== undefined) {\n            axios.get(`https://disease.sh/v3/covid-19/historical/usacounties/${region.toLowerCase()}?lastdays=${dayFilter}`)\n            .then(response => {\n                response.data.forEach(data => {\n                    if (data.county !== undefined && data.county === county.toLowerCase()) {\n                        setHistoricalDates(Object.keys(data.timeline.cases))\n                        setHistoricalCases(Object.values(data.timeline.cases))\n                        setHistoricalDeaths(Object.values(data.timeline.deaths))\n                    }\n                })\n            })\n        }\n    }, [region, dayFilter])\n\n\n    return(\n        <div>\n            Statistics\n            <p>Country: {country}</p>\n            <p>County: {county}</p>\n            <p>State: {region}</p>\n            <p>Confirmed Cases: {confirmedCases}</p>\n            <p>Deaths: {deaths}</p>\n            <p>Recovered: {recovered}</p>\n            <p>Last Updated: {updatedAt}</p>\n            <h3>Filters: </h3>\n            <ul>\n                <button onClick={e => onChangeDayFilter(e, 7)}>7 Days</button>\n                <button onClick={e => onChangeDayFilter(e, 30)}>30 Days</button>\n                <button onClick={e => onChangeDayFilter(e, \"all\")}>All</button>\n            </ul>\n\n            <CasesGraph dates={historicalDates} cases={historicalCases} />\n            <DeathsGraph dates={historicalDates} deaths={historicalDeaths} />\n\n            <StatisticsTable />\n\n        </div>\n    )\n\n}\n\nexport default Statistics","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/SearchForm.js",["130"],"// import React from \"react\"\nimport React, { useRef, useEffect, useState } from \"react\";\nimport useSWR from \"swr\";\n//import component\nimport SearchForm from \"./SearchForm\";\n\nconst mapboxgl = require('mapbox-gl/dist/mapbox-gl.js');\n\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiYmluYXJ5YmVhc3QiLCJhIjoiY2tpbTU3cW8xMHE1ZTJycXJkemdjZThmMSJ9.LUCLnUpyYjcUF48GPUEUVQ';\n\nfunction Search() {\n    const [searchTerm, setSearchTerm] = useState(null)\n    const [searchLatitude, setSearchLatitude] = useState(16)\n    const [searchLongitude, setSearchLongitude] = useState(27)\n\n    const mapboxElRef = useRef(null);\n\n    const setLatAndLong = (latitude, longitude)  =>{\n      setSearchLatitude(latitude)\n      setSearchLongitude(longitude)\n      console.log(\"---testing---\",latitude, longitude)\n\n    }\n    const setSearch = (value) => {\n\n      console.log(value)\n      setSearchTerm(value)\n      // data = useSWR(\"https://disease.sh/v3/covid-19/jhucsse\", fetcher);\n    }\n    //  const onChange = (latitude, longitude) =>  {\n    //     map.jumpTo({\n    //       center: [latitude, longitude],\n    //       zoom: 8,\n    //       pitch: 45,\n    //       bearing: 90\n    //       });\n    //    }\n    const fetcher = (url,city,state,county,country) =>\n    fetch(url) \n     \n      .then(r => r.json())\n      .then(data =>\n        \n        data.map((point, index) => {\n\n            // i need to another if statement to check if the search terms matches\n            if(searchTerm) {\n              console.log(\"---testing---\", searchTerm)\n                return {\n                    type: \"Feature\",\n                    geometry: {\n                      type: \"Point\",\n                      coordinates: [\n                        point.coordinates.longitude,\n                        point.coordinates.latitude\n                      ]\n                    },\n                    properties: {\n                      id: index, // unique identifier in this case the index\n                      country: point.country,\n                      province: point.province,\n                      county: point.county,\n                      cases: point.stats.confirmed,\n                      deaths: point.stats.deaths,\n                      recovered: point.stats.recovered\n                    }\n            }\n         } else {\n                return {\n                    type: \"Feature\",\n                    geometry: {\n                      type: \"Point\",\n                      coordinates: [\n                        point.coordinates.longitude,\n                        point.coordinates.latitude\n                      ]\n                    },\n                    properties: {\n                      id: index, // unique identifier in this case the index\n                      country: point.country,\n                      province: point.province,\n                      county: point.county,\n                      cases: point.stats.confirmed,\n                      deaths: point.stats.deaths,\n                      recovered: point.stats.recovered\n                    }\n            }\n            \n        }})\n      );\n \n       \n   \n  // Fetching our data with swr package\n  let { data } = useSWR(\"https://disease.sh/v3/covid-19/jhucsse\", fetcher);\n    \n    useEffect(() => {\n      console.log(\"rerender\")\n        if (data) {\n        // You can store the map instance with useRef too\n        const map = new mapboxgl.Map({\n          container: mapboxElRef.current,\n          style: \"mapbox://styles/binarybeast/ckjdljfpu6smv1ao028dmjh4r\",\n          center: [searchLatitude, searchLongitude], // initial geo location\n          zoom: 1.5 // initial zoom\n        });\n        \n        map.addControl(new mapboxgl.NavigationControl());\n      let filterData = data\n      if(searchTerm){\n        console.log(searchTerm)\n        filterData = data.filter((locationData) => locationData.properties.country === searchTerm.country)\n      }\n      console.log(filterData)\n      console.log(data)\n     // Call this method when the map is loaded\n     map.once(\"load\", function() {\n        // Add our SOURCE\n        // with id \"points\"\n        map.addSource(\"points\", {\n          type: \"geojson\",\n          data: {\n            type: \"FeatureCollection\",\n            features: filterData\n          }\n        });\n\n        // Add our layer\n        map.addLayer({\n          id: \"circles\",\n          source: \"points\", // this should be the id of the source\n          type: \"circle\",\n          // paint properties\n          paint: {\n            \"circle-opacity\": 0.75,\n            \"circle-stroke-width\": 1,\n            \"circle-radius\": 4,\n            \"circle-color\": \"#FFEB3B\"\n          }\n        });\n        // Create a mapbox popup\nconst popup = new mapboxgl.Popup({\n    closeButton: true,\n    closeOnClick: true\n  });\n  \n  // Variable to hold the active country/province on hover\n  let lastId;\n  \n  // Mouse move event\n  map.on(\"mousemove\", \"circles\", e => {\n    // Get the id from the properties\n    const id = e.features[0].properties.id;\n  \n    // Only if the id are different we process the tooltip\n    if (id !== lastId) {\n      lastId = id;\n  \n      // Change the pointer type on move move\n      map.getCanvas().style.cursor = \"pointer\";\n  \n      const { cases, deaths, country, province,county,recovered } = e.features[0].properties;\n      const coordinates = e.features[0].geometry.coordinates.slice();\n  \n      const provinceHTML =\n        province !== \"null\" ? `<p>Province: <b>${province}</b></p>` : \"\";\n  \n        const cityHTML =\n        county !== \"null\" ? `<p>City: <b>${county}</b></p>` : \"\";\n      const mortalityRate = ((deaths / cases) * 100).toFixed(2);\n  \n      const HTML = `<p>Country: <b>${country}</b></p>\n                ${provinceHTML}\n                ${cityHTML}\n                <p>Cases: <b>${cases}</b></p>\n                <p>Recovered: <b>${recovered}</b></p>\n                <p>Deaths: <b>${deaths}</b></p>\n                <p>Mortality Rate: <b>${mortalityRate}%</b></p>\n               `;\n  \n      // Ensure that if the map is zoomed out such that multiple\n      // copies of the feature are visible, the popup appears\n      // over the copy being pointed to.\n      while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n        coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n      }\n  \n      popup\n        \n        .setLngLat(coordinates)\n        .setHTML(HTML)\n        .addTo(map);\n    }\n  });\n   \n\n  // Mouse leave event\n  map.on(\"mouseleave\", \"circles\", function() {\n    // Reset the last Id\n    lastId = undefined;\n    map.getCanvas().style.cursor = \"\";\n    popup.remove();\n  });\n      });\n      if(searchLatitude) {\n      map.jumpTo({\n      center: [searchLatitude, searchLongitude],\n      zoom: 8,\n      pitch: 45,\n      bearing: 90\n      });\n    }\n    }\n\n    \n    \n  }, [searchTerm, searchLatitude, data]);\n\n    \n    return (\n        <div className=\"App\">\n            <div>\n                <h1>Covid-19 Cases</h1>\n                < SearchForm setSearch={setSearch} setLatAndLong={setLatAndLong} />\n            </div>\n          <div className=\"mapContainer\">\n            {/* Assigned Mapbox container */}\n            <div className=\"mapBox\" ref={mapboxElRef} />\n          </div>\n        </div>\n      );\n    }\n\nexport default Search\n\n","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/common/Loading.js",[],"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/utilities/functions.utilities.js",[],"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/services/location.services.js",[],"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/services/auth.service.js",[],"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/services/user.service.js",[],"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/DeathsGraph.js",["131","132"],"import React, { useState, useEffect } from 'react'\nimport { Line } from \"react-chartjs-2\";\n\n\n\nconst CasesGraph = ({dates, deaths}) => {\n    const data = {\n        labels: dates,\n        datasets: [\n          {\n            label: \"Confirmed Deaths\",\n            data: deaths,\n            fill: true,\n            backgroundColor: \"rgba(255,0,0,0.2)\",\n            borderColor: \"rgba(255,0,0,1)\"\n          }\n        ]\n      };\n    \n    const options = {\n        title: {\n            display: true,\n            text: \"Confirmed Cases\"\n          }\n    }\n\n    return(\n        <div className=\"cases-graph\">\n            <Line data={data} options={options}/>\n        </div>\n    )\n}\n\nexport default CasesGraph","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/CasesGraph.js",["133","134"],"import React, { useState, useEffect } from 'react'\nimport { Line } from \"react-chartjs-2\";\n\n\n\nconst CasesGraph = ({dates, cases}) => {\n    const data = {\n        labels: dates,\n        datasets: [\n          {\n            label: \"Confirmed Cases\",\n            data: cases,\n            fill: true,\n            backgroundColor: \"rgba(75,192,192,0.2)\",\n            borderColor: \"rgba(75,192,192,1)\"\n          }\n        ]\n      };\n    \n    const options = {\n        title: {\n            display: true,\n            text: \"Confirmed Cases\"\n          }\n    }\n\n    return(\n        <div className=\"cases-graph\">\n            <Line data={data} options={options}/>\n        </div>\n    )\n}\n\nexport default CasesGraph","/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/StatisticsTable.js",[],"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/components/common/FormGroup.js",[],["135","136"],"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/utilities/authHeader.utilities.js",[],"/Users/kishonst.clair/Desktop/Unit3/Covid/team-6-frontend/src/utilities/localStorage.utilities.js",[],["137","138"],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":16,"column":12,"nodeType":"145","messageId":"146","endLine":16,"endColumn":19},{"ruleId":"147","severity":1,"message":"148","line":39,"column":7,"nodeType":"149","endLine":39,"endColumn":9,"suggestions":"150"},{"ruleId":"143","severity":1,"message":"144","line":9,"column":12,"nodeType":"145","messageId":"146","endLine":9,"endColumn":19},{"ruleId":"143","severity":1,"message":"151","line":7,"column":8,"nodeType":"145","messageId":"146","endLine":7,"endColumn":15},{"ruleId":"143","severity":1,"message":"144","line":11,"column":12,"nodeType":"145","messageId":"146","endLine":11,"endColumn":19},{"ruleId":"147","severity":1,"message":"148","line":80,"column":7,"nodeType":"149","endLine":80,"endColumn":9,"suggestions":"152"},{"ruleId":"143","severity":1,"message":"151","line":8,"column":8,"nodeType":"145","messageId":"146","endLine":8,"endColumn":15},{"ruleId":"143","severity":1,"message":"153","line":71,"column":12,"nodeType":"145","messageId":"146","endLine":71,"endColumn":19},{"ruleId":"147","severity":1,"message":"154","line":63,"column":8,"nodeType":"149","endLine":63,"endColumn":27,"suggestions":"155"},{"ruleId":"147","severity":1,"message":"156","line":218,"column":6,"nodeType":"149","endLine":218,"endColumn":40,"suggestions":"157"},{"ruleId":"143","severity":1,"message":"158","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":25},{"ruleId":"143","severity":1,"message":"159","line":1,"column":27,"nodeType":"145","messageId":"146","endLine":1,"endColumn":36},{"ruleId":"143","severity":1,"message":"158","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":25},{"ruleId":"143","severity":1,"message":"159","line":1,"column":27,"nodeType":"145","messageId":"146","endLine":1,"endColumn":36},{"ruleId":"139","replacedBy":"160"},{"ruleId":"141","replacedBy":"161"},{"ruleId":"139","replacedBy":"162"},{"ruleId":"141","replacedBy":"163"},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"no-unused-vars","'message' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["166"],"'Loading' is defined but never used.",["167"],"'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'county'. Either include it or remove the dependency array.",["168"],"React Hook useEffect has a missing dependency: 'searchLongitude'. Either include it or remove the dependency array.",["169"],"'useState' is defined but never used.","'useEffect' is defined but never used.",["164"],["165"],["164"],["165"],"no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},{"desc":"170","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},"Update the dependencies array to be: [id]",{"range":"177","text":"178"},{"range":"179","text":"178"},"Update the dependencies array to be: [region, dayFilter, county]",{"range":"180","text":"181"},"Update the dependencies array to be: [searchTerm, searchLatitude, data, searchLongitude]",{"range":"182","text":"183"},[1334,1336],"[id]",[2287,2289],[2472,2491],"[region, dayFilter, county]",[6768,6802],"[searchTerm, searchLatitude, data, searchLongitude]"]